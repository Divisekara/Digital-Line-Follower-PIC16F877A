

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jan 05 16:59:35 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126                           
   127                           	psect	nvBANK0
   128  0064                     __pnvBANK0:	
   129  0064                     _freq:	
   130  0064                     	ds	4
   131  001B                     _CCPR2L	set	27
   132  0015                     _CCPR1L	set	21
   133  0042                     _RD2	set	66
   134  0041                     _RD1	set	65
   135  0044                     _RD4	set	68
   136  0043                     _RD3	set	67
   137  0030                     _RB0	set	48
   138  0031                     _RB1	set	49
   139  0032                     _RB2	set	50
   140  0033                     _RB3	set	51
   141  0034                     _RB4	set	52
   142  0035                     _RB5	set	53
   143  0036                     _RB6	set	54
   144  0037                     _RB7	set	55
   145  0091                     _T2CKPS1	set	145
   146  0090                     _T2CKPS0	set	144
   147  00EA                     _CCP2M2	set	234
   148  00EB                     _CCP2M3	set	235
   149  0092                     _TMR2ON	set	146
   150  00BA                     _CCP1M2	set	186
   151  00BB                     _CCP1M3	set	187
   152  00EC                     _CCP2Y	set	236
   153  00ED                     _CCP2X	set	237
   154  00BC                     _CCP1Y	set	188
   155  00BD                     _CCP1X	set	189
   156  0086                     _TRISB	set	134
   157  0088                     _TRISD	set	136
   158  0087                     _TRISC	set	135
   159  0092                     _PR2	set	146
   160  0439                     _TRISC1	set	1081
   161  043A                     _TRISC2	set	1082
   162                           
   163                           ; #config settings
   164  0000                     
   165                           	psect	cinit
   166  07FC                     start_initialization:	
   167  07FC                     __initialization:	
   168  07FC                     end_of_initialization:	
   169                           ;End of C runtime variable initialization code
   170                           
   171  07FC                     __end_of__initialization:	
   172  07FC  0183               	clrf	3
   173  07FD  120A  118A  2BA8   	ljmp	_main	;jump to C main() function
   174                           
   175                           	psect	cstackBANK1
   176  00A0                     __pcstackBANK1:	
   177  00A0                     main@position:	
   178                           
   179                           ; 3 bytes @ 0x0
   180  00A0                     	ds	3
   181  00A3                     main@lasterror:	
   182                           
   183                           ; 3 bytes @ 0x3
   184  00A3                     	ds	3
   185  00A6                     main@Kp:	
   186                           
   187                           ; 3 bytes @ 0x6
   188  00A6                     	ds	3
   189  00A9                     main@Kd:	
   190                           
   191                           ; 3 bytes @ 0x9
   192  00A9                     	ds	3
   193  00AC                     _main$494:	
   194                           
   195                           ; 3 bytes @ 0xC
   196  00AC                     	ds	3
   197  00AF                     _main$495:	
   198                           
   199                           ; 2 bytes @ 0xF
   200  00AF                     	ds	2
   201  00B1                     _main$496:	
   202                           
   203                           ; 2 bytes @ 0x11
   204  00B1                     	ds	2
   205  00B3                     main@LastOut:	
   206                           
   207                           ; 2 bytes @ 0x13
   208  00B3                     	ds	2
   209  00B5                     main@LineOut:	
   210                           
   211                           ; 2 bytes @ 0x15
   212  00B5                     	ds	2
   213  00B7                     main@error:	
   214                           
   215                           ; 3 bytes @ 0x17
   216  00B7                     	ds	3
   217  00BA                     main@adjustment:	
   218                           
   219                           ; 3 bytes @ 0x1A
   220  00BA                     	ds	3
   221  00BD                     main@Lspeed:	
   222                           
   223                           ; 3 bytes @ 0x1D
   224  00BD                     	ds	3
   225  00C0                     main@Rspeed:	
   226                           
   227                           ; 3 bytes @ 0x20
   228  00C0                     	ds	3
   229  00C3                     main@sum:	
   230                           
   231                           ; 2 bytes @ 0x23
   232  00C3                     	ds	2
   233  00C5                     main@n:	
   234                           
   235                           ; 2 bytes @ 0x25
   236  00C5                     	ds	2
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?___ftge:	
   241  0070                     ??_PWM1_Start:	
   242                           ; 1 bit 
   243                           
   244  0070                     ??_PWM1_Stop:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ??_PWM2_Start:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_PWM2_Stop:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_main:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_PWM1_Start:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_PWM1_Stop:	
   260                           ; 2 bytes @ 0x0
   261                           
   262  0070                     ?_PWM2_Start:	
   263                           ; 2 bytes @ 0x0
   264                           
   265  0070                     ?_PWM2_Stop:	
   266                           ; 2 bytes @ 0x0
   267                           
   268  0070                     ?___awdiv:	
   269                           ; 2 bytes @ 0x0
   270                           
   271  0070                     ?___ftpack:	
   272                           ; 2 bytes @ 0x0
   273                           
   274  0070                     ?___aldiv:	
   275                           ; 3 bytes @ 0x0
   276                           
   277  0070                     ___awdiv@divisor:	
   278                           ; 4 bytes @ 0x0
   279                           
   280  0070                     ___ftpack@arg:	
   281                           ; 2 bytes @ 0x0
   282                           
   283  0070                     ___ftge@ff1:	
   284                           ; 3 bytes @ 0x0
   285                           
   286  0070                     ___aldiv@divisor:	
   287                           ; 3 bytes @ 0x0
   288                           
   289                           
   290                           ; 4 bytes @ 0x0
   291  0070                     	ds	2
   292  0072                     ___awdiv@dividend:	
   293                           
   294                           ; 2 bytes @ 0x2
   295  0072                     	ds	1
   296  0073                     ___ftpack@exp:	
   297  0073                     ___ftge@ff2:	
   298                           ; 1 bytes @ 0x3
   299                           
   300                           
   301                           ; 3 bytes @ 0x3
   302  0073                     	ds	1
   303  0074                     ??___awdiv:	
   304  0074                     ___ftpack@sign:	
   305                           ; 1 bytes @ 0x4
   306                           
   307  0074                     ___aldiv@dividend:	
   308                           ; 1 bytes @ 0x4
   309                           
   310                           
   311                           ; 4 bytes @ 0x4
   312  0074                     	ds	1
   313  0075                     ??___ftpack:	
   314  0075                     ___awdiv@counter:	
   315                           ; 1 bytes @ 0x5
   316                           
   317                           
   318                           ; 1 bytes @ 0x5
   319  0075                     	ds	1
   320  0076                     ??___ftge:	
   321  0076                     ___awdiv@sign:	
   322                           ; 1 bytes @ 0x6
   323                           
   324                           
   325                           ; 1 bytes @ 0x6
   326  0076                     	ds	1
   327  0077                     ___awdiv@quotient:	
   328                           
   329                           ; 2 bytes @ 0x7
   330  0077                     	ds	1
   331  0078                     ??___aldiv:	
   332  0078                     ?___lwtoft:	
   333                           ; 1 bytes @ 0x8
   334                           
   335  0078                     ___lwtoft@c:	
   336                           ; 3 bytes @ 0x8
   337                           
   338                           
   339                           ; 2 bytes @ 0x8
   340  0078                     	ds	1
   341  0079                     ??_PWM_Max_Duty:	
   342  0079                     ??_PWM1_Init:	
   343                           ; 1 bytes @ 0x9
   344                           
   345  0079                     ??_PWM2_Init:	
   346                           ; 1 bytes @ 0x9
   347                           
   348                           
   349                           ; 1 bytes @ 0x9
   350  0079                     	ds	2
   351  007B                     ??___lwtoft:	
   352                           
   353                           ; 1 bytes @ 0xB
   354  007B                     	ds	1
   355  007C                     ??___ftneg:	
   356                           
   357                           ; 1 bytes @ 0xC
   358  007C                     	ds	1
   359  007D                     ___awtoft@sign:	
   360                           
   361                           ; 1 bytes @ 0xD
   362  007D                     	ds	1
   363                           
   364                           	psect	cstackBANK0
   365  0020                     __pcstackBANK0:	
   366  0020                     ?___ftdiv:	
   367  0020                     ___aldiv@counter:	
   368                           ; 3 bytes @ 0x0
   369                           
   370  0020                     ___ftdiv@f2:	
   371                           ; 1 bytes @ 0x0
   372                           
   373                           
   374                           ; 3 bytes @ 0x0
   375  0020                     	ds	1
   376  0021                     ___aldiv@sign:	
   377                           
   378                           ; 1 bytes @ 0x1
   379  0021                     	ds	1
   380  0022                     ___aldiv@quotient:	
   381                           
   382                           ; 4 bytes @ 0x2
   383  0022                     	ds	1
   384  0023                     ___ftdiv@f1:	
   385                           
   386                           ; 3 bytes @ 0x3
   387  0023                     	ds	3
   388  0026                     ??___ftdiv:	
   389  0026                     ?_PWM_Max_Duty:	
   390                           ; 1 bytes @ 0x6
   391                           
   392  0026                     ?_PWM1_Init:	
   393                           ; 2 bytes @ 0x6
   394                           
   395  0026                     ?_PWM2_Init:	
   396                           ; 2 bytes @ 0x6
   397                           
   398  0026                     PWM1_Init@fre:	
   399                           ; 2 bytes @ 0x6
   400                           
   401  0026                     PWM2_Init@fre:	
   402                           ; 4 bytes @ 0x6
   403                           
   404                           
   405                           ; 4 bytes @ 0x6
   406  0026                     	ds	2
   407  0028                     ?___awtoft:	
   408  0028                     ___awtoft@c:	
   409                           ; 3 bytes @ 0x8
   410                           
   411                           
   412                           ; 2 bytes @ 0x8
   413  0028                     	ds	2
   414  002A                     ___ftdiv@cntr:	
   415                           
   416                           ; 1 bytes @ 0xA
   417  002A                     	ds	1
   418  002B                     ??___awtoft:	
   419  002B                     ___ftdiv@f3:	
   420                           ; 1 bytes @ 0xB
   421                           
   422                           
   423                           ; 3 bytes @ 0xB
   424  002B                     	ds	3
   425  002E                     ___ftdiv@exp:	
   426                           
   427                           ; 1 bytes @ 0xE
   428  002E                     	ds	1
   429  002F                     ___ftdiv@sign:	
   430                           
   431                           ; 1 bytes @ 0xF
   432  002F                     	ds	1
   433  0030                     ?___ftneg:	
   434  0030                     ___ftneg@f1:	
   435                           ; 3 bytes @ 0x10
   436                           
   437                           
   438                           ; 3 bytes @ 0x10
   439  0030                     	ds	3
   440  0033                     ?___ftadd:	
   441  0033                     ___ftadd@f1:	
   442                           ; 3 bytes @ 0x13
   443                           
   444                           
   445                           ; 3 bytes @ 0x13
   446  0033                     	ds	3
   447  0036                     ___ftadd@f2:	
   448                           
   449                           ; 3 bytes @ 0x16
   450  0036                     	ds	3
   451  0039                     ??___ftadd:	
   452                           
   453                           ; 1 bytes @ 0x19
   454  0039                     	ds	4
   455  003D                     ___ftadd@sign:	
   456                           
   457                           ; 1 bytes @ 0x1D
   458  003D                     	ds	1
   459  003E                     ___ftadd@exp2:	
   460                           
   461                           ; 1 bytes @ 0x1E
   462  003E                     	ds	1
   463  003F                     ___ftadd@exp1:	
   464                           
   465                           ; 1 bytes @ 0x1F
   466  003F                     	ds	1
   467  0040                     ?___ftmul:	
   468  0040                     ___ftmul@f1:	
   469                           ; 3 bytes @ 0x20
   470                           
   471                           
   472                           ; 3 bytes @ 0x20
   473  0040                     	ds	3
   474  0043                     ___ftmul@f2:	
   475                           
   476                           ; 3 bytes @ 0x23
   477  0043                     	ds	3
   478  0046                     ??___ftmul:	
   479                           
   480                           ; 1 bytes @ 0x26
   481  0046                     	ds	4
   482  004A                     ___ftmul@exp:	
   483                           
   484                           ; 1 bytes @ 0x2A
   485  004A                     	ds	1
   486  004B                     ___ftmul@f3_as_product:	
   487                           
   488                           ; 3 bytes @ 0x2B
   489  004B                     	ds	3
   490  004E                     ___ftmul@cntr:	
   491                           
   492                           ; 1 bytes @ 0x2E
   493  004E                     	ds	1
   494  004F                     ___ftmul@sign:	
   495                           
   496                           ; 1 bytes @ 0x2F
   497  004F                     	ds	1
   498  0050                     ?___fttol:	
   499  0050                     ___fttol@f1:	
   500                           ; 4 bytes @ 0x30
   501                           
   502                           
   503                           ; 3 bytes @ 0x30
   504  0050                     	ds	4
   505  0054                     ??___fttol:	
   506                           
   507                           ; 1 bytes @ 0x34
   508  0054                     	ds	4
   509  0058                     ___fttol@sign1:	
   510                           
   511                           ; 1 bytes @ 0x38
   512  0058                     	ds	1
   513  0059                     ___fttol@lval:	
   514                           
   515                           ; 4 bytes @ 0x39
   516  0059                     	ds	4
   517  005D                     ___fttol@exp1:	
   518                           
   519                           ; 1 bytes @ 0x3D
   520  005D                     	ds	1
   521  005E                     ?_PWM1_Duty:	
   522  005E                     ?_PWM2_Duty:	
   523                           ; 2 bytes @ 0x3E
   524                           
   525  005E                     PWM1_Duty@duty:	
   526                           ; 2 bytes @ 0x3E
   527                           
   528  005E                     PWM2_Duty@duty:	
   529                           ; 2 bytes @ 0x3E
   530                           
   531                           
   532                           ; 2 bytes @ 0x3E
   533  005E                     	ds	2
   534  0060                     ??_PWM1_Duty:	
   535  0060                     ??_PWM2_Duty:	
   536                           ; 1 bytes @ 0x40
   537                           
   538                           
   539                           ; 1 bytes @ 0x40
   540  0060                     	ds	2
   541  0062                     ??_main:	
   542                           
   543                           ; 1 bytes @ 0x42
   544  0062                     	ds	2
   545                           
   546                           	psect	maintext
   547  03A8                     __pmaintext:	
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 106 in file "finalcode.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  Rspeed          3   32[BANK1 ] float 
   558 ;;  Lspeed          3   29[BANK1 ] float 
   559 ;;  adjustment      3   26[BANK1 ] float 
   560 ;;  error           3   23[BANK1 ] float 
   561 ;;  Kd              3    9[BANK1 ] float 
   562 ;;  Kp              3    6[BANK1 ] float 
   563 ;;  lasterror       3    3[BANK1 ] float 
   564 ;;  position        3    0[BANK1 ] float 
   565 ;;  n               2   37[BANK1 ] int 
   566 ;;  sum             2   35[BANK1 ] int 
   567 ;;  LineOut         2   21[BANK1 ] int 
   568 ;;  LastOut         2   19[BANK1 ] int 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : B00/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0       0      39       0       0
   580 ;;      Temps:          0       2       0       0       0
   581 ;;      Totals:         0       2      39       0       0
   582 ;;Total ram usage:       41 bytes
   583 ;; Hardware stack levels required when called:    3
   584 ;; This function calls:
   585 ;;		_PWM1_Duty
   586 ;;		_PWM1_Init
   587 ;;		_PWM1_Start
   588 ;;		_PWM1_Stop
   589 ;;		_PWM2_Duty
   590 ;;		_PWM2_Init
   591 ;;		_PWM2_Start
   592 ;;		_PWM2_Stop
   593 ;;		___awdiv
   594 ;;		___awtoft
   595 ;;		___ftadd
   596 ;;		___ftdiv
   597 ;;		___ftge
   598 ;;		___ftmul
   599 ;;		___ftneg
   600 ;;		___fttol
   601 ;; This function is called by:
   602 ;;		Startup code after reset
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _main
   608  03A8                     _main:	
   609                           
   610                           ;finalcode.c: 108: TRISC=0;
   611                           
   612                           ;incstack = 0
   613                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   614  03A8  1683               	bsf	3,5	;RP0=1, select bank1
   615  03A9  1303               	bcf	3,6	;RP1=0, select bank1
   616  03AA  0187               	clrf	7	;volatile
   617                           
   618                           ;finalcode.c: 109: TRISD=0b11110000;
   619  03AB  30F0               	movlw	240
   620  03AC  0088               	movwf	8	;volatile
   621                           
   622                           ;finalcode.c: 110: TRISB=1;
   623  03AD  3001               	movlw	1
   624  03AE  0086               	movwf	6	;volatile
   625                           
   626                           ;finalcode.c: 111: PWM1_Init(5000);
   627  03AF  3000               	movlw	0
   628  03B0  1283               	bcf	3,5	;RP0=0, select bank0
   629  03B1  1303               	bcf	3,6	;RP1=0, select bank0
   630  03B2  00A9               	movwf	PWM1_Init@fre+3
   631  03B3  3000               	movlw	0
   632  03B4  00A8               	movwf	PWM1_Init@fre+2
   633  03B5  3013               	movlw	19
   634  03B6  00A7               	movwf	PWM1_Init@fre+1
   635  03B7  3088               	movlw	136
   636  03B8  00A6               	movwf	PWM1_Init@fre
   637  03B9  120A  158A  2565  120A  118A  	fcall	_PWM1_Init
   638                           
   639                           ;finalcode.c: 112: PWM2_Init(5000);
   640  03BE  3000               	movlw	0
   641  03BF  1283               	bcf	3,5	;RP0=0, select bank0
   642  03C0  1303               	bcf	3,6	;RP1=0, select bank0
   643  03C1  00A9               	movwf	PWM2_Init@fre+3
   644  03C2  3000               	movlw	0
   645  03C3  00A8               	movwf	PWM2_Init@fre+2
   646  03C4  3013               	movlw	19
   647  03C5  00A7               	movwf	PWM2_Init@fre+1
   648  03C6  3088               	movlw	136
   649  03C7  00A6               	movwf	PWM2_Init@fre
   650  03C8  120A  158A  25A4  120A  118A  	fcall	_PWM2_Init
   651                           
   652                           ;finalcode.c: 113: float position, error, lasterror, adjustment;
   653                           ;finalcode.c: 114: float Kp=140;
   654  03CD  3000               	movlw	0
   655  03CE  1683               	bsf	3,5	;RP0=1, select bank1
   656  03CF  1303               	bcf	3,6	;RP1=0, select bank1
   657  03D0  00A6               	movwf	main@Kp^(0+128)
   658  03D1  300C               	movlw	12
   659  03D2  00A7               	movwf	(main@Kp+1)^(0+128)
   660  03D3  3043               	movlw	67
   661  03D4  00A8               	movwf	(main@Kp+2)^(0+128)
   662                           
   663                           ;finalcode.c: 115: float Kd=350;
   664  03D5  3000               	movlw	0
   665  03D6  00A9               	movwf	main@Kd^(0+128)
   666  03D7  30AF               	movlw	175
   667  03D8  00AA               	movwf	(main@Kd+1)^(0+128)
   668  03D9  3043               	movlw	67
   669  03DA  00AB               	movwf	(main@Kd+2)^(0+128)
   670                           
   671                           ;finalcode.c: 116: float Lspeed, Rspeed;
   672                           ;finalcode.c: 117: int n=0;
   673  03DB  01C5               	clrf	main@n^(0+128)
   674  03DC  01C6               	clrf	(main@n+1)^(0+128)
   675                           
   676                           ;finalcode.c: 118: int sum=0;
   677  03DD  01C3               	clrf	main@sum^(0+128)
   678  03DE  01C4               	clrf	(main@sum+1)^(0+128)
   679                           
   680                           ;finalcode.c: 119: int LineOut=1;
   681  03DF  3001               	movlw	1
   682  03E0  00B5               	movwf	main@LineOut^(0+128)
   683  03E1  3000               	movlw	0
   684  03E2  00B6               	movwf	(main@LineOut^(0+128)+1)
   685  03E3                     l1563:	
   686                           ;finalcode.c: 120: int LastOut;
   687                           ;finalcode.c: 121: while(1){
   688                           
   689                           
   690                           ;finalcode.c: 122: LineOut=0;
   691  03E3  1683               	bsf	3,5	;RP0=1, select bank1
   692  03E4  1303               	bcf	3,6	;RP1=0, select bank1
   693  03E5  01B5               	clrf	main@LineOut^(0+128)
   694  03E6  01B6               	clrf	(main@LineOut+1)^(0+128)
   695                           
   696                           ;finalcode.c: 123: Lspeed=865;
   697  03E7  3040               	movlw	64
   698  03E8  00BD               	movwf	main@Lspeed^(0+128)
   699  03E9  3058               	movlw	88
   700  03EA  00BE               	movwf	(main@Lspeed+1)^(0+128)
   701  03EB  3044               	movlw	68
   702  03EC  00BF               	movwf	(main@Lspeed+2)^(0+128)
   703                           
   704                           ;finalcode.c: 124: Rspeed=900;
   705  03ED  3000               	movlw	0
   706  03EE  00C0               	movwf	main@Rspeed^(0+128)
   707  03EF  3061               	movlw	97
   708  03F0  00C1               	movwf	(main@Rspeed+1)^(0+128)
   709  03F1  3044               	movlw	68
   710  03F2  00C2               	movwf	(main@Rspeed+2)^(0+128)
   711                           
   712                           ;finalcode.c: 125: n=0;
   713  03F3  01C5               	clrf	main@n^(0+128)
   714  03F4  01C6               	clrf	(main@n+1)^(0+128)
   715                           
   716                           ;finalcode.c: 126: sum=0;
   717  03F5  01C3               	clrf	main@sum^(0+128)
   718  03F6  01C4               	clrf	(main@sum+1)^(0+128)
   719                           
   720                           ;finalcode.c: 127: if(RB7==0){
   721  03F7  1283               	bcf	3,5	;RP0=0, select bank0
   722  03F8  1303               	bcf	3,6	;RP1=0, select bank0
   723  03F9  1B86               	btfsc	6,7	;volatile
   724  03FA  2C15               	goto	l1577
   725                           
   726                           ;finalcode.c: 128: n=n+1;
   727  03FB  1683               	bsf	3,5	;RP0=1, select bank1
   728  03FC  1303               	bcf	3,6	;RP1=0, select bank1
   729  03FD  0845               	movf	main@n^(0+128),w
   730  03FE  3E01               	addlw	1
   731  03FF  00C5               	movwf	main@n^(0+128)
   732  0400  0846               	movf	(main@n+1)^(0+128),w
   733  0401  1803               	skipnc
   734  0402  3E01               	addlw	1
   735  0403  3E00               	addlw	0
   736  0404  00C6               	movwf	(main@n+1)^(0+128)
   737                           
   738                           ;finalcode.c: 129: LineOut=1;
   739  0405  3001               	movlw	1
   740  0406  00B5               	movwf	main@LineOut^(0+128)
   741  0407  3000               	movlw	0
   742  0408  00B6               	movwf	(main@LineOut^(0+128)+1)
   743                           
   744                           ;finalcode.c: 130: sum=sum-9;
   745  0409  0843               	movf	main@sum^(0+128),w
   746  040A  3EF7               	addlw	247
   747  040B  00C3               	movwf	main@sum^(0+128)
   748  040C  0844               	movf	(main@sum+1)^(0+128),w
   749  040D  1803               	skipnc
   750  040E  3E01               	addlw	1
   751  040F  3EFF               	addlw	255
   752  0410  00C4               	movwf	(main@sum+1)^(0+128)
   753                           
   754                           ;finalcode.c: 131: LastOut=-1;
   755  0411  30FF               	movlw	255
   756  0412  00B3               	movwf	main@LastOut^(0+128)
   757  0413  30FF               	movlw	255
   758  0414  00B4               	movwf	(main@LastOut^(0+128)+1)
   759  0415                     l1577:	
   760                           
   761                           ;finalcode.c: 132: }
   762                           ;finalcode.c: 133: if(RB6==0){
   763  0415  1283               	bcf	3,5	;RP0=0, select bank0
   764  0416  1B06               	btfsc	6,6	;volatile
   765  0417  2C32               	goto	l1585
   766                           
   767                           ;finalcode.c: 134: n=n+1;
   768  0418  1683               	bsf	3,5	;RP0=1, select bank1
   769  0419  1303               	bcf	3,6	;RP1=0, select bank1
   770  041A  0845               	movf	main@n^(0+128),w
   771  041B  3E01               	addlw	1
   772  041C  00C5               	movwf	main@n^(0+128)
   773  041D  0846               	movf	(main@n+1)^(0+128),w
   774  041E  1803               	skipnc
   775  041F  3E01               	addlw	1
   776  0420  3E00               	addlw	0
   777  0421  00C6               	movwf	(main@n+1)^(0+128)
   778                           
   779                           ;finalcode.c: 135: LineOut=1;
   780  0422  3001               	movlw	1
   781  0423  00B5               	movwf	main@LineOut^(0+128)
   782  0424  3000               	movlw	0
   783  0425  00B6               	movwf	(main@LineOut^(0+128)+1)
   784                           
   785                           ;finalcode.c: 136: sum=sum-5;
   786  0426  0843               	movf	main@sum^(0+128),w
   787  0427  3EFB               	addlw	251
   788  0428  00C3               	movwf	main@sum^(0+128)
   789  0429  0844               	movf	(main@sum+1)^(0+128),w
   790  042A  1803               	skipnc
   791  042B  3E01               	addlw	1
   792  042C  3EFF               	addlw	255
   793  042D  00C4               	movwf	(main@sum+1)^(0+128)
   794                           
   795                           ;finalcode.c: 137: LastOut=-1;
   796  042E  30FF               	movlw	255
   797  042F  00B3               	movwf	main@LastOut^(0+128)
   798  0430  30FF               	movlw	255
   799  0431  00B4               	movwf	(main@LastOut^(0+128)+1)
   800  0432                     l1585:	
   801                           
   802                           ;finalcode.c: 138: }
   803                           ;finalcode.c: 139: if(RB5==0){
   804  0432  1283               	bcf	3,5	;RP0=0, select bank0
   805  0433  1A86               	btfsc	6,5	;volatile
   806  0434  2C4D               	goto	l1595
   807                           
   808                           ;finalcode.c: 140: n=n+1;
   809  0435  1683               	bsf	3,5	;RP0=1, select bank1
   810  0436  1303               	bcf	3,6	;RP1=0, select bank1
   811  0437  0845               	movf	main@n^(0+128),w
   812  0438  3E01               	addlw	1
   813  0439  00C5               	movwf	main@n^(0+128)
   814  043A  0846               	movf	(main@n+1)^(0+128),w
   815  043B  1803               	skipnc
   816  043C  3E01               	addlw	1
   817  043D  3E00               	addlw	0
   818  043E  00C6               	movwf	(main@n+1)^(0+128)
   819                           
   820                           ;finalcode.c: 141: LineOut=1;
   821  043F  3001               	movlw	1
   822  0440  00B5               	movwf	main@LineOut^(0+128)
   823  0441  3000               	movlw	0
   824  0442  00B6               	movwf	(main@LineOut^(0+128)+1)
   825                           
   826                           ;finalcode.c: 142: sum=sum-3;
   827  0443  0843               	movf	main@sum^(0+128),w
   828  0444  3EFD               	addlw	253
   829  0445  00C3               	movwf	main@sum^(0+128)
   830  0446  0844               	movf	(main@sum+1)^(0+128),w
   831  0447  1803               	skipnc
   832  0448  3E01               	addlw	1
   833  0449  3EFF               	addlw	255
   834  044A  00C4               	movwf	(main@sum+1)^(0+128)
   835                           
   836                           ;finalcode.c: 143: LastOut=0;
   837  044B  01B3               	clrf	main@LastOut^(0+128)
   838  044C  01B4               	clrf	(main@LastOut+1)^(0+128)
   839  044D                     l1595:	
   840                           
   841                           ;finalcode.c: 144: }
   842                           ;finalcode.c: 145: if(RB4==0){
   843  044D  1283               	bcf	3,5	;RP0=0, select bank0
   844  044E  1A06               	btfsc	6,4	;volatile
   845  044F  2C60               	goto	l1603
   846                           
   847                           ;finalcode.c: 146: n=n+1;
   848  0450  1683               	bsf	3,5	;RP0=1, select bank1
   849  0451  1303               	bcf	3,6	;RP1=0, select bank1
   850  0452  0845               	movf	main@n^(0+128),w
   851  0453  3E01               	addlw	1
   852  0454  00C5               	movwf	main@n^(0+128)
   853  0455  0846               	movf	(main@n+1)^(0+128),w
   854  0456  1803               	skipnc
   855  0457  3E01               	addlw	1
   856  0458  3E00               	addlw	0
   857  0459  00C6               	movwf	(main@n+1)^(0+128)
   858                           
   859                           ;finalcode.c: 148: sum=sum-0;
   860  045A  3001               	movlw	1
   861  045B  00B5               	movwf	main@LineOut^(0+128)
   862  045C  3000               	movlw	0
   863  045D  00B6               	movwf	(main@LineOut^(0+128)+1)
   864                           
   865                           ;finalcode.c: 149: LastOut=0;
   866  045E  01B3               	clrf	main@LastOut^(0+128)
   867  045F  01B4               	clrf	(main@LastOut+1)^(0+128)
   868  0460                     l1603:	
   869                           
   870                           ;finalcode.c: 150: }
   871                           ;finalcode.c: 151: if(RB3==0){
   872  0460  1283               	bcf	3,5	;RP0=0, select bank0
   873  0461  1986               	btfsc	6,3	;volatile
   874  0462  2C73               	goto	l1611
   875                           
   876                           ;finalcode.c: 152: n=n+1;
   877  0463  1683               	bsf	3,5	;RP0=1, select bank1
   878  0464  1303               	bcf	3,6	;RP1=0, select bank1
   879  0465  0845               	movf	main@n^(0+128),w
   880  0466  3E01               	addlw	1
   881  0467  00C5               	movwf	main@n^(0+128)
   882  0468  0846               	movf	(main@n+1)^(0+128),w
   883  0469  1803               	skipnc
   884  046A  3E01               	addlw	1
   885  046B  3E00               	addlw	0
   886  046C  00C6               	movwf	(main@n+1)^(0+128)
   887                           
   888                           ;finalcode.c: 153: LineOut=1;
   889  046D  3001               	movlw	1
   890  046E  00B5               	movwf	main@LineOut^(0+128)
   891  046F  3000               	movlw	0
   892  0470  00B6               	movwf	(main@LineOut^(0+128)+1)
   893                           
   894                           ;finalcode.c: 155: LastOut=0;
   895  0471  01B3               	clrf	main@LastOut^(0+128)
   896  0472  01B4               	clrf	(main@LastOut+1)^(0+128)
   897  0473                     l1611:	
   898                           
   899                           ;finalcode.c: 156: }
   900                           ;finalcode.c: 157: if(RB2==0){
   901  0473  1283               	bcf	3,5	;RP0=0, select bank0
   902  0474  1906               	btfsc	6,2	;volatile
   903  0475  2C8E               	goto	l1621
   904                           
   905                           ;finalcode.c: 158: n=n+1;
   906  0476  1683               	bsf	3,5	;RP0=1, select bank1
   907  0477  1303               	bcf	3,6	;RP1=0, select bank1
   908  0478  0845               	movf	main@n^(0+128),w
   909  0479  3E01               	addlw	1
   910  047A  00C5               	movwf	main@n^(0+128)
   911  047B  0846               	movf	(main@n+1)^(0+128),w
   912  047C  1803               	skipnc
   913  047D  3E01               	addlw	1
   914  047E  3E00               	addlw	0
   915  047F  00C6               	movwf	(main@n+1)^(0+128)
   916                           
   917                           ;finalcode.c: 159: LineOut=1;
   918  0480  3001               	movlw	1
   919  0481  00B5               	movwf	main@LineOut^(0+128)
   920  0482  3000               	movlw	0
   921  0483  00B6               	movwf	(main@LineOut^(0+128)+1)
   922                           
   923                           ;finalcode.c: 160: sum=sum+3;
   924  0484  0843               	movf	main@sum^(0+128),w
   925  0485  3E03               	addlw	3
   926  0486  00C3               	movwf	main@sum^(0+128)
   927  0487  0844               	movf	(main@sum+1)^(0+128),w
   928  0488  1803               	skipnc
   929  0489  3E01               	addlw	1
   930  048A  3E00               	addlw	0
   931  048B  00C4               	movwf	(main@sum+1)^(0+128)
   932                           
   933                           ;finalcode.c: 161: LastOut=0;
   934  048C  01B3               	clrf	main@LastOut^(0+128)
   935  048D  01B4               	clrf	(main@LastOut+1)^(0+128)
   936  048E                     l1621:	
   937                           
   938                           ;finalcode.c: 162: }
   939                           ;finalcode.c: 163: if(RB1==0){
   940  048E  1283               	bcf	3,5	;RP0=0, select bank0
   941  048F  1886               	btfsc	6,1	;volatile
   942  0490  2CAB               	goto	l1629
   943                           
   944                           ;finalcode.c: 164: n=n+1;
   945  0491  1683               	bsf	3,5	;RP0=1, select bank1
   946  0492  1303               	bcf	3,6	;RP1=0, select bank1
   947  0493  0845               	movf	main@n^(0+128),w
   948  0494  3E01               	addlw	1
   949  0495  00C5               	movwf	main@n^(0+128)
   950  0496  0846               	movf	(main@n+1)^(0+128),w
   951  0497  1803               	skipnc
   952  0498  3E01               	addlw	1
   953  0499  3E00               	addlw	0
   954  049A  00C6               	movwf	(main@n+1)^(0+128)
   955                           
   956                           ;finalcode.c: 165: LineOut=1;
   957  049B  3001               	movlw	1
   958  049C  00B5               	movwf	main@LineOut^(0+128)
   959  049D  3000               	movlw	0
   960  049E  00B6               	movwf	(main@LineOut^(0+128)+1)
   961                           
   962                           ;finalcode.c: 166: sum=sum+5;
   963  049F  0843               	movf	main@sum^(0+128),w
   964  04A0  3E05               	addlw	5
   965  04A1  00C3               	movwf	main@sum^(0+128)
   966  04A2  0844               	movf	(main@sum+1)^(0+128),w
   967  04A3  1803               	skipnc
   968  04A4  3E01               	addlw	1
   969  04A5  3E00               	addlw	0
   970  04A6  00C4               	movwf	(main@sum+1)^(0+128)
   971                           
   972                           ;finalcode.c: 167: LastOut=1;
   973  04A7  3001               	movlw	1
   974  04A8  00B3               	movwf	main@LastOut^(0+128)
   975  04A9  3000               	movlw	0
   976  04AA  00B4               	movwf	(main@LastOut^(0+128)+1)
   977  04AB                     l1629:	
   978                           
   979                           ;finalcode.c: 168: }
   980                           ;finalcode.c: 169: if(RB0==0){
   981  04AB  1283               	bcf	3,5	;RP0=0, select bank0
   982  04AC  1806               	btfsc	6,0	;volatile
   983  04AD  2CC8               	goto	l1637
   984                           
   985                           ;finalcode.c: 170: n=n+1;
   986  04AE  1683               	bsf	3,5	;RP0=1, select bank1
   987  04AF  1303               	bcf	3,6	;RP1=0, select bank1
   988  04B0  0845               	movf	main@n^(0+128),w
   989  04B1  3E01               	addlw	1
   990  04B2  00C5               	movwf	main@n^(0+128)
   991  04B3  0846               	movf	(main@n+1)^(0+128),w
   992  04B4  1803               	skipnc
   993  04B5  3E01               	addlw	1
   994  04B6  3E00               	addlw	0
   995  04B7  00C6               	movwf	(main@n+1)^(0+128)
   996                           
   997                           ;finalcode.c: 171: LineOut=1;
   998  04B8  3001               	movlw	1
   999  04B9  00B5               	movwf	main@LineOut^(0+128)
  1000  04BA  3000               	movlw	0
  1001  04BB  00B6               	movwf	(main@LineOut^(0+128)+1)
  1002                           
  1003                           ;finalcode.c: 172: sum=sum+9;
  1004  04BC  0843               	movf	main@sum^(0+128),w
  1005  04BD  3E09               	addlw	9
  1006  04BE  00C3               	movwf	main@sum^(0+128)
  1007  04BF  0844               	movf	(main@sum+1)^(0+128),w
  1008  04C0  1803               	skipnc
  1009  04C1  3E01               	addlw	1
  1010  04C2  3E00               	addlw	0
  1011  04C3  00C4               	movwf	(main@sum+1)^(0+128)
  1012                           
  1013                           ;finalcode.c: 173: LastOut=1;
  1014  04C4  3001               	movlw	1
  1015  04C5  00B3               	movwf	main@LastOut^(0+128)
  1016  04C6  3000               	movlw	0
  1017  04C7  00B4               	movwf	(main@LastOut^(0+128)+1)
  1018  04C8                     l1637:	
  1019                           
  1020                           ;finalcode.c: 174: }
  1021                           ;finalcode.c: 175: if(n!=0){
  1022  04C8  1683               	bsf	3,5	;RP0=1, select bank1
  1023  04C9  1303               	bcf	3,6	;RP1=0, select bank1
  1024  04CA  0845               	movf	main@n^(0+128),w
  1025  04CB  0446               	iorwf	(main@n+1)^(0+128),w
  1026  04CC  1903               	btfsc	3,2
  1027  04CD  2D1F               	goto	l1643
  1028                           
  1029                           ;finalcode.c: 176: position=sum/n;
  1030  04CE  0846               	movf	(main@n+1)^(0+128),w
  1031  04CF  00F1               	movwf	___awdiv@divisor+1
  1032  04D0  0845               	movf	main@n^(0+128),w
  1033  04D1  00F0               	movwf	___awdiv@divisor
  1034  04D2  0844               	movf	(main@sum+1)^(0+128),w
  1035  04D3  00F3               	movwf	___awdiv@dividend+1
  1036  04D4  0843               	movf	main@sum^(0+128),w
  1037  04D5  00F2               	movwf	___awdiv@dividend
  1038  04D6  120A  158A  25E3  120A  118A  	fcall	___awdiv
  1039  04DB  0871               	movf	?___awdiv+1,w
  1040  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1041  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1042  04DE  00A9               	movwf	___awtoft@c+1
  1043  04DF  0870               	movf	?___awdiv,w
  1044  04E0  00A8               	movwf	___awtoft@c
  1045  04E1  120A  158A  2513  120A  118A  	fcall	___awtoft
  1046  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1047  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1048  04E8  0828               	movf	?___awtoft,w
  1049  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  1050  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  1051  04EB  00A0               	movwf	main@position^(0+128)
  1052  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1053  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1054  04EE  0829               	movf	?___awtoft+1,w
  1055  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  1056  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  1057  04F1  00A1               	movwf	(main@position+1)^(0+128)
  1058  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1059  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1060  04F4  082A               	movf	?___awtoft+2,w
  1061  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  1062  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  1063  04F7  00A2               	movwf	(main@position+2)^(0+128)
  1064                           
  1065                           ;finalcode.c: 177: error=0-position;
  1066  04F8  0820               	movf	main@position^(0+128),w
  1067  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1068  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1069  04FB  00B0               	movwf	___ftneg@f1
  1070  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  1071  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  1072  04FE  0821               	movf	(main@position+1)^(0+128),w
  1073  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0501  00B1               	movwf	___ftneg@f1+1
  1076  0502  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0503  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0504  0822               	movf	(main@position+2)^(0+128),w
  1079  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0507  00B2               	movwf	___ftneg@f1+2
  1082  0508  120A  158A  24FE  120A  118A  	fcall	___ftneg
  1083  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1084  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1085  050F  0830               	movf	?___ftneg,w
  1086  0510  1683               	bsf	3,5	;RP0=1, select bank1
  1087  0511  1303               	bcf	3,6	;RP1=0, select bank1
  1088  0512  00B7               	movwf	main@error^(0+128)
  1089  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0515  0831               	movf	?___ftneg+1,w
  1092  0516  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0517  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0518  00B8               	movwf	(main@error+1)^(0+128)
  1095  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1096  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1097  051B  0832               	movf	?___ftneg+2,w
  1098  051C  1683               	bsf	3,5	;RP0=1, select bank1
  1099  051D  1303               	bcf	3,6	;RP1=0, select bank1
  1100  051E  00B9               	movwf	(main@error+2)^(0+128)
  1101  051F                     l1643:	
  1102                           
  1103                           ;finalcode.c: 178: }
  1104                           ;finalcode.c: 179: adjustment = Kp*error + Kd*(error - lasterror);
  1105  051F  0829               	movf	main@Kd^(0+128),w
  1106  0520  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0521  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0522  00C0               	movwf	___ftmul@f1
  1109  0523  1683               	bsf	3,5	;RP0=1, select bank1
  1110  0524  1303               	bcf	3,6	;RP1=0, select bank1
  1111  0525  082A               	movf	(main@Kd+1)^(0+128),w
  1112  0526  1283               	bcf	3,5	;RP0=0, select bank0
  1113  0527  1303               	bcf	3,6	;RP1=0, select bank0
  1114  0528  00C1               	movwf	___ftmul@f1+1
  1115  0529  1683               	bsf	3,5	;RP0=1, select bank1
  1116  052A  1303               	bcf	3,6	;RP1=0, select bank1
  1117  052B  082B               	movf	(main@Kd+2)^(0+128),w
  1118  052C  1283               	bcf	3,5	;RP0=0, select bank0
  1119  052D  1303               	bcf	3,6	;RP1=0, select bank0
  1120  052E  00C2               	movwf	___ftmul@f1+2
  1121  052F  1683               	bsf	3,5	;RP0=1, select bank1
  1122  0530  1303               	bcf	3,6	;RP1=0, select bank1
  1123  0531  0837               	movf	main@error^(0+128),w
  1124  0532  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0533  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0534  00B3               	movwf	___ftadd@f1
  1127  0535  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0536  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0537  0838               	movf	(main@error+1)^(0+128),w
  1130  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1132  053A  00B4               	movwf	___ftadd@f1+1
  1133  053B  1683               	bsf	3,5	;RP0=1, select bank1
  1134  053C  1303               	bcf	3,6	;RP1=0, select bank1
  1135  053D  0839               	movf	(main@error+2)^(0+128),w
  1136  053E  1283               	bcf	3,5	;RP0=0, select bank0
  1137  053F  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0540  00B5               	movwf	___ftadd@f1+2
  1139  0541  1683               	bsf	3,5	;RP0=1, select bank1
  1140  0542  1303               	bcf	3,6	;RP1=0, select bank1
  1141  0543  0823               	movf	main@lasterror^(0+128),w
  1142  0544  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0545  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0546  00B0               	movwf	___ftneg@f1
  1145  0547  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0548  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0549  0824               	movf	(main@lasterror+1)^(0+128),w
  1148  054A  1283               	bcf	3,5	;RP0=0, select bank0
  1149  054B  1303               	bcf	3,6	;RP1=0, select bank0
  1150  054C  00B1               	movwf	___ftneg@f1+1
  1151  054D  1683               	bsf	3,5	;RP0=1, select bank1
  1152  054E  1303               	bcf	3,6	;RP1=0, select bank1
  1153  054F  0825               	movf	(main@lasterror+2)^(0+128),w
  1154  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0552  00B2               	movwf	___ftneg@f1+2
  1157  0553  120A  158A  24FE  120A  118A  	fcall	___ftneg
  1158  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1160  055A  0830               	movf	?___ftneg,w
  1161  055B  00B6               	movwf	___ftadd@f2
  1162  055C  0831               	movf	?___ftneg+1,w
  1163  055D  00B7               	movwf	___ftadd@f2+1
  1164  055E  0832               	movf	?___ftneg+2,w
  1165  055F  00B8               	movwf	___ftadd@f2+2
  1166  0560  120A  118A  229F  120A  118A  	fcall	___ftadd
  1167  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0567  0833               	movf	?___ftadd,w
  1170  0568  00C3               	movwf	___ftmul@f2
  1171  0569  0834               	movf	?___ftadd+1,w
  1172  056A  00C4               	movwf	___ftmul@f2+1
  1173  056B  0835               	movf	?___ftadd+2,w
  1174  056C  00C5               	movwf	___ftmul@f2+2
  1175  056D  120A  118A  21CC  120A  118A  	fcall	___ftmul
  1176  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0574  0840               	movf	?___ftmul,w
  1179  0575  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0576  1303               	bcf	3,6	;RP1=0, select bank1
  1181  0577  00AC               	movwf	_main$494^(0+128)
  1182  0578  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0579  1303               	bcf	3,6	;RP1=0, select bank0
  1184  057A  0841               	movf	?___ftmul+1,w
  1185  057B  1683               	bsf	3,5	;RP0=1, select bank1
  1186  057C  1303               	bcf	3,6	;RP1=0, select bank1
  1187  057D  00AD               	movwf	(_main$494+1)^(0+128)
  1188  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1189  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0580  0842               	movf	?___ftmul+2,w
  1191  0581  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0582  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0583  00AE               	movwf	(_main$494+2)^(0+128)
  1194                           
  1195                           ;finalcode.c: 178: }
  1196                           ;finalcode.c: 179: adjustment = Kp*error + Kd*(error - lasterror);
  1197  0584  082C               	movf	_main$494^(0+128),w
  1198  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0587  00B3               	movwf	___ftadd@f1
  1201  0588  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0589  1303               	bcf	3,6	;RP1=0, select bank1
  1203  058A  082D               	movf	(_main$494+1)^(0+128),w
  1204  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1205  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1206  058D  00B4               	movwf	___ftadd@f1+1
  1207  058E  1683               	bsf	3,5	;RP0=1, select bank1
  1208  058F  1303               	bcf	3,6	;RP1=0, select bank1
  1209  0590  082E               	movf	(_main$494+2)^(0+128),w
  1210  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0593  00B5               	movwf	___ftadd@f1+2
  1213  0594  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0595  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0596  0837               	movf	main@error^(0+128),w
  1216  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0599  00C0               	movwf	___ftmul@f1
  1219  059A  1683               	bsf	3,5	;RP0=1, select bank1
  1220  059B  1303               	bcf	3,6	;RP1=0, select bank1
  1221  059C  0838               	movf	(main@error+1)^(0+128),w
  1222  059D  1283               	bcf	3,5	;RP0=0, select bank0
  1223  059E  1303               	bcf	3,6	;RP1=0, select bank0
  1224  059F  00C1               	movwf	___ftmul@f1+1
  1225  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  1226  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  1227  05A2  0839               	movf	(main@error+2)^(0+128),w
  1228  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1229  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1230  05A5  00C2               	movwf	___ftmul@f1+2
  1231  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1232  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  1233  05A8  0826               	movf	main@Kp^(0+128),w
  1234  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1235  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1236  05AB  00C3               	movwf	___ftmul@f2
  1237  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  1238  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  1239  05AE  0827               	movf	(main@Kp+1)^(0+128),w
  1240  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1241  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1242  05B1  00C4               	movwf	___ftmul@f2+1
  1243  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1244  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  1245  05B4  0828               	movf	(main@Kp+2)^(0+128),w
  1246  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1247  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1248  05B7  00C5               	movwf	___ftmul@f2+2
  1249  05B8  120A  118A  21CC  120A  118A  	fcall	___ftmul
  1250  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1251  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1252  05BF  0840               	movf	?___ftmul,w
  1253  05C0  00B6               	movwf	___ftadd@f2
  1254  05C1  0841               	movf	?___ftmul+1,w
  1255  05C2  00B7               	movwf	___ftadd@f2+1
  1256  05C3  0842               	movf	?___ftmul+2,w
  1257  05C4  00B8               	movwf	___ftadd@f2+2
  1258  05C5  120A  118A  229F  120A  118A  	fcall	___ftadd
  1259  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1260  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1261  05CC  0833               	movf	?___ftadd,w
  1262  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  1263  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  1264  05CF  00BA               	movwf	main@adjustment^(0+128)
  1265  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1266  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1267  05D2  0834               	movf	?___ftadd+1,w
  1268  05D3  1683               	bsf	3,5	;RP0=1, select bank1
  1269  05D4  1303               	bcf	3,6	;RP1=0, select bank1
  1270  05D5  00BB               	movwf	(main@adjustment+1)^(0+128)
  1271  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1272  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1273  05D8  0835               	movf	?___ftadd+2,w
  1274  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  1275  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  1276  05DB  00BC               	movwf	(main@adjustment+2)^(0+128)
  1277                           
  1278                           ;finalcode.c: 180: lasterror=error;
  1279  05DC  0837               	movf	main@error^(0+128),w
  1280  05DD  00A3               	movwf	main@lasterror^(0+128)
  1281  05DE  0838               	movf	(main@error+1)^(0+128),w
  1282  05DF  00A4               	movwf	(main@lasterror+1)^(0+128)
  1283  05E0  0839               	movf	(main@error+2)^(0+128),w
  1284  05E1  00A5               	movwf	(main@lasterror+2)^(0+128)
  1285                           
  1286                           ;finalcode.c: 181: if(adjustment>0){
  1287  05E2  3000               	movlw	0
  1288  05E3  00F0               	movwf	___ftge@ff1
  1289  05E4  3000               	movlw	0
  1290  05E5  00F1               	movwf	___ftge@ff1+1
  1291  05E6  3000               	movlw	0
  1292  05E7  00F2               	movwf	___ftge@ff1+2
  1293  05E8  083A               	movf	main@adjustment^(0+128),w
  1294  05E9  00F3               	movwf	___ftge@ff2
  1295  05EA  083B               	movf	(main@adjustment+1)^(0+128),w
  1296  05EB  00F4               	movwf	___ftge@ff2+1
  1297  05EC  083C               	movf	(main@adjustment+2)^(0+128),w
  1298  05ED  00F5               	movwf	___ftge@ff2+2
  1299  05EE  120A  158A  263C  120A  118A  	fcall	___ftge
  1300  05F3  1803               	btfsc	3,0
  1301  05F4  2E8A               	goto	l1653
  1302                           
  1303                           ;finalcode.c: 182: Lspeed=Lspeed-adjustment;
  1304  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  1305  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  1306  05F7  083D               	movf	main@Lspeed^(0+128),w
  1307  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1308  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1309  05FA  00B3               	movwf	___ftadd@f1
  1310  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  1311  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  1312  05FD  083E               	movf	(main@Lspeed+1)^(0+128),w
  1313  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1314  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0600  00B4               	movwf	___ftadd@f1+1
  1316  0601  1683               	bsf	3,5	;RP0=1, select bank1
  1317  0602  1303               	bcf	3,6	;RP1=0, select bank1
  1318  0603  083F               	movf	(main@Lspeed+2)^(0+128),w
  1319  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0606  00B5               	movwf	___ftadd@f1+2
  1322  0607  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0608  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0609  083A               	movf	main@adjustment^(0+128),w
  1325  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1326  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1327  060C  00B0               	movwf	___ftneg@f1
  1328  060D  1683               	bsf	3,5	;RP0=1, select bank1
  1329  060E  1303               	bcf	3,6	;RP1=0, select bank1
  1330  060F  083B               	movf	(main@adjustment+1)^(0+128),w
  1331  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0612  00B1               	movwf	___ftneg@f1+1
  1334  0613  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0614  1303               	bcf	3,6	;RP1=0, select bank1
  1336  0615  083C               	movf	(main@adjustment+2)^(0+128),w
  1337  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1339  0618  00B2               	movwf	___ftneg@f1+2
  1340  0619  120A  158A  24FE  120A  118A  	fcall	___ftneg
  1341  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1342  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0620  0830               	movf	?___ftneg,w
  1344  0621  00B6               	movwf	___ftadd@f2
  1345  0622  0831               	movf	?___ftneg+1,w
  1346  0623  00B7               	movwf	___ftadd@f2+1
  1347  0624  0832               	movf	?___ftneg+2,w
  1348  0625  00B8               	movwf	___ftadd@f2+2
  1349  0626  120A  118A  229F  120A  118A  	fcall	___ftadd
  1350  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1351  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1352  062D  0833               	movf	?___ftadd,w
  1353  062E  1683               	bsf	3,5	;RP0=1, select bank1
  1354  062F  1303               	bcf	3,6	;RP1=0, select bank1
  1355  0630  00BD               	movwf	main@Lspeed^(0+128)
  1356  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0633  0834               	movf	?___ftadd+1,w
  1359  0634  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0635  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0636  00BE               	movwf	(main@Lspeed+1)^(0+128)
  1362  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0639  0835               	movf	?___ftadd+2,w
  1365  063A  1683               	bsf	3,5	;RP0=1, select bank1
  1366  063B  1303               	bcf	3,6	;RP1=0, select bank1
  1367  063C  00BF               	movwf	(main@Lspeed+2)^(0+128)
  1368                           
  1369                           ;finalcode.c: 183: Rspeed=Rspeed+adjustment/6;
  1370  063D  0840               	movf	main@Rspeed^(0+128),w
  1371  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1372  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0640  00B3               	movwf	___ftadd@f1
  1374  0641  1683               	bsf	3,5	;RP0=1, select bank1
  1375  0642  1303               	bcf	3,6	;RP1=0, select bank1
  1376  0643  0841               	movf	(main@Rspeed+1)^(0+128),w
  1377  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0646  00B4               	movwf	___ftadd@f1+1
  1380  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0649  0842               	movf	(main@Rspeed+2)^(0+128),w
  1383  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1384  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1385  064C  00B5               	movwf	___ftadd@f1+2
  1386  064D  3000               	movlw	0
  1387  064E  00A0               	movwf	___ftdiv@f2
  1388  064F  30C0               	movlw	192
  1389  0650  00A1               	movwf	___ftdiv@f2+1
  1390  0651  3040               	movlw	64
  1391  0652  00A2               	movwf	___ftdiv@f2+2
  1392  0653  1683               	bsf	3,5	;RP0=1, select bank1
  1393  0654  1303               	bcf	3,6	;RP1=0, select bank1
  1394  0655  083A               	movf	main@adjustment^(0+128),w
  1395  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0658  00A3               	movwf	___ftdiv@f1
  1398  0659  1683               	bsf	3,5	;RP0=1, select bank1
  1399  065A  1303               	bcf	3,6	;RP1=0, select bank1
  1400  065B  083B               	movf	(main@adjustment+1)^(0+128),w
  1401  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1402  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1403  065E  00A4               	movwf	___ftdiv@f1+1
  1404  065F  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0660  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0661  083C               	movf	(main@adjustment+2)^(0+128),w
  1407  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0664  00A5               	movwf	___ftdiv@f1+2
  1410  0665  120A  118A  2114  120A  118A  	fcall	___ftdiv
  1411  066A  1283               	bcf	3,5	;RP0=0, select bank0
  1412  066B  1303               	bcf	3,6	;RP1=0, select bank0
  1413  066C  0820               	movf	?___ftdiv,w
  1414  066D  00B6               	movwf	___ftadd@f2
  1415  066E  0821               	movf	?___ftdiv+1,w
  1416  066F  00B7               	movwf	___ftadd@f2+1
  1417  0670  0822               	movf	?___ftdiv+2,w
  1418  0671  00B8               	movwf	___ftadd@f2+2
  1419  0672  120A  118A  229F  120A  118A  	fcall	___ftadd
  1420  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0679  0833               	movf	?___ftadd,w
  1423  067A  1683               	bsf	3,5	;RP0=1, select bank1
  1424  067B  1303               	bcf	3,6	;RP1=0, select bank1
  1425  067C  00C0               	movwf	main@Rspeed^(0+128)
  1426  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1427  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1428  067F  0834               	movf	?___ftadd+1,w
  1429  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0682  00C1               	movwf	(main@Rspeed+1)^(0+128)
  1432  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0685  0835               	movf	?___ftadd+2,w
  1435  0686  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0687  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0688  00C2               	movwf	(main@Rspeed+2)^(0+128)
  1438                           
  1439                           ;finalcode.c: 184: }
  1440  0689  2F1E               	goto	l111
  1441  068A                     l1653:	
  1442                           
  1443                           ;finalcode.c: 185: else{
  1444                           ;finalcode.c: 186: Rspeed=Rspeed+adjustment;
  1445  068A  1683               	bsf	3,5	;RP0=1, select bank1
  1446  068B  1303               	bcf	3,6	;RP1=0, select bank1
  1447  068C  083A               	movf	main@adjustment^(0+128),w
  1448  068D  1283               	bcf	3,5	;RP0=0, select bank0
  1449  068E  1303               	bcf	3,6	;RP1=0, select bank0
  1450  068F  00B3               	movwf	___ftadd@f1
  1451  0690  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0691  1303               	bcf	3,6	;RP1=0, select bank1
  1453  0692  083B               	movf	(main@adjustment+1)^(0+128),w
  1454  0693  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0694  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0695  00B4               	movwf	___ftadd@f1+1
  1457  0696  1683               	bsf	3,5	;RP0=1, select bank1
  1458  0697  1303               	bcf	3,6	;RP1=0, select bank1
  1459  0698  083C               	movf	(main@adjustment+2)^(0+128),w
  1460  0699  1283               	bcf	3,5	;RP0=0, select bank0
  1461  069A  1303               	bcf	3,6	;RP1=0, select bank0
  1462  069B  00B5               	movwf	___ftadd@f1+2
  1463  069C  1683               	bsf	3,5	;RP0=1, select bank1
  1464  069D  1303               	bcf	3,6	;RP1=0, select bank1
  1465  069E  0840               	movf	main@Rspeed^(0+128),w
  1466  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1467  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1468  06A1  00B6               	movwf	___ftadd@f2
  1469  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  1470  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  1471  06A4  0841               	movf	(main@Rspeed+1)^(0+128),w
  1472  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1473  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1474  06A7  00B7               	movwf	___ftadd@f2+1
  1475  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1476  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1477  06AA  0842               	movf	(main@Rspeed+2)^(0+128),w
  1478  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1479  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1480  06AD  00B8               	movwf	___ftadd@f2+2
  1481  06AE  120A  118A  229F  120A  118A  	fcall	___ftadd
  1482  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1483  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1484  06B5  0833               	movf	?___ftadd,w
  1485  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  1486  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  1487  06B8  00C0               	movwf	main@Rspeed^(0+128)
  1488  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1489  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1490  06BB  0834               	movf	?___ftadd+1,w
  1491  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  1492  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  1493  06BE  00C1               	movwf	(main@Rspeed+1)^(0+128)
  1494  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1495  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1496  06C1  0835               	movf	?___ftadd+2,w
  1497  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  1498  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  1499  06C4  00C2               	movwf	(main@Rspeed+2)^(0+128)
  1500                           
  1501                           ;finalcode.c: 187: Lspeed=Lspeed-adjustment/6;
  1502  06C5  083D               	movf	main@Lspeed^(0+128),w
  1503  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1504  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1505  06C8  00B3               	movwf	___ftadd@f1
  1506  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  1507  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  1508  06CB  083E               	movf	(main@Lspeed+1)^(0+128),w
  1509  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1510  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1511  06CE  00B4               	movwf	___ftadd@f1+1
  1512  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  1513  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  1514  06D1  083F               	movf	(main@Lspeed+2)^(0+128),w
  1515  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1516  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1517  06D4  00B5               	movwf	___ftadd@f1+2
  1518  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1519  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1520  06D7  083A               	movf	main@adjustment^(0+128),w
  1521  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1522  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1523  06DA  00A3               	movwf	___ftdiv@f1
  1524  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  1525  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  1526  06DD  083B               	movf	(main@adjustment+1)^(0+128),w
  1527  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1528  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1529  06E0  00A4               	movwf	___ftdiv@f1+1
  1530  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  1531  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  1532  06E3  083C               	movf	(main@adjustment+2)^(0+128),w
  1533  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  1534  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  1535  06E6  00A5               	movwf	___ftdiv@f1+2
  1536  06E7  3000               	movlw	0
  1537  06E8  00A0               	movwf	___ftdiv@f2
  1538  06E9  30C0               	movlw	192
  1539  06EA  00A1               	movwf	___ftdiv@f2+1
  1540  06EB  3040               	movlw	64
  1541  06EC  00A2               	movwf	___ftdiv@f2+2
  1542  06ED  120A  118A  2114  120A  118A  	fcall	___ftdiv
  1543  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1544  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1545  06F4  0820               	movf	?___ftdiv,w
  1546  06F5  00B0               	movwf	___ftneg@f1
  1547  06F6  0821               	movf	?___ftdiv+1,w
  1548  06F7  00B1               	movwf	___ftneg@f1+1
  1549  06F8  0822               	movf	?___ftdiv+2,w
  1550  06F9  00B2               	movwf	___ftneg@f1+2
  1551  06FA  120A  158A  24FE  120A  118A  	fcall	___ftneg
  1552  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0701  0830               	movf	?___ftneg,w
  1555  0702  00B6               	movwf	___ftadd@f2
  1556  0703  0831               	movf	?___ftneg+1,w
  1557  0704  00B7               	movwf	___ftadd@f2+1
  1558  0705  0832               	movf	?___ftneg+2,w
  1559  0706  00B8               	movwf	___ftadd@f2+2
  1560  0707  120A  118A  229F  120A  118A  	fcall	___ftadd
  1561  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1562  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1563  070E  0833               	movf	?___ftadd,w
  1564  070F  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0710  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0711  00BD               	movwf	main@Lspeed^(0+128)
  1567  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0714  0834               	movf	?___ftadd+1,w
  1570  0715  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0716  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0717  00BE               	movwf	(main@Lspeed+1)^(0+128)
  1573  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1575  071A  0835               	movf	?___ftadd+2,w
  1576  071B  1683               	bsf	3,5	;RP0=1, select bank1
  1577  071C  1303               	bcf	3,6	;RP1=0, select bank1
  1578  071D  00BF               	movwf	(main@Lspeed+2)^(0+128)
  1579  071E                     l111:	
  1580                           
  1581                           ;finalcode.c: 188: }
  1582                           ;finalcode.c: 193: if(Rspeed>1023){
  1583  071E  30C0               	movlw	192
  1584  071F  00F0               	movwf	___ftge@ff1
  1585  0720  307F               	movlw	127
  1586  0721  00F1               	movwf	___ftge@ff1+1
  1587  0722  3044               	movlw	68
  1588  0723  00F2               	movwf	___ftge@ff1+2
  1589  0724  0840               	movf	main@Rspeed^(0+128),w
  1590  0725  00F3               	movwf	___ftge@ff2
  1591  0726  0841               	movf	(main@Rspeed+1)^(0+128),w
  1592  0727  00F4               	movwf	___ftge@ff2+1
  1593  0728  0842               	movf	(main@Rspeed+2)^(0+128),w
  1594  0729  00F5               	movwf	___ftge@ff2+2
  1595  072A  120A  158A  263C  120A  118A  	fcall	___ftge
  1596  072F  1803               	btfsc	3,0
  1597  0730  2F39               	goto	l1657
  1598                           
  1599                           ;finalcode.c: 194: Rspeed=1023;
  1600  0731  30C0               	movlw	192
  1601  0732  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0733  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0734  00C0               	movwf	main@Rspeed^(0+128)
  1604  0735  307F               	movlw	127
  1605  0736  00C1               	movwf	(main@Rspeed+1)^(0+128)
  1606  0737  3044               	movlw	68
  1607  0738  00C2               	movwf	(main@Rspeed+2)^(0+128)
  1608  0739                     l1657:	
  1609                           
  1610                           ;finalcode.c: 195: }
  1611                           ;finalcode.c: 196: if(Lspeed>1023){
  1612  0739  30C0               	movlw	192
  1613  073A  00F0               	movwf	___ftge@ff1
  1614  073B  307F               	movlw	127
  1615  073C  00F1               	movwf	___ftge@ff1+1
  1616  073D  3044               	movlw	68
  1617  073E  00F2               	movwf	___ftge@ff1+2
  1618  073F  1683               	bsf	3,5	;RP0=1, select bank1
  1619  0740  1303               	bcf	3,6	;RP1=0, select bank1
  1620  0741  083D               	movf	main@Lspeed^(0+128),w
  1621  0742  00F3               	movwf	___ftge@ff2
  1622  0743  083E               	movf	(main@Lspeed+1)^(0+128),w
  1623  0744  00F4               	movwf	___ftge@ff2+1
  1624  0745  083F               	movf	(main@Lspeed+2)^(0+128),w
  1625  0746  00F5               	movwf	___ftge@ff2+2
  1626  0747  120A  158A  263C  120A  118A  	fcall	___ftge
  1627  074C  1803               	btfsc	3,0
  1628  074D  2F56               	goto	l1661
  1629                           
  1630                           ;finalcode.c: 197: Lspeed=1023;
  1631  074E  30C0               	movlw	192
  1632  074F  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0750  1303               	bcf	3,6	;RP1=0, select bank1
  1634  0751  00BD               	movwf	main@Lspeed^(0+128)
  1635  0752  307F               	movlw	127
  1636  0753  00BE               	movwf	(main@Lspeed+1)^(0+128)
  1637  0754  3044               	movlw	68
  1638  0755  00BF               	movwf	(main@Lspeed+2)^(0+128)
  1639  0756                     l1661:	
  1640                           
  1641                           ;finalcode.c: 198: }
  1642                           ;finalcode.c: 209: if((RB0==0)&&(RB1==0)&&(RB2==0)&&(RB3==0)&&(RB4==0)&&(RB5==0)&&(RB6==
      +                          0)&&(RB7==0)){
  1643  0756  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0757  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0758  1C06               	btfss	6,0	;volatile
  1646  0759  1886               	btfsc	6,1	;volatile
  1647  075A  2F7C               	goto	l114
  1648  075B  1D06               	btfss	6,2	;volatile
  1649  075C  1986               	btfsc	6,3	;volatile
  1650  075D  2F7C               	goto	l114
  1651  075E  1E06               	btfss	6,4	;volatile
  1652  075F  1A86               	btfsc	6,5	;volatile
  1653  0760  2F7C               	goto	l114
  1654  0761  1F06               	btfss	6,6	;volatile
  1655  0762  1B86               	btfsc	6,7	;volatile
  1656  0763  2F7C               	goto	l114
  1657                           
  1658                           ;finalcode.c: 210: PWM1_Stop();
  1659  0764  120A  158A  24EB  120A  118A  	fcall	_PWM1_Stop
  1660                           
  1661                           ;finalcode.c: 211: PWM2_Stop();
  1662  0769  120A  158A  24F0  120A  118A  	fcall	_PWM2_Stop
  1663                           
  1664                           ;finalcode.c: 212: Lspeed=0;
  1665  076E  3000               	movlw	0
  1666  076F  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0770  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0771  00BD               	movwf	main@Lspeed^(0+128)
  1669  0772  3000               	movlw	0
  1670  0773  00BE               	movwf	(main@Lspeed+1)^(0+128)
  1671  0774  3000               	movlw	0
  1672  0775  00BF               	movwf	(main@Lspeed+2)^(0+128)
  1673                           
  1674                           ;finalcode.c: 213: Rspeed=0;
  1675  0776  3000               	movlw	0
  1676  0777  00C0               	movwf	main@Rspeed^(0+128)
  1677  0778  3000               	movlw	0
  1678  0779  00C1               	movwf	(main@Rspeed+1)^(0+128)
  1679  077A  3000               	movlw	0
  1680  077B  00C2               	movwf	(main@Rspeed+2)^(0+128)
  1681  077C                     l114:	
  1682                           
  1683                           ;finalcode.c: 214: }
  1684                           ;finalcode.c: 215: PWM1_Start();
  1685  077C  120A  158A  24F5  120A  118A  	fcall	_PWM1_Start
  1686                           
  1687                           ;finalcode.c: 216: PWM2_Start();
  1688  0781  120A  158A  2508  120A  118A  	fcall	_PWM2_Start
  1689                           
  1690                           ;finalcode.c: 217: _delay((unsigned long)((20)*(16000000/4000.0)));
  1691  0786  3068               	movlw	104
  1692  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0789  00E3               	movwf	??_main+1
  1695  078A  30E3               	movlw	227
  1696  078B  00E2               	movwf	??_main
  1697  078C                     u2497:	
  1698  078C  0BE2               	decfsz	??_main,f
  1699  078D  2F8C               	goto	u2497
  1700  078E  0BE3               	decfsz	??_main+1,f
  1701  078F  2F8C               	goto	u2497
  1702  0790  2F91               	nop2
  1703                           
  1704                           ;finalcode.c: 218: RD3=1;
  1705  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0793  1588               	bsf	8,3	;volatile
  1708                           
  1709                           ;finalcode.c: 219: RD4=0;
  1710  0794  1208               	bcf	8,4	;volatile
  1711                           
  1712                           ;finalcode.c: 220: RD1=1;
  1713  0795  1488               	bsf	8,1	;volatile
  1714                           
  1715                           ;finalcode.c: 221: RD2=0;
  1716  0796  1108               	bcf	8,2	;volatile
  1717                           
  1718                           ;finalcode.c: 222: PWM1_Duty(Rspeed);
  1719  0797  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0798  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0799  0840               	movf	main@Rspeed^(0+128),w
  1722  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1723  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1724  079C  00D0               	movwf	___fttol@f1
  1725  079D  1683               	bsf	3,5	;RP0=1, select bank1
  1726  079E  1303               	bcf	3,6	;RP1=0, select bank1
  1727  079F  0841               	movf	(main@Rspeed+1)^(0+128),w
  1728  07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1729  07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1730  07A2  00D1               	movwf	___fttol@f1+1
  1731  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  1732  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  1733  07A5  0842               	movf	(main@Rspeed+2)^(0+128),w
  1734  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1735  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1736  07A8  00D2               	movwf	___fttol@f1+2
  1737  07A9  120A  158A  2772  120A  118A  	fcall	___fttol
  1738  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1739  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1740  07B0  0851               	movf	?___fttol+1,w
  1741  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  1742  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  1743  07B3  00B0               	movwf	(_main$495+1)^(0+128)
  1744  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1745  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1746  07B6  0850               	movf	?___fttol,w
  1747  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  1748  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  1749  07B9  00AF               	movwf	_main$495^(0+128)
  1750                           
  1751                           ;finalcode.c: 222: PWM1_Duty(Rspeed);
  1752  07BA  0830               	movf	(_main$495+1)^(0+128),w
  1753  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1754  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1755  07BD  00DF               	movwf	PWM1_Duty@duty+1
  1756  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  1757  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  1758  07C0  082F               	movf	_main$495^(0+128),w
  1759  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1760  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1761  07C3  00DE               	movwf	PWM1_Duty@duty
  1762  07C4  120A  158A  2705  120A  118A  	fcall	_PWM1_Duty
  1763                           
  1764                           ;finalcode.c: 223: PWM2_Duty(Lspeed);
  1765  07C9  1683               	bsf	3,5	;RP0=1, select bank1
  1766  07CA  1303               	bcf	3,6	;RP1=0, select bank1
  1767  07CB  083D               	movf	main@Lspeed^(0+128),w
  1768  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1769  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1770  07CE  00D0               	movwf	___fttol@f1
  1771  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1772  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1773  07D1  083E               	movf	(main@Lspeed+1)^(0+128),w
  1774  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1775  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1776  07D4  00D1               	movwf	___fttol@f1+1
  1777  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  1778  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  1779  07D7  083F               	movf	(main@Lspeed+2)^(0+128),w
  1780  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  1781  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  1782  07DA  00D2               	movwf	___fttol@f1+2
  1783  07DB  120A  158A  2772  120A  118A  	fcall	___fttol
  1784  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1785  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1786  07E2  0851               	movf	?___fttol+1,w
  1787  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  1788  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  1789  07E5  00B2               	movwf	(_main$496+1)^(0+128)
  1790  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1791  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1792  07E8  0850               	movf	?___fttol,w
  1793  07E9  1683               	bsf	3,5	;RP0=1, select bank1
  1794  07EA  1303               	bcf	3,6	;RP1=0, select bank1
  1795  07EB  00B1               	movwf	_main$496^(0+128)
  1796                           
  1797                           ;finalcode.c: 223: PWM2_Duty(Lspeed);
  1798  07EC  0832               	movf	(_main$496+1)^(0+128),w
  1799  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1800  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1801  07EF  00DF               	movwf	PWM2_Duty@duty+1
  1802  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  1803  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  1804  07F2  0831               	movf	_main$496^(0+128),w
  1805  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  1806  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  1807  07F5  00DE               	movwf	PWM2_Duty@duty
  1808  07F6  120A  118A  2018  120A  118A  	fcall	_PWM2_Duty
  1809  07FB  2BE3               	goto	l1563
  1810  07FC                     __end_of_main:	
  1811                           
  1812                           	psect	text1
  1813  0CFE                     __ptext1:	
  1814 ;; *************** function ___ftneg *****************
  1815 ;; Defined at:
  1816 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  f1              3   16[BANK0 ] float 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  3   16[BANK0 ] float 
  1823 ;; Registers used:
  1824 ;;		wreg
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       3       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0
  1833 ;;      Totals:         0       3       0       0       0
  1834 ;;Total ram usage:        3 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function ___ftneg
  1845  0CFE                     ___ftneg:	
  1846                           
  1847                           ;incstack = 0
  1848                           ; Regs used in ___ftneg: [wreg]
  1849  0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0D00  0832               	movf	___ftneg@f1+2,w
  1852  0D01  0431               	iorwf	___ftneg@f1+1,w
  1853  0D02  0430               	iorwf	___ftneg@f1,w
  1854  0D03  1903               	skipnz
  1855  0D04  0008               	return
  1856  0D05  3080               	movlw	128
  1857  0D06  06B2               	xorwf	___ftneg@f1+2,f
  1858  0D07  0008               	return
  1859  0D08                     __end_of___ftneg:	
  1860                           
  1861                           	psect	text2
  1862  0E3C                     __ptext2:	
  1863 ;; *************** function ___ftge *****************
  1864 ;; Defined at:
  1865 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  ff1             3    0[COMMON] float 
  1868 ;;  ff2             3    3[COMMON] float 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;		None
  1871 ;; Return value:  Size  Location     Type
  1872 ;;		None               void
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         6       0       0       0       0
  1881 ;;      Locals:         0       0       0       0       0
  1882 ;;      Temps:          6       0       0       0       0
  1883 ;;      Totals:        12       0       0       0       0
  1884 ;;Total ram usage:       12 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           
  1894                           ;psect for function ___ftge
  1895  0E3C                     ___ftge:	
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1899  0E3C  1FF2               	btfss	___ftge@ff1+2,7
  1900  0E3D  2E63               	goto	l1523
  1901  0E3E  3000               	movlw	0
  1902  0E3F  00F6               	movwf	??___ftge
  1903  0E40  3000               	movlw	0
  1904  0E41  00F7               	movwf	??___ftge+1
  1905  0E42  3080               	movlw	128
  1906  0E43  00F8               	movwf	??___ftge+2
  1907  0E44  0970               	comf	___ftge@ff1,w
  1908  0E45  00F9               	movwf	??___ftge+3
  1909  0E46  0971               	comf	___ftge@ff1+1,w
  1910  0E47  00FA               	movwf	??___ftge+4
  1911  0E48  0972               	comf	___ftge@ff1+2,w
  1912  0E49  00FB               	movwf	??___ftge+5
  1913  0E4A  0AF9               	incf	??___ftge+3,f
  1914  0E4B  1903               	skipnz
  1915  0E4C  0AFA               	incf	??___ftge+4,f
  1916  0E4D  1903               	skipnz
  1917  0E4E  0AFB               	incf	??___ftge+5,f
  1918  0E4F  0879               	movf	??___ftge+3,w
  1919  0E50  07F6               	addwf	??___ftge,f
  1920  0E51  087A               	movf	??___ftge+4,w
  1921  0E52  1803               	skipnc
  1922  0E53  0F7A               	incfsz	??___ftge+4,w
  1923  0E54  2E56               	goto	u2241
  1924  0E55  2E57               	goto	u2242
  1925  0E56                     u2241:	
  1926  0E56  07F7               	addwf	??___ftge+1,f
  1927  0E57                     u2242:	
  1928  0E57  087B               	movf	??___ftge+5,w
  1929  0E58  1803               	skipnc
  1930  0E59  0F7B               	incfsz	??___ftge+5,w
  1931  0E5A  2E5C               	goto	u2243
  1932  0E5B  2E5D               	goto	u2244
  1933  0E5C                     u2243:	
  1934  0E5C  07F8               	addwf	??___ftge+2,f
  1935  0E5D                     u2244:	
  1936  0E5D  0876               	movf	??___ftge,w
  1937  0E5E  00F0               	movwf	___ftge@ff1
  1938  0E5F  0877               	movf	??___ftge+1,w
  1939  0E60  00F1               	movwf	___ftge@ff1+1
  1940  0E61  0878               	movf	??___ftge+2,w
  1941  0E62  00F2               	movwf	___ftge@ff1+2
  1942  0E63                     l1523:	
  1943  0E63  1FF5               	btfss	___ftge@ff2+2,7
  1944  0E64  2E8A               	goto	l1527
  1945  0E65  3000               	movlw	0
  1946  0E66  00F6               	movwf	??___ftge
  1947  0E67  3000               	movlw	0
  1948  0E68  00F7               	movwf	??___ftge+1
  1949  0E69  3080               	movlw	128
  1950  0E6A  00F8               	movwf	??___ftge+2
  1951  0E6B  0973               	comf	___ftge@ff2,w
  1952  0E6C  00F9               	movwf	??___ftge+3
  1953  0E6D  0974               	comf	___ftge@ff2+1,w
  1954  0E6E  00FA               	movwf	??___ftge+4
  1955  0E6F  0975               	comf	___ftge@ff2+2,w
  1956  0E70  00FB               	movwf	??___ftge+5
  1957  0E71  0AF9               	incf	??___ftge+3,f
  1958  0E72  1903               	skipnz
  1959  0E73  0AFA               	incf	??___ftge+4,f
  1960  0E74  1903               	skipnz
  1961  0E75  0AFB               	incf	??___ftge+5,f
  1962  0E76  0879               	movf	??___ftge+3,w
  1963  0E77  07F6               	addwf	??___ftge,f
  1964  0E78  087A               	movf	??___ftge+4,w
  1965  0E79  1803               	skipnc
  1966  0E7A  0F7A               	incfsz	??___ftge+4,w
  1967  0E7B  2E7D               	goto	u2261
  1968  0E7C  2E7E               	goto	u2262
  1969  0E7D                     u2261:	
  1970  0E7D  07F7               	addwf	??___ftge+1,f
  1971  0E7E                     u2262:	
  1972  0E7E  087B               	movf	??___ftge+5,w
  1973  0E7F  1803               	skipnc
  1974  0E80  0F7B               	incfsz	??___ftge+5,w
  1975  0E81  2E83               	goto	u2263
  1976  0E82  2E84               	goto	u2264
  1977  0E83                     u2263:	
  1978  0E83  07F8               	addwf	??___ftge+2,f
  1979  0E84                     u2264:	
  1980  0E84  0876               	movf	??___ftge,w
  1981  0E85  00F3               	movwf	___ftge@ff2
  1982  0E86  0877               	movf	??___ftge+1,w
  1983  0E87  00F4               	movwf	___ftge@ff2+1
  1984  0E88  0878               	movf	??___ftge+2,w
  1985  0E89  00F5               	movwf	___ftge@ff2+2
  1986  0E8A                     l1527:	
  1987  0E8A  3080               	movlw	128
  1988  0E8B  06F2               	xorwf	___ftge@ff1+2,f
  1989  0E8C  3080               	movlw	128
  1990  0E8D  06F5               	xorwf	___ftge@ff2+2,f
  1991  0E8E  0875               	movf	___ftge@ff2+2,w
  1992  0E8F  0272               	subwf	___ftge@ff1+2,w
  1993  0E90  1D03               	skipz
  1994  0E91  0008               	return
  1995  0E92  0874               	movf	___ftge@ff2+1,w
  1996  0E93  0271               	subwf	___ftge@ff1+1,w
  1997  0E94  1D03               	skipz
  1998  0E95  0008               	return
  1999  0E96  0873               	movf	___ftge@ff2,w
  2000  0E97  0270               	subwf	___ftge@ff1,w
  2001  0E98  0008               	return
  2002  0E99                     __end_of___ftge:	
  2003                           
  2004                           	psect	text3
  2005  029F                     __ptext3:	
  2006 ;; *************** function ___ftadd *****************
  2007 ;; Defined at:
  2008 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  f1              3   19[BANK0 ] float 
  2011 ;;  f2              3   22[BANK0 ] float 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  exp1            1   31[BANK0 ] unsigned char 
  2014 ;;  exp2            1   30[BANK0 ] unsigned char 
  2015 ;;  sign            1   29[BANK0 ] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  3   19[BANK0 ] float 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       6       0       0       0
  2026 ;;      Locals:         0       3       0       0       0
  2027 ;;      Temps:          0       4       0       0       0
  2028 ;;      Totals:         0      13       0       0       0
  2029 ;;Total ram usage:       13 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    1
  2032 ;; This function calls:
  2033 ;;		___ftpack
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function ___ftadd
  2041  029F                     ___ftadd:	
  2042                           
  2043                           ;incstack = 0
  2044                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2045  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2046  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2047  02A1  0833               	movf	___ftadd@f1,w
  2048  02A2  00B9               	movwf	??___ftadd
  2049  02A3  0834               	movf	___ftadd@f1+1,w
  2050  02A4  00BA               	movwf	??___ftadd+1
  2051  02A5  0835               	movf	___ftadd@f1+2,w
  2052  02A6  00BB               	movwf	??___ftadd+2
  2053  02A7  1003               	clrc
  2054  02A8  0D3A               	rlf	??___ftadd+1,w
  2055  02A9  0D3B               	rlf	??___ftadd+2,w
  2056  02AA  00BC               	movwf	??___ftadd+3
  2057  02AB  083C               	movf	??___ftadd+3,w
  2058  02AC  00BF               	movwf	___ftadd@exp1
  2059  02AD  0836               	movf	___ftadd@f2,w
  2060  02AE  00B9               	movwf	??___ftadd
  2061  02AF  0837               	movf	___ftadd@f2+1,w
  2062  02B0  00BA               	movwf	??___ftadd+1
  2063  02B1  0838               	movf	___ftadd@f2+2,w
  2064  02B2  00BB               	movwf	??___ftadd+2
  2065  02B3  1003               	clrc
  2066  02B4  0D3A               	rlf	??___ftadd+1,w
  2067  02B5  0D3B               	rlf	??___ftadd+2,w
  2068  02B6  00BC               	movwf	??___ftadd+3
  2069  02B7  083C               	movf	??___ftadd+3,w
  2070  02B8  00BE               	movwf	___ftadd@exp2
  2071  02B9  083F               	movf	___ftadd@exp1,w
  2072  02BA  1903               	btfsc	3,2
  2073  02BB  2AC8               	goto	l1455
  2074  02BC  083E               	movf	___ftadd@exp2,w
  2075  02BD  023F               	subwf	___ftadd@exp1,w
  2076  02BE  1803               	skipnc
  2077  02BF  2ACF               	goto	l1459
  2078  02C0  033F               	decf	___ftadd@exp1,w
  2079  02C1  3AFF               	xorlw	255
  2080  02C2  073E               	addwf	___ftadd@exp2,w
  2081  02C3  00B9               	movwf	??___ftadd
  2082  02C4  3019               	movlw	25
  2083  02C5  0239               	subwf	??___ftadd,w
  2084  02C6  1C03               	skipc
  2085  02C7  2ACF               	goto	l1459
  2086  02C8                     l1455:	
  2087  02C8  0836               	movf	___ftadd@f2,w
  2088  02C9  00B3               	movwf	?___ftadd
  2089  02CA  0837               	movf	___ftadd@f2+1,w
  2090  02CB  00B4               	movwf	?___ftadd+1
  2091  02CC  0838               	movf	___ftadd@f2+2,w
  2092  02CD  00B5               	movwf	?___ftadd+2
  2093  02CE  0008               	return
  2094  02CF                     l1459:	
  2095  02CF  083E               	movf	___ftadd@exp2,w
  2096  02D0  1903               	btfsc	3,2
  2097  02D1  0008               	return
  2098  02D2  083F               	movf	___ftadd@exp1,w
  2099  02D3  023E               	subwf	___ftadd@exp2,w
  2100  02D4  1803               	skipnc
  2101  02D5  2ADE               	goto	l1465
  2102  02D6  033E               	decf	___ftadd@exp2,w
  2103  02D7  3AFF               	xorlw	255
  2104  02D8  073F               	addwf	___ftadd@exp1,w
  2105  02D9  00B9               	movwf	??___ftadd
  2106  02DA  3019               	movlw	25
  2107  02DB  0239               	subwf	??___ftadd,w
  2108  02DC  1803               	btfsc	3,0
  2109  02DD  0008               	return
  2110  02DE                     l1465:	
  2111  02DE  3006               	movlw	6
  2112  02DF  00B9               	movwf	??___ftadd
  2113  02E0  0839               	movf	??___ftadd,w
  2114  02E1  00BD               	movwf	___ftadd@sign
  2115  02E2  1BB5               	btfsc	___ftadd@f1+2,7
  2116  02E3  17BD               	bsf	___ftadd@sign,7
  2117  02E4  1BB8               	btfsc	___ftadd@f2+2,7
  2118  02E5  173D               	bsf	___ftadd@sign,6
  2119  02E6  17B4               	bsf	___ftadd@f1+1,7
  2120  02E7  30FF               	movlw	255
  2121  02E8  05B3               	andwf	___ftadd@f1,f
  2122  02E9  30FF               	movlw	255
  2123  02EA  05B4               	andwf	___ftadd@f1+1,f
  2124  02EB  3000               	movlw	0
  2125  02EC  05B5               	andwf	___ftadd@f1+2,f
  2126  02ED  17B7               	bsf	___ftadd@f2+1,7
  2127  02EE  30FF               	movlw	255
  2128  02EF  05B6               	andwf	___ftadd@f2,f
  2129  02F0  30FF               	movlw	255
  2130  02F1  05B7               	andwf	___ftadd@f2+1,f
  2131  02F2  3000               	movlw	0
  2132  02F3  05B8               	andwf	___ftadd@f2+2,f
  2133  02F4  083E               	movf	___ftadd@exp2,w
  2134  02F5  023F               	subwf	___ftadd@exp1,w
  2135  02F6  1803               	skipnc
  2136  02F7  2B1E               	goto	l1487
  2137  02F8                     l1477:	
  2138  02F8  3001               	movlw	1
  2139  02F9                     u2085:	
  2140  02F9  1003               	clrc
  2141  02FA  0DB6               	rlf	___ftadd@f2,f
  2142  02FB  0DB7               	rlf	___ftadd@f2+1,f
  2143  02FC  0DB8               	rlf	___ftadd@f2+2,f
  2144  02FD  3EFF               	addlw	-1
  2145  02FE  1D03               	skipz
  2146  02FF  2AF9               	goto	u2085
  2147  0300  3001               	movlw	1
  2148  0301  02BE               	subwf	___ftadd@exp2,f
  2149  0302  083E               	movf	___ftadd@exp2,w
  2150  0303  063F               	xorwf	___ftadd@exp1,w
  2151  0304  1903               	skipnz
  2152  0305  2B19               	goto	l1485
  2153  0306  3001               	movlw	1
  2154  0307  02BD               	subwf	___ftadd@sign,f
  2155  0308  083D               	movf	___ftadd@sign,w
  2156  0309  3907               	andlw	7
  2157  030A  1903               	btfsc	3,2
  2158  030B  2B19               	goto	l1485
  2159  030C  2AF8               	goto	l1477
  2160  030D                     l1483:	
  2161  030D  3001               	movlw	1
  2162  030E                     u2115:	
  2163  030E  1003               	clrc
  2164  030F  0CB5               	rrf	___ftadd@f1+2,f
  2165  0310  0CB4               	rrf	___ftadd@f1+1,f
  2166  0311  0CB3               	rrf	___ftadd@f1,f
  2167  0312  3EFF               	addlw	-1
  2168  0313  1D03               	skipz
  2169  0314  2B0E               	goto	u2115
  2170  0315  3001               	movlw	1
  2171  0316  00B9               	movwf	??___ftadd
  2172  0317  0839               	movf	??___ftadd,w
  2173  0318  07BF               	addwf	___ftadd@exp1,f
  2174  0319                     l1485:	
  2175  0319  083F               	movf	___ftadd@exp1,w
  2176  031A  063E               	xorwf	___ftadd@exp2,w
  2177  031B  1903               	btfsc	3,2
  2178  031C  2B47               	goto	l393
  2179  031D  2B0D               	goto	l1483
  2180  031E                     l1487:	
  2181  031E  083F               	movf	___ftadd@exp1,w
  2182  031F  023E               	subwf	___ftadd@exp2,w
  2183  0320  1803               	skipnc
  2184  0321  2B47               	goto	l393
  2185  0322                     l1489:	
  2186  0322  3001               	movlw	1
  2187  0323                     u2145:	
  2188  0323  1003               	clrc
  2189  0324  0DB3               	rlf	___ftadd@f1,f
  2190  0325  0DB4               	rlf	___ftadd@f1+1,f
  2191  0326  0DB5               	rlf	___ftadd@f1+2,f
  2192  0327  3EFF               	addlw	-1
  2193  0328  1D03               	skipz
  2194  0329  2B23               	goto	u2145
  2195  032A  3001               	movlw	1
  2196  032B  02BF               	subwf	___ftadd@exp1,f
  2197  032C  083E               	movf	___ftadd@exp2,w
  2198  032D  063F               	xorwf	___ftadd@exp1,w
  2199  032E  1903               	skipnz
  2200  032F  2B43               	goto	l1497
  2201  0330  3001               	movlw	1
  2202  0331  02BD               	subwf	___ftadd@sign,f
  2203  0332  083D               	movf	___ftadd@sign,w
  2204  0333  3907               	andlw	7
  2205  0334  1903               	btfsc	3,2
  2206  0335  2B43               	goto	l1497
  2207  0336  2B22               	goto	l1489
  2208  0337                     l1495:	
  2209  0337  3001               	movlw	1
  2210  0338                     u2175:	
  2211  0338  1003               	clrc
  2212  0339  0CB8               	rrf	___ftadd@f2+2,f
  2213  033A  0CB7               	rrf	___ftadd@f2+1,f
  2214  033B  0CB6               	rrf	___ftadd@f2,f
  2215  033C  3EFF               	addlw	-1
  2216  033D  1D03               	skipz
  2217  033E  2B38               	goto	u2175
  2218  033F  3001               	movlw	1
  2219  0340  00B9               	movwf	??___ftadd
  2220  0341  0839               	movf	??___ftadd,w
  2221  0342  07BE               	addwf	___ftadd@exp2,f
  2222  0343                     l1497:	
  2223  0343  083F               	movf	___ftadd@exp1,w
  2224  0344  063E               	xorwf	___ftadd@exp2,w
  2225  0345  1D03               	skipz
  2226  0346  2B37               	goto	l1495
  2227  0347                     l393:	
  2228  0347  1FBD               	btfss	___ftadd@sign,7
  2229  0348  2B59               	goto	l1501
  2230  0349  30FF               	movlw	255
  2231  034A  06B3               	xorwf	___ftadd@f1,f
  2232  034B  30FF               	movlw	255
  2233  034C  06B4               	xorwf	___ftadd@f1+1,f
  2234  034D  30FF               	movlw	255
  2235  034E  06B5               	xorwf	___ftadd@f1+2,f
  2236  034F  3001               	movlw	1
  2237  0350  07B3               	addwf	___ftadd@f1,f
  2238  0351  3000               	movlw	0
  2239  0352  1803               	skipnc
  2240  0353  3001               	movlw	1
  2241  0354  07B4               	addwf	___ftadd@f1+1,f
  2242  0355  3000               	movlw	0
  2243  0356  1803               	skipnc
  2244  0357  3001               	movlw	1
  2245  0358  07B5               	addwf	___ftadd@f1+2,f
  2246  0359                     l1501:	
  2247  0359  1F3D               	btfss	___ftadd@sign,6
  2248  035A  2B6B               	goto	l1505
  2249  035B  30FF               	movlw	255
  2250  035C  06B6               	xorwf	___ftadd@f2,f
  2251  035D  30FF               	movlw	255
  2252  035E  06B7               	xorwf	___ftadd@f2+1,f
  2253  035F  30FF               	movlw	255
  2254  0360  06B8               	xorwf	___ftadd@f2+2,f
  2255  0361  3001               	movlw	1
  2256  0362  07B6               	addwf	___ftadd@f2,f
  2257  0363  3000               	movlw	0
  2258  0364  1803               	skipnc
  2259  0365  3001               	movlw	1
  2260  0366  07B7               	addwf	___ftadd@f2+1,f
  2261  0367  3000               	movlw	0
  2262  0368  1803               	skipnc
  2263  0369  3001               	movlw	1
  2264  036A  07B8               	addwf	___ftadd@f2+2,f
  2265  036B                     l1505:	
  2266  036B  01BD               	clrf	___ftadd@sign
  2267  036C  0833               	movf	___ftadd@f1,w
  2268  036D  07B6               	addwf	___ftadd@f2,f
  2269  036E  0834               	movf	___ftadd@f1+1,w
  2270  036F  1103               	clrz
  2271  0370  1803               	skipnc
  2272  0371  0A34               	incf	___ftadd@f1+1,w
  2273  0372  1D03               	btfss	3,2
  2274  0373  07B7               	addwf	___ftadd@f2+1,f
  2275  0374  0835               	movf	___ftadd@f1+2,w
  2276  0375  1103               	clrz
  2277  0376  1803               	skipnc
  2278  0377  0A35               	incf	___ftadd@f1+2,w
  2279  0378  1D03               	btfss	3,2
  2280  0379  07B8               	addwf	___ftadd@f2+2,f
  2281  037A  1FB8               	btfss	___ftadd@f2+2,7
  2282  037B  2B8E               	goto	l1515
  2283  037C  30FF               	movlw	255
  2284  037D  06B6               	xorwf	___ftadd@f2,f
  2285  037E  30FF               	movlw	255
  2286  037F  06B7               	xorwf	___ftadd@f2+1,f
  2287  0380  30FF               	movlw	255
  2288  0381  06B8               	xorwf	___ftadd@f2+2,f
  2289  0382  3001               	movlw	1
  2290  0383  07B6               	addwf	___ftadd@f2,f
  2291  0384  3000               	movlw	0
  2292  0385  1803               	skipnc
  2293  0386  3001               	movlw	1
  2294  0387  07B7               	addwf	___ftadd@f2+1,f
  2295  0388  3000               	movlw	0
  2296  0389  1803               	skipnc
  2297  038A  3001               	movlw	1
  2298  038B  07B8               	addwf	___ftadd@f2+2,f
  2299  038C  01BD               	clrf	___ftadd@sign
  2300  038D  0ABD               	incf	___ftadd@sign,f
  2301  038E                     l1515:	
  2302  038E  0836               	movf	___ftadd@f2,w
  2303  038F  00F0               	movwf	___ftpack@arg
  2304  0390  0837               	movf	___ftadd@f2+1,w
  2305  0391  00F1               	movwf	___ftpack@arg+1
  2306  0392  0838               	movf	___ftadd@f2+2,w
  2307  0393  00F2               	movwf	___ftpack@arg+2
  2308  0394  083F               	movf	___ftadd@exp1,w
  2309  0395  00B9               	movwf	??___ftadd
  2310  0396  0839               	movf	??___ftadd,w
  2311  0397  00F3               	movwf	___ftpack@exp
  2312  0398  083D               	movf	___ftadd@sign,w
  2313  0399  00BA               	movwf	??___ftadd+1
  2314  039A  083A               	movf	??___ftadd+1,w
  2315  039B  00F4               	movwf	___ftpack@sign
  2316  039C  120A  158A  2699   	fcall	___ftpack
  2317  039F  0870               	movf	?___ftpack,w
  2318  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2319  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2320  03A2  00B3               	movwf	?___ftadd
  2321  03A3  0871               	movf	?___ftpack+1,w
  2322  03A4  00B4               	movwf	?___ftadd+1
  2323  03A5  0872               	movf	?___ftpack+2,w
  2324  03A6  00B5               	movwf	?___ftadd+2
  2325  03A7  0008               	return
  2326  03A8                     __end_of___ftadd:	
  2327                           
  2328                           	psect	text4
  2329  0DE3                     __ptext4:	
  2330 ;; *************** function ___awdiv *****************
  2331 ;; Defined at:
  2332 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  divisor         2    0[COMMON] int 
  2335 ;;  dividend        2    2[COMMON] int 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  quotient        2    7[COMMON] int 
  2338 ;;  sign            1    6[COMMON] unsigned char 
  2339 ;;  counter         1    5[COMMON] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2    0[COMMON] int 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         4       0       0       0       0
  2350 ;;      Locals:         4       0       0       0       0
  2351 ;;      Temps:          1       0       0       0       0
  2352 ;;      Totals:         9       0       0       0       0
  2353 ;;Total ram usage:        9 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           
  2363                           ;psect for function ___awdiv
  2364  0DE3                     ___awdiv:	
  2365                           
  2366                           ;incstack = 0
  2367                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2368  0DE3  01F6               	clrf	___awdiv@sign
  2369  0DE4  1FF1               	btfss	___awdiv@divisor+1,7
  2370  0DE5  2DED               	goto	l1413
  2371  0DE6  09F0               	comf	___awdiv@divisor,f
  2372  0DE7  09F1               	comf	___awdiv@divisor+1,f
  2373  0DE8  0AF0               	incf	___awdiv@divisor,f
  2374  0DE9  1903               	skipnz
  2375  0DEA  0AF1               	incf	___awdiv@divisor+1,f
  2376  0DEB  01F6               	clrf	___awdiv@sign
  2377  0DEC  0AF6               	incf	___awdiv@sign,f
  2378  0DED                     l1413:	
  2379  0DED  1FF3               	btfss	___awdiv@dividend+1,7
  2380  0DEE  2DF8               	goto	l1419
  2381  0DEF  09F2               	comf	___awdiv@dividend,f
  2382  0DF0  09F3               	comf	___awdiv@dividend+1,f
  2383  0DF1  0AF2               	incf	___awdiv@dividend,f
  2384  0DF2  1903               	skipnz
  2385  0DF3  0AF3               	incf	___awdiv@dividend+1,f
  2386  0DF4  3001               	movlw	1
  2387  0DF5  00F4               	movwf	??___awdiv
  2388  0DF6  0874               	movf	??___awdiv,w
  2389  0DF7  06F6               	xorwf	___awdiv@sign,f
  2390  0DF8                     l1419:	
  2391  0DF8  01F7               	clrf	___awdiv@quotient
  2392  0DF9  01F8               	clrf	___awdiv@quotient+1
  2393  0DFA  0870               	movf	___awdiv@divisor,w
  2394  0DFB  0471               	iorwf	___awdiv@divisor+1,w
  2395  0DFC  1903               	btfsc	3,2
  2396  0DFD  2E2F               	goto	l1441
  2397  0DFE  01F5               	clrf	___awdiv@counter
  2398  0DFF  0AF5               	incf	___awdiv@counter,f
  2399  0E00                     l1429:	
  2400  0E00  1BF1               	btfsc	___awdiv@divisor+1,7
  2401  0E01  2E0E               	goto	l1431
  2402  0E02  3001               	movlw	1
  2403  0E03                     u1925:	
  2404  0E03  1003               	clrc
  2405  0E04  0DF0               	rlf	___awdiv@divisor,f
  2406  0E05  0DF1               	rlf	___awdiv@divisor+1,f
  2407  0E06  3EFF               	addlw	-1
  2408  0E07  1D03               	skipz
  2409  0E08  2E03               	goto	u1925
  2410  0E09  3001               	movlw	1
  2411  0E0A  00F4               	movwf	??___awdiv
  2412  0E0B  0874               	movf	??___awdiv,w
  2413  0E0C  07F5               	addwf	___awdiv@counter,f
  2414  0E0D  2E00               	goto	l1429
  2415  0E0E                     l1431:	
  2416  0E0E  3001               	movlw	1
  2417  0E0F                     u1945:	
  2418  0E0F  1003               	clrc
  2419  0E10  0DF7               	rlf	___awdiv@quotient,f
  2420  0E11  0DF8               	rlf	___awdiv@quotient+1,f
  2421  0E12  3EFF               	addlw	-1
  2422  0E13  1D03               	skipz
  2423  0E14  2E0F               	goto	u1945
  2424  0E15  0871               	movf	___awdiv@divisor+1,w
  2425  0E16  0273               	subwf	___awdiv@dividend+1,w
  2426  0E17  1D03               	skipz
  2427  0E18  2E1B               	goto	u1955
  2428  0E19  0870               	movf	___awdiv@divisor,w
  2429  0E1A  0272               	subwf	___awdiv@dividend,w
  2430  0E1B                     u1955:	
  2431  0E1B  1C03               	skipc
  2432  0E1C  2E24               	goto	l1437
  2433  0E1D  0870               	movf	___awdiv@divisor,w
  2434  0E1E  02F2               	subwf	___awdiv@dividend,f
  2435  0E1F  0871               	movf	___awdiv@divisor+1,w
  2436  0E20  1C03               	skipc
  2437  0E21  03F3               	decf	___awdiv@dividend+1,f
  2438  0E22  02F3               	subwf	___awdiv@dividend+1,f
  2439  0E23  1477               	bsf	___awdiv@quotient,0
  2440  0E24                     l1437:	
  2441  0E24  3001               	movlw	1
  2442  0E25                     u1965:	
  2443  0E25  1003               	clrc
  2444  0E26  0CF1               	rrf	___awdiv@divisor+1,f
  2445  0E27  0CF0               	rrf	___awdiv@divisor,f
  2446  0E28  3EFF               	addlw	-1
  2447  0E29  1D03               	skipz
  2448  0E2A  2E25               	goto	u1965
  2449  0E2B  3001               	movlw	1
  2450  0E2C  02F5               	subwf	___awdiv@counter,f
  2451  0E2D  1D03               	btfss	3,2
  2452  0E2E  2E0E               	goto	l1431
  2453  0E2F                     l1441:	
  2454  0E2F  0876               	movf	___awdiv@sign,w
  2455  0E30  1903               	btfsc	3,2
  2456  0E31  2E37               	goto	l1445
  2457  0E32  09F7               	comf	___awdiv@quotient,f
  2458  0E33  09F8               	comf	___awdiv@quotient+1,f
  2459  0E34  0AF7               	incf	___awdiv@quotient,f
  2460  0E35  1903               	skipnz
  2461  0E36  0AF8               	incf	___awdiv@quotient+1,f
  2462  0E37                     l1445:	
  2463  0E37  0878               	movf	___awdiv@quotient+1,w
  2464  0E38  00F1               	movwf	?___awdiv+1
  2465  0E39  0877               	movf	___awdiv@quotient,w
  2466  0E3A  00F0               	movwf	?___awdiv
  2467  0E3B  0008               	return
  2468  0E3C                     __end_of___awdiv:	
  2469                           
  2470                           	psect	text5
  2471  0CF0                     __ptext5:	
  2472 ;; *************** function _PWM2_Stop *****************
  2473 ;; Defined at:
  2474 ;;		line 101 in file "finalcode.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  2   94[None  ] int 
  2481 ;; Registers used:
  2482 ;;		None
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_main
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function _PWM2_Stop
  2503  0CF0                     _PWM2_Stop:	
  2504                           
  2505                           ;finalcode.c: 103: CCP2M3 = 0;
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in _PWM2_Stop: []
  2509  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0CF2  119D               	bcf	29,3	;volatile
  2512                           
  2513                           ;finalcode.c: 104: CCP2M2 = 0;
  2514  0CF3  111D               	bcf	29,2	;volatile
  2515  0CF4  0008               	return
  2516  0CF5                     __end_of_PWM2_Stop:	
  2517                           
  2518                           	psect	text6
  2519  0D08                     __ptext6:	
  2520 ;; *************** function _PWM2_Start *****************
  2521 ;; Defined at:
  2522 ;;		line 84 in file "finalcode.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  2   91[None  ] int 
  2529 ;; Registers used:
  2530 ;;		None
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0
  2539 ;;      Totals:         0       0       0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_main
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _PWM2_Start
  2551  0D08                     _PWM2_Start:	
  2552                           
  2553                           ;finalcode.c: 86: CCP2M3 = 1;
  2554                           
  2555                           ;incstack = 0
  2556                           ; Regs used in _PWM2_Start: []
  2557  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0D0A  159D               	bsf	29,3	;volatile
  2560                           
  2561                           ;finalcode.c: 87: CCP2M2 = 1;
  2562  0D0B  151D               	bsf	29,2	;volatile
  2563                           
  2564                           ;finalcode.c: 92: T2CKPS0 = 1;
  2565  0D0C  1412               	bsf	18,0	;volatile
  2566                           
  2567                           ;finalcode.c: 93: T2CKPS1 = 0;
  2568  0D0D  1092               	bcf	18,1	;volatile
  2569                           
  2570                           ;finalcode.c: 98: TMR2ON = 1;
  2571  0D0E  1512               	bsf	18,2	;volatile
  2572                           
  2573                           ;finalcode.c: 99: TRISC1 = 0;
  2574  0D0F  1683               	bsf	3,5	;RP0=1, select bank1
  2575  0D10  1303               	bcf	3,6	;RP1=0, select bank1
  2576  0D11  1087               	bcf	7,1	;volatile
  2577  0D12  0008               	return
  2578  0D13                     __end_of_PWM2_Start:	
  2579                           
  2580                           	psect	text7
  2581  0DA4                     __ptext7:	
  2582 ;; *************** function _PWM2_Init *****************
  2583 ;; Defined at:
  2584 ;;		line 37 in file "finalcode.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  fre             4    6[BANK0 ] long 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2    6[BANK0 ] int 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       4       0       0       0
  2599 ;;      Locals:         0       0       0       0       0
  2600 ;;      Temps:          4       0       0       0       0
  2601 ;;      Totals:         4       4       0       0       0
  2602 ;;Total ram usage:        8 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    1
  2605 ;; This function calls:
  2606 ;;		___aldiv
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _PWM2_Init
  2614  0DA4                     _PWM2_Init:	
  2615                           
  2616                           ;finalcode.c: 39: PR2 = (16000000/(fre*4*4)) - 1;
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
  2620  0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0DA6  0826               	movf	PWM2_Init@fre,w
  2623  0DA7  00F9               	movwf	??_PWM2_Init
  2624  0DA8  0827               	movf	PWM2_Init@fre+1,w
  2625  0DA9  00FA               	movwf	??_PWM2_Init+1
  2626  0DAA  0828               	movf	PWM2_Init@fre+2,w
  2627  0DAB  00FB               	movwf	??_PWM2_Init+2
  2628  0DAC  0829               	movf	PWM2_Init@fre+3,w
  2629  0DAD  00FC               	movwf	??_PWM2_Init+3
  2630  0DAE  3002               	movlw	2
  2631  0DAF                     u1835:	
  2632  0DAF  1003               	clrc
  2633  0DB0  0DF9               	rlf	??_PWM2_Init,f
  2634  0DB1  0DFA               	rlf	??_PWM2_Init+1,f
  2635  0DB2  0DFB               	rlf	??_PWM2_Init+2,f
  2636  0DB3  0DFC               	rlf	??_PWM2_Init+3,f
  2637  0DB4  3EFF               	addlw	-1
  2638  0DB5  1D03               	skipz
  2639  0DB6  2DAF               	goto	u1835
  2640  0DB7  3002               	movlw	2
  2641  0DB8                     u1845:	
  2642  0DB8  1003               	clrc
  2643  0DB9  0DF9               	rlf	??_PWM2_Init,f
  2644  0DBA  0DFA               	rlf	??_PWM2_Init+1,f
  2645  0DBB  0DFB               	rlf	??_PWM2_Init+2,f
  2646  0DBC  0DFC               	rlf	??_PWM2_Init+3,f
  2647  0DBD  3EFF               	addlw	-1
  2648  0DBE  1D03               	skipz
  2649  0DBF  2DB8               	goto	u1845
  2650  0DC0  087C               	movf	??_PWM2_Init+3,w
  2651  0DC1  00F3               	movwf	___aldiv@divisor+3
  2652  0DC2  087B               	movf	??_PWM2_Init+2,w
  2653  0DC3  00F2               	movwf	___aldiv@divisor+2
  2654  0DC4  087A               	movf	??_PWM2_Init+1,w
  2655  0DC5  00F1               	movwf	___aldiv@divisor+1
  2656  0DC6  0879               	movf	??_PWM2_Init,w
  2657  0DC7  00F0               	movwf	___aldiv@divisor
  2658  0DC8  3000               	movlw	0
  2659  0DC9  00F7               	movwf	___aldiv@dividend+3
  2660  0DCA  30F4               	movlw	244
  2661  0DCB  00F6               	movwf	___aldiv@dividend+2
  2662  0DCC  3024               	movlw	36
  2663  0DCD  00F5               	movwf	___aldiv@dividend+1
  2664  0DCE  3000               	movlw	0
  2665  0DCF  00F4               	movwf	___aldiv@dividend
  2666  0DD0  120A  118A  2085   	fcall	___aldiv
  2667  0DD3  0870               	movf	?___aldiv,w
  2668  0DD4  3EFF               	addlw	255
  2669  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  2670  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  2671  0DD7  0092               	movwf	18	;volatile
  2672                           
  2673                           ;finalcode.c: 40: freq = fre;
  2674  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0DDA  0829               	movf	PWM2_Init@fre+3,w
  2677  0DDB  00E7               	movwf	_freq+3
  2678  0DDC  0828               	movf	PWM2_Init@fre+2,w
  2679  0DDD  00E6               	movwf	_freq+2
  2680  0DDE  0827               	movf	PWM2_Init@fre+1,w
  2681  0DDF  00E5               	movwf	_freq+1
  2682  0DE0  0826               	movf	PWM2_Init@fre,w
  2683  0DE1  00E4               	movwf	_freq
  2684  0DE2  0008               	return
  2685  0DE3                     __end_of_PWM2_Init:	
  2686                           
  2687                           	psect	text8
  2688  0018                     __ptext8:	
  2689 ;; *************** function _PWM2_Duty *****************
  2690 ;; Defined at:
  2691 ;;		line 52 in file "finalcode.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  duty            2   62[BANK0 ] unsigned int 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  2   62[BANK0 ] int 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, pclath, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       2       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          0       2       0       0       0
  2708 ;;      Totals:         0       4       0       0       0
  2709 ;;Total ram usage:        4 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; Hardware stack levels required when called:    2
  2712 ;; This function calls:
  2713 ;;		_PWM_Max_Duty
  2714 ;;		___awtoft
  2715 ;;		___ftdiv
  2716 ;;		___ftmul
  2717 ;;		___fttol
  2718 ;;		___lwtoft
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _PWM2_Duty
  2726  0018                     _PWM2_Duty:	
  2727                           
  2728                           ;finalcode.c: 55: {
  2729                           ;finalcode.c: 56: duty = ((float)duty/1023)*PWM_Max_Duty();
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0+pclath+cstack]
  2733  0018  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0019  1303               	bcf	3,6	;RP1=0, select bank0
  2735  001A  085F               	movf	PWM2_Duty@duty+1,w
  2736  001B  00F9               	movwf	___lwtoft@c+1
  2737  001C  085E               	movf	PWM2_Duty@duty,w
  2738  001D  00F8               	movwf	___lwtoft@c
  2739  001E  120A  118A  2004  120A  118A  	fcall	___lwtoft
  2740  0023  0878               	movf	?___lwtoft,w
  2741  0024  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0025  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0026  00A3               	movwf	___ftdiv@f1
  2744  0027  0879               	movf	?___lwtoft+1,w
  2745  0028  00A4               	movwf	___ftdiv@f1+1
  2746  0029  087A               	movf	?___lwtoft+2,w
  2747  002A  00A5               	movwf	___ftdiv@f1+2
  2748  002B  30C0               	movlw	192
  2749  002C  00A0               	movwf	___ftdiv@f2
  2750  002D  307F               	movlw	127
  2751  002E  00A1               	movwf	___ftdiv@f2+1
  2752  002F  3044               	movlw	68
  2753  0030  00A2               	movwf	___ftdiv@f2+2
  2754  0031  120A  118A  2114  120A  118A  	fcall	___ftdiv
  2755  0036  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0037  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0038  0820               	movf	?___ftdiv,w
  2758  0039  00C3               	movwf	___ftmul@f2
  2759  003A  0821               	movf	?___ftdiv+1,w
  2760  003B  00C4               	movwf	___ftmul@f2+1
  2761  003C  0822               	movf	?___ftdiv+2,w
  2762  003D  00C5               	movwf	___ftmul@f2+2
  2763  003E  120A  158A  2538  120A  118A  	fcall	_PWM_Max_Duty
  2764  0043  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0044  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0045  0827               	movf	?_PWM_Max_Duty+1,w
  2767  0046  00A9               	movwf	___awtoft@c+1
  2768  0047  0826               	movf	?_PWM_Max_Duty,w
  2769  0048  00A8               	movwf	___awtoft@c
  2770  0049  120A  158A  2513  120A  118A  	fcall	___awtoft
  2771  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2772  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2773  0050  0828               	movf	?___awtoft,w
  2774  0051  00C0               	movwf	___ftmul@f1
  2775  0052  0829               	movf	?___awtoft+1,w
  2776  0053  00C1               	movwf	___ftmul@f1+1
  2777  0054  082A               	movf	?___awtoft+2,w
  2778  0055  00C2               	movwf	___ftmul@f1+2
  2779  0056  120A  118A  21CC  120A  118A  	fcall	___ftmul
  2780  005B  1283               	bcf	3,5	;RP0=0, select bank0
  2781  005C  1303               	bcf	3,6	;RP1=0, select bank0
  2782  005D  0840               	movf	?___ftmul,w
  2783  005E  00D0               	movwf	___fttol@f1
  2784  005F  0841               	movf	?___ftmul+1,w
  2785  0060  00D1               	movwf	___fttol@f1+1
  2786  0061  0842               	movf	?___ftmul+2,w
  2787  0062  00D2               	movwf	___fttol@f1+2
  2788  0063  120A  158A  2772  120A  118A  	fcall	___fttol
  2789  0068  1283               	bcf	3,5	;RP0=0, select bank0
  2790  0069  1303               	bcf	3,6	;RP1=0, select bank0
  2791  006A  0851               	movf	?___fttol+1,w
  2792  006B  00DF               	movwf	PWM2_Duty@duty+1
  2793  006C  0850               	movf	?___fttol,w
  2794  006D  00DE               	movwf	PWM2_Duty@duty
  2795                           
  2796                           ;finalcode.c: 57: CCP2X = duty & 2;
  2797  006E  129D               	bcf	29,5	;volatile
  2798                           
  2799                           ;finalcode.c: 58: CCP2Y = duty & 1;
  2800  006F  1C5E               	btfss	PWM2_Duty@duty,0
  2801  0070  2875               	goto	u1870
  2802  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2804  0073  161D               	bsf	29,4	;volatile
  2805  0074  2878               	goto	l1395
  2806  0075                     u1870:	
  2807  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0077  121D               	bcf	29,4	;volatile
  2810  0078                     l1395:	
  2811                           
  2812                           ;finalcode.c: 59: CCPR2L = duty>>2;
  2813  0078  085F               	movf	PWM2_Duty@duty+1,w
  2814  0079  00E1               	movwf	??_PWM2_Duty+1
  2815  007A  085E               	movf	PWM2_Duty@duty,w
  2816  007B  00E0               	movwf	??_PWM2_Duty
  2817  007C  1003               	clrc
  2818  007D  0CE1               	rrf	??_PWM2_Duty+1,f
  2819  007E  0CE0               	rrf	??_PWM2_Duty,f
  2820  007F  1003               	clrc
  2821  0080  0CE1               	rrf	??_PWM2_Duty+1,f
  2822  0081  0CE0               	rrf	??_PWM2_Duty,f
  2823  0082  0860               	movf	??_PWM2_Duty,w
  2824  0083  009B               	movwf	27	;volatile
  2825  0084  0008               	return
  2826  0085                     __end_of_PWM2_Duty:	
  2827                           
  2828                           	psect	text9
  2829  0CEB                     __ptext9:	
  2830 ;; *************** function _PWM1_Stop *****************
  2831 ;; Defined at:
  2832 ;;		line 79 in file "finalcode.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2   88[None  ] int 
  2839 ;; Registers used:
  2840 ;;		None
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           
  2860                           ;psect for function _PWM1_Stop
  2861  0CEB                     _PWM1_Stop:	
  2862                           
  2863                           ;finalcode.c: 81: CCP1M3 = 0;
  2864                           
  2865                           ;incstack = 0
  2866                           ; Regs used in _PWM1_Stop: []
  2867  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0CED  1197               	bcf	23,3	;volatile
  2870                           
  2871                           ;finalcode.c: 82: CCP1M2 = 0;
  2872  0CEE  1117               	bcf	23,2	;volatile
  2873  0CEF  0008               	return
  2874  0CF0                     __end_of_PWM1_Stop:	
  2875                           
  2876                           	psect	text10
  2877  0CF5                     __ptext10:	
  2878 ;; *************** function _PWM1_Start *****************
  2879 ;; Defined at:
  2880 ;;		line 62 in file "finalcode.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  2   85[None  ] int 
  2887 ;; Registers used:
  2888 ;;		None
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2894 ;;      Params:         0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           
  2908                           ;psect for function _PWM1_Start
  2909  0CF5                     _PWM1_Start:	
  2910                           
  2911                           ;finalcode.c: 64: CCP1M3 = 1;
  2912                           
  2913                           ;incstack = 0
  2914                           ; Regs used in _PWM1_Start: []
  2915  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0CF7  1597               	bsf	23,3	;volatile
  2918                           
  2919                           ;finalcode.c: 65: CCP1M2 = 1;
  2920  0CF8  1517               	bsf	23,2	;volatile
  2921                           
  2922                           ;finalcode.c: 76: TMR2ON = 1;
  2923  0CF9  1512               	bsf	18,2	;volatile
  2924                           
  2925                           ;finalcode.c: 77: TRISC2 = 0;
  2926  0CFA  1683               	bsf	3,5	;RP0=1, select bank1
  2927  0CFB  1303               	bcf	3,6	;RP1=0, select bank1
  2928  0CFC  1107               	bcf	7,2	;volatile
  2929  0CFD  0008               	return
  2930  0CFE                     __end_of_PWM1_Start:	
  2931                           
  2932                           	psect	text11
  2933  0D65                     __ptext11:	
  2934 ;; *************** function _PWM1_Init *****************
  2935 ;; Defined at:
  2936 ;;		line 32 in file "finalcode.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;  fre             4    6[BANK0 ] long 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;		None
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2    6[BANK0 ] int 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       4       0       0       0
  2951 ;;      Locals:         0       0       0       0       0
  2952 ;;      Temps:          4       0       0       0       0
  2953 ;;      Totals:         4       4       0       0       0
  2954 ;;Total ram usage:        8 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    1
  2957 ;; This function calls:
  2958 ;;		___aldiv
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _PWM1_Init
  2966  0D65                     _PWM1_Init:	
  2967                           
  2968                           ;finalcode.c: 34: PR2 = (16000000/(fre*4*4)) - 1;
  2969                           
  2970                           ;incstack = 0
  2971                           ; Regs used in _PWM1_Init: [wreg+status,2+status,0+pclath+cstack]
  2972  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0D67  0826               	movf	PWM1_Init@fre,w
  2975  0D68  00F9               	movwf	??_PWM1_Init
  2976  0D69  0827               	movf	PWM1_Init@fre+1,w
  2977  0D6A  00FA               	movwf	??_PWM1_Init+1
  2978  0D6B  0828               	movf	PWM1_Init@fre+2,w
  2979  0D6C  00FB               	movwf	??_PWM1_Init+2
  2980  0D6D  0829               	movf	PWM1_Init@fre+3,w
  2981  0D6E  00FC               	movwf	??_PWM1_Init+3
  2982  0D6F  3002               	movlw	2
  2983  0D70                     u1815:	
  2984  0D70  1003               	clrc
  2985  0D71  0DF9               	rlf	??_PWM1_Init,f
  2986  0D72  0DFA               	rlf	??_PWM1_Init+1,f
  2987  0D73  0DFB               	rlf	??_PWM1_Init+2,f
  2988  0D74  0DFC               	rlf	??_PWM1_Init+3,f
  2989  0D75  3EFF               	addlw	-1
  2990  0D76  1D03               	skipz
  2991  0D77  2D70               	goto	u1815
  2992  0D78  3002               	movlw	2
  2993  0D79                     u1825:	
  2994  0D79  1003               	clrc
  2995  0D7A  0DF9               	rlf	??_PWM1_Init,f
  2996  0D7B  0DFA               	rlf	??_PWM1_Init+1,f
  2997  0D7C  0DFB               	rlf	??_PWM1_Init+2,f
  2998  0D7D  0DFC               	rlf	??_PWM1_Init+3,f
  2999  0D7E  3EFF               	addlw	-1
  3000  0D7F  1D03               	skipz
  3001  0D80  2D79               	goto	u1825
  3002  0D81  087C               	movf	??_PWM1_Init+3,w
  3003  0D82  00F3               	movwf	___aldiv@divisor+3
  3004  0D83  087B               	movf	??_PWM1_Init+2,w
  3005  0D84  00F2               	movwf	___aldiv@divisor+2
  3006  0D85  087A               	movf	??_PWM1_Init+1,w
  3007  0D86  00F1               	movwf	___aldiv@divisor+1
  3008  0D87  0879               	movf	??_PWM1_Init,w
  3009  0D88  00F0               	movwf	___aldiv@divisor
  3010  0D89  3000               	movlw	0
  3011  0D8A  00F7               	movwf	___aldiv@dividend+3
  3012  0D8B  30F4               	movlw	244
  3013  0D8C  00F6               	movwf	___aldiv@dividend+2
  3014  0D8D  3024               	movlw	36
  3015  0D8E  00F5               	movwf	___aldiv@dividend+1
  3016  0D8F  3000               	movlw	0
  3017  0D90  00F4               	movwf	___aldiv@dividend
  3018  0D91  120A  118A  2085   	fcall	___aldiv
  3019  0D94  0870               	movf	?___aldiv,w
  3020  0D95  3EFF               	addlw	255
  3021  0D96  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0D97  1303               	bcf	3,6	;RP1=0, select bank1
  3023  0D98  0092               	movwf	18	;volatile
  3024                           
  3025                           ;finalcode.c: 35: freq = fre;
  3026  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0D9B  0829               	movf	PWM1_Init@fre+3,w
  3029  0D9C  00E7               	movwf	_freq+3
  3030  0D9D  0828               	movf	PWM1_Init@fre+2,w
  3031  0D9E  00E6               	movwf	_freq+2
  3032  0D9F  0827               	movf	PWM1_Init@fre+1,w
  3033  0DA0  00E5               	movwf	_freq+1
  3034  0DA1  0826               	movf	PWM1_Init@fre,w
  3035  0DA2  00E4               	movwf	_freq
  3036  0DA3  0008               	return
  3037  0DA4                     __end_of_PWM1_Init:	
  3038                           
  3039                           	psect	text12
  3040  0F05                     __ptext12:	
  3041 ;; *************** function _PWM1_Duty *****************
  3042 ;; Defined at:
  3043 ;;		line 42 in file "finalcode.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  duty            2   62[BANK0 ] unsigned int 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  2   62[BANK0 ] int 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0, pclath, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         0       2       0       0       0
  3058 ;;      Locals:         0       0       0       0       0
  3059 ;;      Temps:          0       2       0       0       0
  3060 ;;      Totals:         0       4       0       0       0
  3061 ;;Total ram usage:        4 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    2
  3064 ;; This function calls:
  3065 ;;		_PWM_Max_Duty
  3066 ;;		___awtoft
  3067 ;;		___ftdiv
  3068 ;;		___ftmul
  3069 ;;		___fttol
  3070 ;;		___lwtoft
  3071 ;; This function is called by:
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           
  3077                           ;psect for function _PWM1_Duty
  3078  0F05                     _PWM1_Duty:	
  3079                           
  3080                           ;finalcode.c: 45: {
  3081                           ;finalcode.c: 46: duty = ((float)duty/1023)*PWM_Max_Duty();
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _PWM1_Duty: [wreg+status,2+status,0+pclath+cstack]
  3085  0F05  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0F06  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0F07  085F               	movf	PWM1_Duty@duty+1,w
  3088  0F08  00F9               	movwf	___lwtoft@c+1
  3089  0F09  085E               	movf	PWM1_Duty@duty,w
  3090  0F0A  00F8               	movwf	___lwtoft@c
  3091  0F0B  120A  118A  2004  120A  158A  	fcall	___lwtoft
  3092  0F10  0878               	movf	?___lwtoft,w
  3093  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  3094  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  3095  0F13  00A3               	movwf	___ftdiv@f1
  3096  0F14  0879               	movf	?___lwtoft+1,w
  3097  0F15  00A4               	movwf	___ftdiv@f1+1
  3098  0F16  087A               	movf	?___lwtoft+2,w
  3099  0F17  00A5               	movwf	___ftdiv@f1+2
  3100  0F18  30C0               	movlw	192
  3101  0F19  00A0               	movwf	___ftdiv@f2
  3102  0F1A  307F               	movlw	127
  3103  0F1B  00A1               	movwf	___ftdiv@f2+1
  3104  0F1C  3044               	movlw	68
  3105  0F1D  00A2               	movwf	___ftdiv@f2+2
  3106  0F1E  120A  118A  2114  120A  158A  	fcall	___ftdiv
  3107  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0F24  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0F25  0820               	movf	?___ftdiv,w
  3110  0F26  00C3               	movwf	___ftmul@f2
  3111  0F27  0821               	movf	?___ftdiv+1,w
  3112  0F28  00C4               	movwf	___ftmul@f2+1
  3113  0F29  0822               	movf	?___ftdiv+2,w
  3114  0F2A  00C5               	movwf	___ftmul@f2+2
  3115  0F2B  120A  158A  2538  120A  158A  	fcall	_PWM_Max_Duty
  3116  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  3117  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  3118  0F32  0827               	movf	?_PWM_Max_Duty+1,w
  3119  0F33  00A9               	movwf	___awtoft@c+1
  3120  0F34  0826               	movf	?_PWM_Max_Duty,w
  3121  0F35  00A8               	movwf	___awtoft@c
  3122  0F36  120A  158A  2513  120A  158A  	fcall	___awtoft
  3123  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0F3D  0828               	movf	?___awtoft,w
  3126  0F3E  00C0               	movwf	___ftmul@f1
  3127  0F3F  0829               	movf	?___awtoft+1,w
  3128  0F40  00C1               	movwf	___ftmul@f1+1
  3129  0F41  082A               	movf	?___awtoft+2,w
  3130  0F42  00C2               	movwf	___ftmul@f1+2
  3131  0F43  120A  118A  21CC  120A  158A  	fcall	___ftmul
  3132  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  3133  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  3134  0F4A  0840               	movf	?___ftmul,w
  3135  0F4B  00D0               	movwf	___fttol@f1
  3136  0F4C  0841               	movf	?___ftmul+1,w
  3137  0F4D  00D1               	movwf	___fttol@f1+1
  3138  0F4E  0842               	movf	?___ftmul+2,w
  3139  0F4F  00D2               	movwf	___fttol@f1+2
  3140  0F50  120A  158A  2772  120A  158A  	fcall	___fttol
  3141  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0F57  0851               	movf	?___fttol+1,w
  3144  0F58  00DF               	movwf	PWM1_Duty@duty+1
  3145  0F59  0850               	movf	?___fttol,w
  3146  0F5A  00DE               	movwf	PWM1_Duty@duty
  3147                           
  3148                           ;finalcode.c: 47: CCP1X = duty & 2;
  3149  0F5B  1297               	bcf	23,5	;volatile
  3150                           
  3151                           ;finalcode.c: 48: CCP1Y = duty & 1;
  3152  0F5C  1C5E               	btfss	PWM1_Duty@duty,0
  3153  0F5D  2F62               	goto	u1850
  3154  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0F60  1617               	bsf	23,4	;volatile
  3157  0F61  2F65               	goto	l1385
  3158  0F62                     u1850:	
  3159  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0F64  1217               	bcf	23,4	;volatile
  3162  0F65                     l1385:	
  3163                           
  3164                           ;finalcode.c: 49: CCPR1L = duty>>2;
  3165  0F65  085F               	movf	PWM1_Duty@duty+1,w
  3166  0F66  00E1               	movwf	??_PWM1_Duty+1
  3167  0F67  085E               	movf	PWM1_Duty@duty,w
  3168  0F68  00E0               	movwf	??_PWM1_Duty
  3169  0F69  1003               	clrc
  3170  0F6A  0CE1               	rrf	??_PWM1_Duty+1,f
  3171  0F6B  0CE0               	rrf	??_PWM1_Duty,f
  3172  0F6C  1003               	clrc
  3173  0F6D  0CE1               	rrf	??_PWM1_Duty+1,f
  3174  0F6E  0CE0               	rrf	??_PWM1_Duty,f
  3175  0F6F  0860               	movf	??_PWM1_Duty,w
  3176  0F70  0095               	movwf	21	;volatile
  3177  0F71  0008               	return
  3178  0F72                     __end_of_PWM1_Duty:	
  3179                           
  3180                           	psect	text13
  3181  0004                     __ptext13:	
  3182 ;; *************** function ___lwtoft *****************
  3183 ;; Defined at:
  3184 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  c               2    8[COMMON] unsigned int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  3    8[COMMON] float 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, pclath, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3198 ;;      Params:         3       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0
  3200 ;;      Temps:          1       0       0       0       0
  3201 ;;      Totals:         4       0       0       0       0
  3202 ;;Total ram usage:        4 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    1
  3205 ;; This function calls:
  3206 ;;		___ftpack
  3207 ;; This function is called by:
  3208 ;;		_PWM1_Duty
  3209 ;;		_PWM2_Duty
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function ___lwtoft
  3215  0004                     ___lwtoft:	
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3219  0004  0878               	movf	___lwtoft@c,w
  3220  0005  00F0               	movwf	___ftpack@arg
  3221  0006  0879               	movf	___lwtoft@c+1,w
  3222  0007  00F1               	movwf	___ftpack@arg+1
  3223  0008  01F2               	clrf	___ftpack@arg+2
  3224  0009  308E               	movlw	142
  3225  000A  00FB               	movwf	??___lwtoft
  3226  000B  087B               	movf	??___lwtoft,w
  3227  000C  00F3               	movwf	___ftpack@exp
  3228  000D  01F4               	clrf	___ftpack@sign
  3229  000E  120A  158A  2699   	fcall	___ftpack
  3230  0011  0870               	movf	?___ftpack,w
  3231  0012  00F8               	movwf	?___lwtoft
  3232  0013  0871               	movf	?___ftpack+1,w
  3233  0014  00F9               	movwf	?___lwtoft+1
  3234  0015  0872               	movf	?___ftpack+2,w
  3235  0016  00FA               	movwf	?___lwtoft+2
  3236  0017  0008               	return
  3237  0018                     __end_of___lwtoft:	
  3238                           
  3239                           	psect	text14
  3240  0F72                     __ptext14:	
  3241 ;; *************** function ___fttol *****************
  3242 ;; Defined at:
  3243 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  f1              3   48[BANK0 ] float 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  lval            4   57[BANK0 ] unsigned long 
  3248 ;;  exp1            1   61[BANK0 ] unsigned char 
  3249 ;;  sign1           1   56[BANK0 ] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  4   48[BANK0 ] long 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3259 ;;      Params:         0       4       0       0       0
  3260 ;;      Locals:         0       6       0       0       0
  3261 ;;      Temps:          0       4       0       0       0
  3262 ;;      Totals:         0      14       0       0       0
  3263 ;;Total ram usage:       14 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		_PWM1_Duty
  3269 ;;		_PWM2_Duty
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function ___fttol
  3276  0F72                     ___fttol:	
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3280  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0F74  0850               	movf	___fttol@f1,w
  3283  0F75  00D4               	movwf	??___fttol
  3284  0F76  0851               	movf	___fttol@f1+1,w
  3285  0F77  00D5               	movwf	??___fttol+1
  3286  0F78  0852               	movf	___fttol@f1+2,w
  3287  0F79  00D6               	movwf	??___fttol+2
  3288  0F7A  1003               	clrc
  3289  0F7B  0D55               	rlf	??___fttol+1,w
  3290  0F7C  0D56               	rlf	??___fttol+2,w
  3291  0F7D  00D7               	movwf	??___fttol+3
  3292  0F7E  0857               	movf	??___fttol+3,w
  3293  0F7F  00DD               	movwf	___fttol@exp1
  3294  0F80  085D               	movf	___fttol@exp1,w
  3295  0F81  1D03               	btfss	3,2
  3296  0F82  2F8C               	goto	l1329
  3297  0F83  3000               	movlw	0
  3298  0F84  00D3               	movwf	?___fttol+3
  3299  0F85  3000               	movlw	0
  3300  0F86  00D2               	movwf	?___fttol+2
  3301  0F87  3000               	movlw	0
  3302  0F88  00D1               	movwf	?___fttol+1
  3303  0F89  3000               	movlw	0
  3304  0F8A  00D0               	movwf	?___fttol
  3305  0F8B  0008               	return
  3306  0F8C                     l1329:	
  3307  0F8C  0850               	movf	___fttol@f1,w
  3308  0F8D  00D4               	movwf	??___fttol
  3309  0F8E  0851               	movf	___fttol@f1+1,w
  3310  0F8F  00D5               	movwf	??___fttol+1
  3311  0F90  0852               	movf	___fttol@f1+2,w
  3312  0F91  00D6               	movwf	??___fttol+2
  3313  0F92  3017               	movlw	23
  3314  0F93                     u1725:	
  3315  0F93  1003               	clrc
  3316  0F94  0CD6               	rrf	??___fttol+2,f
  3317  0F95  0CD5               	rrf	??___fttol+1,f
  3318  0F96  0CD4               	rrf	??___fttol,f
  3319  0F97  3EFF               	addlw	-1
  3320  0F98  1D03               	skipz
  3321  0F99  2F93               	goto	u1725
  3322  0F9A  0854               	movf	??___fttol,w
  3323  0F9B  00D7               	movwf	??___fttol+3
  3324  0F9C  0857               	movf	??___fttol+3,w
  3325  0F9D  00D8               	movwf	___fttol@sign1
  3326  0F9E  17D1               	bsf	___fttol@f1+1,7
  3327  0F9F  30FF               	movlw	255
  3328  0FA0  05D0               	andwf	___fttol@f1,f
  3329  0FA1  30FF               	movlw	255
  3330  0FA2  05D1               	andwf	___fttol@f1+1,f
  3331  0FA3  3000               	movlw	0
  3332  0FA4  05D2               	andwf	___fttol@f1+2,f
  3333  0FA5  0850               	movf	___fttol@f1,w
  3334  0FA6  00D9               	movwf	___fttol@lval
  3335  0FA7  0851               	movf	___fttol@f1+1,w
  3336  0FA8  00DA               	movwf	___fttol@lval+1
  3337  0FA9  0852               	movf	___fttol@f1+2,w
  3338  0FAA  00DB               	movwf	___fttol@lval+2
  3339  0FAB  01DC               	clrf	___fttol@lval+3
  3340  0FAC  308E               	movlw	142
  3341  0FAD  02DD               	subwf	___fttol@exp1,f
  3342  0FAE  1FDD               	btfss	___fttol@exp1,7
  3343  0FAF  2FCE               	goto	l1349
  3344  0FB0  085D               	movf	___fttol@exp1,w
  3345  0FB1  3A80               	xorlw	128
  3346  0FB2  3E8F               	addlw	143
  3347  0FB3  1803               	skipnc
  3348  0FB4  2FBE               	goto	l1347
  3349  0FB5  3000               	movlw	0
  3350  0FB6  00D3               	movwf	?___fttol+3
  3351  0FB7  3000               	movlw	0
  3352  0FB8  00D2               	movwf	?___fttol+2
  3353  0FB9  3000               	movlw	0
  3354  0FBA  00D1               	movwf	?___fttol+1
  3355  0FBB  3000               	movlw	0
  3356  0FBC  00D0               	movwf	?___fttol
  3357  0FBD  0008               	return
  3358  0FBE                     l1347:	
  3359  0FBE  3001               	movlw	1
  3360  0FBF                     u1755:	
  3361  0FBF  1003               	clrc
  3362  0FC0  0CDC               	rrf	___fttol@lval+3,f
  3363  0FC1  0CDB               	rrf	___fttol@lval+2,f
  3364  0FC2  0CDA               	rrf	___fttol@lval+1,f
  3365  0FC3  0CD9               	rrf	___fttol@lval,f
  3366  0FC4  3EFF               	addlw	-1
  3367  0FC5  1D03               	skipz
  3368  0FC6  2FBF               	goto	u1755
  3369  0FC7  3001               	movlw	1
  3370  0FC8  00D4               	movwf	??___fttol
  3371  0FC9  0854               	movf	??___fttol,w
  3372  0FCA  07DD               	addwf	___fttol@exp1,f
  3373  0FCB  1903               	btfsc	3,2
  3374  0FCC  2FE9               	goto	l1357
  3375  0FCD  2FBE               	goto	l1347
  3376  0FCE                     l1349:	
  3377  0FCE  3018               	movlw	24
  3378  0FCF  025D               	subwf	___fttol@exp1,w
  3379  0FD0  1C03               	skipc
  3380  0FD1  2FE6               	goto	l453
  3381  0FD2  3000               	movlw	0
  3382  0FD3  00D3               	movwf	?___fttol+3
  3383  0FD4  3000               	movlw	0
  3384  0FD5  00D2               	movwf	?___fttol+2
  3385  0FD6  3000               	movlw	0
  3386  0FD7  00D1               	movwf	?___fttol+1
  3387  0FD8  3000               	movlw	0
  3388  0FD9  00D0               	movwf	?___fttol
  3389  0FDA  0008               	return
  3390  0FDB                     l1355:	
  3391  0FDB  3001               	movlw	1
  3392  0FDC  00D4               	movwf	??___fttol
  3393  0FDD                     u1785:	
  3394  0FDD  1003               	clrc
  3395  0FDE  0DD9               	rlf	___fttol@lval,f
  3396  0FDF  0DDA               	rlf	___fttol@lval+1,f
  3397  0FE0  0DDB               	rlf	___fttol@lval+2,f
  3398  0FE1  0DDC               	rlf	___fttol@lval+3,f
  3399  0FE2  0BD4               	decfsz	??___fttol,f
  3400  0FE3  2FDD               	goto	u1785
  3401  0FE4  3001               	movlw	1
  3402  0FE5  02DD               	subwf	___fttol@exp1,f
  3403  0FE6                     l453:	
  3404  0FE6  085D               	movf	___fttol@exp1,w
  3405  0FE7  1D03               	btfss	3,2
  3406  0FE8  2FDB               	goto	l1355
  3407  0FE9                     l1357:	
  3408  0FE9  0858               	movf	___fttol@sign1,w
  3409  0FEA  1903               	btfsc	3,2
  3410  0FEB  2FF7               	goto	l1361
  3411  0FEC  09D9               	comf	___fttol@lval,f
  3412  0FED  09DA               	comf	___fttol@lval+1,f
  3413  0FEE  09DB               	comf	___fttol@lval+2,f
  3414  0FEF  09DC               	comf	___fttol@lval+3,f
  3415  0FF0  0AD9               	incf	___fttol@lval,f
  3416  0FF1  1903               	skipnz
  3417  0FF2  0ADA               	incf	___fttol@lval+1,f
  3418  0FF3  1903               	skipnz
  3419  0FF4  0ADB               	incf	___fttol@lval+2,f
  3420  0FF5  1903               	skipnz
  3421  0FF6  0ADC               	incf	___fttol@lval+3,f
  3422  0FF7                     l1361:	
  3423  0FF7  085C               	movf	___fttol@lval+3,w
  3424  0FF8  00D3               	movwf	?___fttol+3
  3425  0FF9  085B               	movf	___fttol@lval+2,w
  3426  0FFA  00D2               	movwf	?___fttol+2
  3427  0FFB  085A               	movf	___fttol@lval+1,w
  3428  0FFC  00D1               	movwf	?___fttol+1
  3429  0FFD  0859               	movf	___fttol@lval,w
  3430  0FFE  00D0               	movwf	?___fttol
  3431  0FFF  0008               	return
  3432  1000                     __end_of___fttol:	
  3433                           
  3434                           	psect	text15
  3435  01CC                     __ptext15:	
  3436 ;; *************** function ___ftmul *****************
  3437 ;; Defined at:
  3438 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  f1              3   32[BANK0 ] float 
  3441 ;;  f2              3   35[BANK0 ] float 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  f3_as_produc    3   43[BANK0 ] unsigned um
  3444 ;;  sign            1   47[BANK0 ] unsigned char 
  3445 ;;  cntr            1   46[BANK0 ] unsigned char 
  3446 ;;  exp             1   42[BANK0 ] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  3   32[BANK0 ] float 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       6       0       0       0
  3457 ;;      Locals:         0       6       0       0       0
  3458 ;;      Temps:          0       4       0       0       0
  3459 ;;      Totals:         0      16       0       0       0
  3460 ;;Total ram usage:       16 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    1
  3463 ;; This function calls:
  3464 ;;		___ftpack
  3465 ;; This function is called by:
  3466 ;;		_PWM1_Duty
  3467 ;;		_PWM2_Duty
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function ___ftmul
  3474  01CC                     ___ftmul:	
  3475                           
  3476                           ;incstack = 0
  3477                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3478  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3479  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3480  01CE  0840               	movf	___ftmul@f1,w
  3481  01CF  00C6               	movwf	??___ftmul
  3482  01D0  0841               	movf	___ftmul@f1+1,w
  3483  01D1  00C7               	movwf	??___ftmul+1
  3484  01D2  0842               	movf	___ftmul@f1+2,w
  3485  01D3  00C8               	movwf	??___ftmul+2
  3486  01D4  1003               	clrc
  3487  01D5  0D47               	rlf	??___ftmul+1,w
  3488  01D6  0D48               	rlf	??___ftmul+2,w
  3489  01D7  00C9               	movwf	??___ftmul+3
  3490  01D8  0849               	movf	??___ftmul+3,w
  3491  01D9  00CA               	movwf	___ftmul@exp
  3492  01DA  084A               	movf	___ftmul@exp,w
  3493  01DB  1D03               	btfss	3,2
  3494  01DC  29E4               	goto	l1279
  3495  01DD  3000               	movlw	0
  3496  01DE  00C0               	movwf	?___ftmul
  3497  01DF  3000               	movlw	0
  3498  01E0  00C1               	movwf	?___ftmul+1
  3499  01E1  3000               	movlw	0
  3500  01E2  00C2               	movwf	?___ftmul+2
  3501  01E3  0008               	return
  3502  01E4                     l1279:	
  3503  01E4  0843               	movf	___ftmul@f2,w
  3504  01E5  00C6               	movwf	??___ftmul
  3505  01E6  0844               	movf	___ftmul@f2+1,w
  3506  01E7  00C7               	movwf	??___ftmul+1
  3507  01E8  0845               	movf	___ftmul@f2+2,w
  3508  01E9  00C8               	movwf	??___ftmul+2
  3509  01EA  1003               	clrc
  3510  01EB  0D47               	rlf	??___ftmul+1,w
  3511  01EC  0D48               	rlf	??___ftmul+2,w
  3512  01ED  00C9               	movwf	??___ftmul+3
  3513  01EE  0849               	movf	??___ftmul+3,w
  3514  01EF  00CF               	movwf	___ftmul@sign
  3515  01F0  084F               	movf	___ftmul@sign,w
  3516  01F1  1D03               	btfss	3,2
  3517  01F2  29FA               	goto	l1285
  3518  01F3  3000               	movlw	0
  3519  01F4  00C0               	movwf	?___ftmul
  3520  01F5  3000               	movlw	0
  3521  01F6  00C1               	movwf	?___ftmul+1
  3522  01F7  3000               	movlw	0
  3523  01F8  00C2               	movwf	?___ftmul+2
  3524  01F9  0008               	return
  3525  01FA                     l1285:	
  3526  01FA  084F               	movf	___ftmul@sign,w
  3527  01FB  3E7B               	addlw	123
  3528  01FC  00C6               	movwf	??___ftmul
  3529  01FD  0846               	movf	??___ftmul,w
  3530  01FE  07CA               	addwf	___ftmul@exp,f
  3531  01FF  0840               	movf	___ftmul@f1,w
  3532  0200  00C6               	movwf	??___ftmul
  3533  0201  0841               	movf	___ftmul@f1+1,w
  3534  0202  00C7               	movwf	??___ftmul+1
  3535  0203  0842               	movf	___ftmul@f1+2,w
  3536  0204  00C8               	movwf	??___ftmul+2
  3537  0205  3010               	movlw	16
  3538  0206                     u1595:	
  3539  0206  1003               	clrc
  3540  0207  0CC8               	rrf	??___ftmul+2,f
  3541  0208  0CC7               	rrf	??___ftmul+1,f
  3542  0209  0CC6               	rrf	??___ftmul,f
  3543  020A  3EFF               	addlw	-1
  3544  020B  1D03               	skipz
  3545  020C  2A06               	goto	u1595
  3546  020D  0846               	movf	??___ftmul,w
  3547  020E  00C9               	movwf	??___ftmul+3
  3548  020F  0849               	movf	??___ftmul+3,w
  3549  0210  00CF               	movwf	___ftmul@sign
  3550  0211  0843               	movf	___ftmul@f2,w
  3551  0212  00C6               	movwf	??___ftmul
  3552  0213  0844               	movf	___ftmul@f2+1,w
  3553  0214  00C7               	movwf	??___ftmul+1
  3554  0215  0845               	movf	___ftmul@f2+2,w
  3555  0216  00C8               	movwf	??___ftmul+2
  3556  0217  3010               	movlw	16
  3557  0218                     u1605:	
  3558  0218  1003               	clrc
  3559  0219  0CC8               	rrf	??___ftmul+2,f
  3560  021A  0CC7               	rrf	??___ftmul+1,f
  3561  021B  0CC6               	rrf	??___ftmul,f
  3562  021C  3EFF               	addlw	-1
  3563  021D  1D03               	skipz
  3564  021E  2A18               	goto	u1605
  3565  021F  0846               	movf	??___ftmul,w
  3566  0220  00C9               	movwf	??___ftmul+3
  3567  0221  0849               	movf	??___ftmul+3,w
  3568  0222  06CF               	xorwf	___ftmul@sign,f
  3569  0223  3080               	movlw	128
  3570  0224  00C6               	movwf	??___ftmul
  3571  0225  0846               	movf	??___ftmul,w
  3572  0226  05CF               	andwf	___ftmul@sign,f
  3573  0227  17C1               	bsf	___ftmul@f1+1,7
  3574  0228  17C4               	bsf	___ftmul@f2+1,7
  3575  0229  30FF               	movlw	255
  3576  022A  05C3               	andwf	___ftmul@f2,f
  3577  022B  30FF               	movlw	255
  3578  022C  05C4               	andwf	___ftmul@f2+1,f
  3579  022D  3000               	movlw	0
  3580  022E  05C5               	andwf	___ftmul@f2+2,f
  3581  022F  3000               	movlw	0
  3582  0230  00CB               	movwf	___ftmul@f3_as_product
  3583  0231  3000               	movlw	0
  3584  0232  00CC               	movwf	___ftmul@f3_as_product+1
  3585  0233  3000               	movlw	0
  3586  0234  00CD               	movwf	___ftmul@f3_as_product+2
  3587  0235  3007               	movlw	7
  3588  0236  00C6               	movwf	??___ftmul
  3589  0237  0846               	movf	??___ftmul,w
  3590  0238  00CE               	movwf	___ftmul@cntr
  3591  0239                     l1297:	
  3592  0239  1C40               	btfss	___ftmul@f1,0
  3593  023A  2A49               	goto	l1301
  3594  023B  0843               	movf	___ftmul@f2,w
  3595  023C  07CB               	addwf	___ftmul@f3_as_product,f
  3596  023D  0844               	movf	___ftmul@f2+1,w
  3597  023E  1103               	clrz
  3598  023F  1803               	skipnc
  3599  0240  0A44               	incf	___ftmul@f2+1,w
  3600  0241  1D03               	btfss	3,2
  3601  0242  07CC               	addwf	___ftmul@f3_as_product+1,f
  3602  0243  0845               	movf	___ftmul@f2+2,w
  3603  0244  1103               	clrz
  3604  0245  1803               	skipnc
  3605  0246  0A45               	incf	___ftmul@f2+2,w
  3606  0247  1D03               	btfss	3,2
  3607  0248  07CD               	addwf	___ftmul@f3_as_product+2,f
  3608  0249                     l1301:	
  3609  0249  3001               	movlw	1
  3610  024A                     u1635:	
  3611  024A  1003               	clrc
  3612  024B  0CC2               	rrf	___ftmul@f1+2,f
  3613  024C  0CC1               	rrf	___ftmul@f1+1,f
  3614  024D  0CC0               	rrf	___ftmul@f1,f
  3615  024E  3EFF               	addlw	-1
  3616  024F  1D03               	skipz
  3617  0250  2A4A               	goto	u1635
  3618  0251  3001               	movlw	1
  3619  0252                     u1645:	
  3620  0252  1003               	clrc
  3621  0253  0DC3               	rlf	___ftmul@f2,f
  3622  0254  0DC4               	rlf	___ftmul@f2+1,f
  3623  0255  0DC5               	rlf	___ftmul@f2+2,f
  3624  0256  3EFF               	addlw	-1
  3625  0257  1D03               	skipz
  3626  0258  2A52               	goto	u1645
  3627  0259  3001               	movlw	1
  3628  025A  02CE               	subwf	___ftmul@cntr,f
  3629  025B  1D03               	btfss	3,2
  3630  025C  2A39               	goto	l1297
  3631  025D  3009               	movlw	9
  3632  025E  00C6               	movwf	??___ftmul
  3633  025F  0846               	movf	??___ftmul,w
  3634  0260  00CE               	movwf	___ftmul@cntr
  3635  0261                     l1309:	
  3636  0261  1C40               	btfss	___ftmul@f1,0
  3637  0262  2A71               	goto	l1313
  3638  0263  0843               	movf	___ftmul@f2,w
  3639  0264  07CB               	addwf	___ftmul@f3_as_product,f
  3640  0265  0844               	movf	___ftmul@f2+1,w
  3641  0266  1103               	clrz
  3642  0267  1803               	skipnc
  3643  0268  0A44               	incf	___ftmul@f2+1,w
  3644  0269  1D03               	btfss	3,2
  3645  026A  07CC               	addwf	___ftmul@f3_as_product+1,f
  3646  026B  0845               	movf	___ftmul@f2+2,w
  3647  026C  1103               	clrz
  3648  026D  1803               	skipnc
  3649  026E  0A45               	incf	___ftmul@f2+2,w
  3650  026F  1D03               	btfss	3,2
  3651  0270  07CD               	addwf	___ftmul@f3_as_product+2,f
  3652  0271                     l1313:	
  3653  0271  3001               	movlw	1
  3654  0272                     u1685:	
  3655  0272  1003               	clrc
  3656  0273  0CC2               	rrf	___ftmul@f1+2,f
  3657  0274  0CC1               	rrf	___ftmul@f1+1,f
  3658  0275  0CC0               	rrf	___ftmul@f1,f
  3659  0276  3EFF               	addlw	-1
  3660  0277  1D03               	skipz
  3661  0278  2A72               	goto	u1685
  3662  0279  3001               	movlw	1
  3663  027A                     u1695:	
  3664  027A  1003               	clrc
  3665  027B  0CCD               	rrf	___ftmul@f3_as_product+2,f
  3666  027C  0CCC               	rrf	___ftmul@f3_as_product+1,f
  3667  027D  0CCB               	rrf	___ftmul@f3_as_product,f
  3668  027E  3EFF               	addlw	-1
  3669  027F  1D03               	skipz
  3670  0280  2A7A               	goto	u1695
  3671  0281  3001               	movlw	1
  3672  0282  02CE               	subwf	___ftmul@cntr,f
  3673  0283  1D03               	btfss	3,2
  3674  0284  2A61               	goto	l1309
  3675  0285  084B               	movf	___ftmul@f3_as_product,w
  3676  0286  00F0               	movwf	___ftpack@arg
  3677  0287  084C               	movf	___ftmul@f3_as_product+1,w
  3678  0288  00F1               	movwf	___ftpack@arg+1
  3679  0289  084D               	movf	___ftmul@f3_as_product+2,w
  3680  028A  00F2               	movwf	___ftpack@arg+2
  3681  028B  084A               	movf	___ftmul@exp,w
  3682  028C  00C6               	movwf	??___ftmul
  3683  028D  0846               	movf	??___ftmul,w
  3684  028E  00F3               	movwf	___ftpack@exp
  3685  028F  084F               	movf	___ftmul@sign,w
  3686  0290  00C7               	movwf	??___ftmul+1
  3687  0291  0847               	movf	??___ftmul+1,w
  3688  0292  00F4               	movwf	___ftpack@sign
  3689  0293  120A  158A  2699   	fcall	___ftpack
  3690  0296  0870               	movf	?___ftpack,w
  3691  0297  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0298  1303               	bcf	3,6	;RP1=0, select bank0
  3693  0299  00C0               	movwf	?___ftmul
  3694  029A  0871               	movf	?___ftpack+1,w
  3695  029B  00C1               	movwf	?___ftmul+1
  3696  029C  0872               	movf	?___ftpack+2,w
  3697  029D  00C2               	movwf	?___ftmul+2
  3698  029E  0008               	return
  3699  029F                     __end_of___ftmul:	
  3700                           
  3701                           	psect	text16
  3702  0114                     __ptext16:	
  3703 ;; *************** function ___ftdiv *****************
  3704 ;; Defined at:
  3705 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  f2              3    0[BANK0 ] float 
  3708 ;;  f1              3    3[BANK0 ] float 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  f3              3   11[BANK0 ] float 
  3711 ;;  sign            1   15[BANK0 ] unsigned char 
  3712 ;;  exp             1   14[BANK0 ] unsigned char 
  3713 ;;  cntr            1   10[BANK0 ] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  3    0[BANK0 ] float 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3723 ;;      Params:         0       6       0       0       0
  3724 ;;      Locals:         0       6       0       0       0
  3725 ;;      Temps:          0       4       0       0       0
  3726 ;;      Totals:         0      16       0       0       0
  3727 ;;Total ram usage:       16 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    1
  3730 ;; This function calls:
  3731 ;;		___ftpack
  3732 ;; This function is called by:
  3733 ;;		_PWM1_Duty
  3734 ;;		_PWM2_Duty
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           
  3740                           ;psect for function ___ftdiv
  3741  0114                     ___ftdiv:	
  3742                           
  3743                           ;incstack = 0
  3744                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3745  0114  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0115  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0116  0823               	movf	___ftdiv@f1,w
  3748  0117  00A6               	movwf	??___ftdiv
  3749  0118  0824               	movf	___ftdiv@f1+1,w
  3750  0119  00A7               	movwf	??___ftdiv+1
  3751  011A  0825               	movf	___ftdiv@f1+2,w
  3752  011B  00A8               	movwf	??___ftdiv+2
  3753  011C  1003               	clrc
  3754  011D  0D27               	rlf	??___ftdiv+1,w
  3755  011E  0D28               	rlf	??___ftdiv+2,w
  3756  011F  00A9               	movwf	??___ftdiv+3
  3757  0120  0829               	movf	??___ftdiv+3,w
  3758  0121  00AE               	movwf	___ftdiv@exp
  3759  0122  082E               	movf	___ftdiv@exp,w
  3760  0123  1D03               	btfss	3,2
  3761  0124  292C               	goto	l1237
  3762  0125  3000               	movlw	0
  3763  0126  00A0               	movwf	?___ftdiv
  3764  0127  3000               	movlw	0
  3765  0128  00A1               	movwf	?___ftdiv+1
  3766  0129  3000               	movlw	0
  3767  012A  00A2               	movwf	?___ftdiv+2
  3768  012B  0008               	return
  3769  012C                     l1237:	
  3770  012C  0820               	movf	___ftdiv@f2,w
  3771  012D  00A6               	movwf	??___ftdiv
  3772  012E  0821               	movf	___ftdiv@f2+1,w
  3773  012F  00A7               	movwf	??___ftdiv+1
  3774  0130  0822               	movf	___ftdiv@f2+2,w
  3775  0131  00A8               	movwf	??___ftdiv+2
  3776  0132  1003               	clrc
  3777  0133  0D27               	rlf	??___ftdiv+1,w
  3778  0134  0D28               	rlf	??___ftdiv+2,w
  3779  0135  00A9               	movwf	??___ftdiv+3
  3780  0136  0829               	movf	??___ftdiv+3,w
  3781  0137  00AF               	movwf	___ftdiv@sign
  3782  0138  082F               	movf	___ftdiv@sign,w
  3783  0139  1D03               	btfss	3,2
  3784  013A  2942               	goto	l1243
  3785  013B  3000               	movlw	0
  3786  013C  00A0               	movwf	?___ftdiv
  3787  013D  3000               	movlw	0
  3788  013E  00A1               	movwf	?___ftdiv+1
  3789  013F  3000               	movlw	0
  3790  0140  00A2               	movwf	?___ftdiv+2
  3791  0141  0008               	return
  3792  0142                     l1243:	
  3793  0142  3000               	movlw	0
  3794  0143  00AB               	movwf	___ftdiv@f3
  3795  0144  3000               	movlw	0
  3796  0145  00AC               	movwf	___ftdiv@f3+1
  3797  0146  3000               	movlw	0
  3798  0147  00AD               	movwf	___ftdiv@f3+2
  3799  0148  3089               	movlw	137
  3800  0149  072F               	addwf	___ftdiv@sign,w
  3801  014A  00A6               	movwf	??___ftdiv
  3802  014B  0826               	movf	??___ftdiv,w
  3803  014C  02AE               	subwf	___ftdiv@exp,f
  3804  014D  0823               	movf	___ftdiv@f1,w
  3805  014E  00A6               	movwf	??___ftdiv
  3806  014F  0824               	movf	___ftdiv@f1+1,w
  3807  0150  00A7               	movwf	??___ftdiv+1
  3808  0151  0825               	movf	___ftdiv@f1+2,w
  3809  0152  00A8               	movwf	??___ftdiv+2
  3810  0153  3010               	movlw	16
  3811  0154                     u1515:	
  3812  0154  1003               	clrc
  3813  0155  0CA8               	rrf	??___ftdiv+2,f
  3814  0156  0CA7               	rrf	??___ftdiv+1,f
  3815  0157  0CA6               	rrf	??___ftdiv,f
  3816  0158  3EFF               	addlw	-1
  3817  0159  1D03               	skipz
  3818  015A  2954               	goto	u1515
  3819  015B  0826               	movf	??___ftdiv,w
  3820  015C  00A9               	movwf	??___ftdiv+3
  3821  015D  0829               	movf	??___ftdiv+3,w
  3822  015E  00AF               	movwf	___ftdiv@sign
  3823  015F  0820               	movf	___ftdiv@f2,w
  3824  0160  00A6               	movwf	??___ftdiv
  3825  0161  0821               	movf	___ftdiv@f2+1,w
  3826  0162  00A7               	movwf	??___ftdiv+1
  3827  0163  0822               	movf	___ftdiv@f2+2,w
  3828  0164  00A8               	movwf	??___ftdiv+2
  3829  0165  3010               	movlw	16
  3830  0166                     u1525:	
  3831  0166  1003               	clrc
  3832  0167  0CA8               	rrf	??___ftdiv+2,f
  3833  0168  0CA7               	rrf	??___ftdiv+1,f
  3834  0169  0CA6               	rrf	??___ftdiv,f
  3835  016A  3EFF               	addlw	-1
  3836  016B  1D03               	skipz
  3837  016C  2966               	goto	u1525
  3838  016D  0826               	movf	??___ftdiv,w
  3839  016E  00A9               	movwf	??___ftdiv+3
  3840  016F  0829               	movf	??___ftdiv+3,w
  3841  0170  06AF               	xorwf	___ftdiv@sign,f
  3842  0171  3080               	movlw	128
  3843  0172  00A6               	movwf	??___ftdiv
  3844  0173  0826               	movf	??___ftdiv,w
  3845  0174  05AF               	andwf	___ftdiv@sign,f
  3846  0175  17A4               	bsf	___ftdiv@f1+1,7
  3847  0176  30FF               	movlw	255
  3848  0177  05A3               	andwf	___ftdiv@f1,f
  3849  0178  30FF               	movlw	255
  3850  0179  05A4               	andwf	___ftdiv@f1+1,f
  3851  017A  3000               	movlw	0
  3852  017B  05A5               	andwf	___ftdiv@f1+2,f
  3853  017C  17A1               	bsf	___ftdiv@f2+1,7
  3854  017D  30FF               	movlw	255
  3855  017E  05A0               	andwf	___ftdiv@f2,f
  3856  017F  30FF               	movlw	255
  3857  0180  05A1               	andwf	___ftdiv@f2+1,f
  3858  0181  3000               	movlw	0
  3859  0182  05A2               	andwf	___ftdiv@f2+2,f
  3860  0183  3018               	movlw	24
  3861  0184  00A6               	movwf	??___ftdiv
  3862  0185  0826               	movf	??___ftdiv,w
  3863  0186  00AA               	movwf	___ftdiv@cntr
  3864  0187                     l1257:	
  3865  0187  3001               	movlw	1
  3866  0188                     u1535:	
  3867  0188  1003               	clrc
  3868  0189  0DAB               	rlf	___ftdiv@f3,f
  3869  018A  0DAC               	rlf	___ftdiv@f3+1,f
  3870  018B  0DAD               	rlf	___ftdiv@f3+2,f
  3871  018C  3EFF               	addlw	-1
  3872  018D  1D03               	skipz
  3873  018E  2988               	goto	u1535
  3874  018F  0822               	movf	___ftdiv@f2+2,w
  3875  0190  0225               	subwf	___ftdiv@f1+2,w
  3876  0191  1D03               	skipz
  3877  0192  2999               	goto	u1545
  3878  0193  0821               	movf	___ftdiv@f2+1,w
  3879  0194  0224               	subwf	___ftdiv@f1+1,w
  3880  0195  1D03               	skipz
  3881  0196  2999               	goto	u1545
  3882  0197  0820               	movf	___ftdiv@f2,w
  3883  0198  0223               	subwf	___ftdiv@f1,w
  3884  0199                     u1545:	
  3885  0199  1C03               	skipc
  3886  019A  29A6               	goto	l1265
  3887  019B  0820               	movf	___ftdiv@f2,w
  3888  019C  02A3               	subwf	___ftdiv@f1,f
  3889  019D  0821               	movf	___ftdiv@f2+1,w
  3890  019E  1C03               	skipc
  3891  019F  0F21               	incfsz	___ftdiv@f2+1,w
  3892  01A0  02A4               	subwf	___ftdiv@f1+1,f
  3893  01A1  0822               	movf	___ftdiv@f2+2,w
  3894  01A2  1C03               	skipc
  3895  01A3  0A22               	incf	___ftdiv@f2+2,w
  3896  01A4  02A5               	subwf	___ftdiv@f1+2,f
  3897  01A5  142B               	bsf	___ftdiv@f3,0
  3898  01A6                     l1265:	
  3899  01A6  3001               	movlw	1
  3900  01A7                     u1555:	
  3901  01A7  1003               	clrc
  3902  01A8  0DA3               	rlf	___ftdiv@f1,f
  3903  01A9  0DA4               	rlf	___ftdiv@f1+1,f
  3904  01AA  0DA5               	rlf	___ftdiv@f1+2,f
  3905  01AB  3EFF               	addlw	-1
  3906  01AC  1D03               	skipz
  3907  01AD  29A7               	goto	u1555
  3908  01AE  3001               	movlw	1
  3909  01AF  02AA               	subwf	___ftdiv@cntr,f
  3910  01B0  1D03               	btfss	3,2
  3911  01B1  2987               	goto	l1257
  3912  01B2  082B               	movf	___ftdiv@f3,w
  3913  01B3  00F0               	movwf	___ftpack@arg
  3914  01B4  082C               	movf	___ftdiv@f3+1,w
  3915  01B5  00F1               	movwf	___ftpack@arg+1
  3916  01B6  082D               	movf	___ftdiv@f3+2,w
  3917  01B7  00F2               	movwf	___ftpack@arg+2
  3918  01B8  082E               	movf	___ftdiv@exp,w
  3919  01B9  00A6               	movwf	??___ftdiv
  3920  01BA  0826               	movf	??___ftdiv,w
  3921  01BB  00F3               	movwf	___ftpack@exp
  3922  01BC  082F               	movf	___ftdiv@sign,w
  3923  01BD  00A7               	movwf	??___ftdiv+1
  3924  01BE  0827               	movf	??___ftdiv+1,w
  3925  01BF  00F4               	movwf	___ftpack@sign
  3926  01C0  120A  158A  2699   	fcall	___ftpack
  3927  01C3  0870               	movf	?___ftpack,w
  3928  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3929  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3930  01C6  00A0               	movwf	?___ftdiv
  3931  01C7  0871               	movf	?___ftpack+1,w
  3932  01C8  00A1               	movwf	?___ftdiv+1
  3933  01C9  0872               	movf	?___ftpack+2,w
  3934  01CA  00A2               	movwf	?___ftdiv+2
  3935  01CB  0008               	return
  3936  01CC                     __end_of___ftdiv:	
  3937                           
  3938                           	psect	text17
  3939  0D13                     __ptext17:	
  3940 ;; *************** function ___awtoft *****************
  3941 ;; Defined at:
  3942 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  c               2    8[BANK0 ] int 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  sign            1   13[COMMON] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  3    8[BANK0 ] float 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, status,0, pclath, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3956 ;;      Params:         0       3       0       0       0
  3957 ;;      Locals:         1       0       0       0       0
  3958 ;;      Temps:          0       2       0       0       0
  3959 ;;      Totals:         1       5       0       0       0
  3960 ;;Total ram usage:        6 bytes
  3961 ;; Hardware stack levels used:    1
  3962 ;; Hardware stack levels required when called:    1
  3963 ;; This function calls:
  3964 ;;		___ftpack
  3965 ;; This function is called by:
  3966 ;;		_PWM1_Duty
  3967 ;;		_PWM2_Duty
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function ___awtoft
  3974  0D13                     ___awtoft:	
  3975                           
  3976                           ;incstack = 0
  3977                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3978  0D13  01FD               	clrf	___awtoft@sign
  3979  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  3981  0D16  1FA9               	btfss	___awtoft@c+1,7
  3982  0D17  2D1F               	goto	l1227
  3983  0D18  09A8               	comf	___awtoft@c,f
  3984  0D19  09A9               	comf	___awtoft@c+1,f
  3985  0D1A  0AA8               	incf	___awtoft@c,f
  3986  0D1B  1903               	skipnz
  3987  0D1C  0AA9               	incf	___awtoft@c+1,f
  3988  0D1D  01FD               	clrf	___awtoft@sign
  3989  0D1E  0AFD               	incf	___awtoft@sign,f
  3990  0D1F                     l1227:	
  3991  0D1F  0828               	movf	___awtoft@c,w
  3992  0D20  00F0               	movwf	___ftpack@arg
  3993  0D21  0829               	movf	___awtoft@c+1,w
  3994  0D22  00F1               	movwf	___ftpack@arg+1
  3995  0D23  01F2               	clrf	___ftpack@arg+2
  3996  0D24  308E               	movlw	142
  3997  0D25  00AB               	movwf	??___awtoft
  3998  0D26  082B               	movf	??___awtoft,w
  3999  0D27  00F3               	movwf	___ftpack@exp
  4000  0D28  087D               	movf	___awtoft@sign,w
  4001  0D29  00AC               	movwf	??___awtoft+1
  4002  0D2A  082C               	movf	??___awtoft+1,w
  4003  0D2B  00F4               	movwf	___ftpack@sign
  4004  0D2C  120A  158A  2699   	fcall	___ftpack
  4005  0D2F  0870               	movf	?___ftpack,w
  4006  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0D32  00A8               	movwf	?___awtoft
  4009  0D33  0871               	movf	?___ftpack+1,w
  4010  0D34  00A9               	movwf	?___awtoft+1
  4011  0D35  0872               	movf	?___ftpack+2,w
  4012  0D36  00AA               	movwf	?___awtoft+2
  4013  0D37  0008               	return
  4014  0D38                     __end_of___awtoft:	
  4015                           
  4016                           	psect	text18
  4017  0E99                     __ptext18:	
  4018 ;; *************** function ___ftpack *****************
  4019 ;; Defined at:
  4020 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  arg             3    0[COMMON] unsigned um
  4023 ;;  exp             1    3[COMMON] unsigned char 
  4024 ;;  sign            1    4[COMMON] unsigned char 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  3    0[COMMON] float 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         5       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0
  4038 ;;      Temps:          3       0       0       0       0
  4039 ;;      Totals:         8       0       0       0       0
  4040 ;;Total ram usage:        8 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		___awtoft
  4046 ;;		___ftadd
  4047 ;;		___ftdiv
  4048 ;;		___ftmul
  4049 ;;		___lwtoft
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           
  4054                           ;psect for function ___ftpack
  4055  0E99                     ___ftpack:	
  4056                           
  4057                           ;incstack = 0
  4058                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4059  0E99  0873               	movf	___ftpack@exp,w
  4060  0E9A  1903               	btfsc	3,2
  4061  0E9B  2EA1               	goto	l1147
  4062  0E9C  0872               	movf	___ftpack@arg+2,w
  4063  0E9D  0471               	iorwf	___ftpack@arg+1,w
  4064  0E9E  0470               	iorwf	___ftpack@arg,w
  4065  0E9F  1D03               	skipz
  4066  0EA0  2EB4               	goto	l1153
  4067  0EA1                     l1147:	
  4068  0EA1  3000               	movlw	0
  4069  0EA2  00F0               	movwf	?___ftpack
  4070  0EA3  3000               	movlw	0
  4071  0EA4  00F1               	movwf	?___ftpack+1
  4072  0EA5  3000               	movlw	0
  4073  0EA6  00F2               	movwf	?___ftpack+2
  4074  0EA7  0008               	return
  4075  0EA8                     l1151:	
  4076  0EA8  3001               	movlw	1
  4077  0EA9  00F5               	movwf	??___ftpack
  4078  0EAA  0875               	movf	??___ftpack,w
  4079  0EAB  07F3               	addwf	___ftpack@exp,f
  4080  0EAC  3001               	movlw	1
  4081  0EAD                     u1275:	
  4082  0EAD  1003               	clrc
  4083  0EAE  0CF2               	rrf	___ftpack@arg+2,f
  4084  0EAF  0CF1               	rrf	___ftpack@arg+1,f
  4085  0EB0  0CF0               	rrf	___ftpack@arg,f
  4086  0EB1  3EFF               	addlw	-1
  4087  0EB2  1D03               	skipz
  4088  0EB3  2EAD               	goto	u1275
  4089  0EB4                     l1153:	
  4090  0EB4  30FE               	movlw	254
  4091  0EB5  0572               	andwf	___ftpack@arg+2,w
  4092  0EB6  1903               	btfsc	3,2
  4093  0EB7  2ECF               	goto	l362
  4094  0EB8  2EA8               	goto	l1151
  4095  0EB9                     l1155:	
  4096  0EB9  3001               	movlw	1
  4097  0EBA  00F5               	movwf	??___ftpack
  4098  0EBB  0875               	movf	??___ftpack,w
  4099  0EBC  07F3               	addwf	___ftpack@exp,f
  4100  0EBD  3001               	movlw	1
  4101  0EBE  07F0               	addwf	___ftpack@arg,f
  4102  0EBF  3000               	movlw	0
  4103  0EC0  1803               	skipnc
  4104  0EC1  3001               	movlw	1
  4105  0EC2  07F1               	addwf	___ftpack@arg+1,f
  4106  0EC3  3000               	movlw	0
  4107  0EC4  1803               	skipnc
  4108  0EC5  3001               	movlw	1
  4109  0EC6  07F2               	addwf	___ftpack@arg+2,f
  4110  0EC7  3001               	movlw	1
  4111  0EC8                     u1295:	
  4112  0EC8  1003               	clrc
  4113  0EC9  0CF2               	rrf	___ftpack@arg+2,f
  4114  0ECA  0CF1               	rrf	___ftpack@arg+1,f
  4115  0ECB  0CF0               	rrf	___ftpack@arg,f
  4116  0ECC  3EFF               	addlw	-1
  4117  0ECD  1D03               	skipz
  4118  0ECE  2EC8               	goto	u1295
  4119  0ECF                     l362:	
  4120  0ECF  30FF               	movlw	255
  4121  0ED0  0572               	andwf	___ftpack@arg+2,w
  4122  0ED1  1903               	btfsc	3,2
  4123  0ED2  2EDE               	goto	l1163
  4124  0ED3  2EB9               	goto	l1155
  4125  0ED4                     l1161:	
  4126  0ED4  3001               	movlw	1
  4127  0ED5  02F3               	subwf	___ftpack@exp,f
  4128  0ED6  3001               	movlw	1
  4129  0ED7                     u1315:	
  4130  0ED7  1003               	clrc
  4131  0ED8  0DF0               	rlf	___ftpack@arg,f
  4132  0ED9  0DF1               	rlf	___ftpack@arg+1,f
  4133  0EDA  0DF2               	rlf	___ftpack@arg+2,f
  4134  0EDB  3EFF               	addlw	-1
  4135  0EDC  1D03               	skipz
  4136  0EDD  2ED7               	goto	u1315
  4137  0EDE                     l1163:	
  4138  0EDE  1BF1               	btfsc	___ftpack@arg+1,7
  4139  0EDF  2EE4               	goto	l369
  4140  0EE0  3002               	movlw	2
  4141  0EE1  0273               	subwf	___ftpack@exp,w
  4142  0EE2  1803               	skipnc
  4143  0EE3  2ED4               	goto	l1161
  4144  0EE4                     l369:	
  4145  0EE4  1873               	btfsc	___ftpack@exp,0
  4146  0EE5  2EEC               	goto	l370
  4147  0EE6  30FF               	movlw	255
  4148  0EE7  05F0               	andwf	___ftpack@arg,f
  4149  0EE8  307F               	movlw	127
  4150  0EE9  05F1               	andwf	___ftpack@arg+1,f
  4151  0EEA  30FF               	movlw	255
  4152  0EEB  05F2               	andwf	___ftpack@arg+2,f
  4153  0EEC                     l370:	
  4154  0EEC  1003               	clrc
  4155  0EED  0CF3               	rrf	___ftpack@exp,f
  4156  0EEE  0873               	movf	___ftpack@exp,w
  4157  0EEF  00F5               	movwf	??___ftpack
  4158  0EF0  01F6               	clrf	??___ftpack+1
  4159  0EF1  01F7               	clrf	??___ftpack+2
  4160  0EF2  3010               	movlw	16
  4161  0EF3                     u1355:	
  4162  0EF3  1003               	clrc
  4163  0EF4  0DF5               	rlf	??___ftpack,f
  4164  0EF5  0DF6               	rlf	??___ftpack+1,f
  4165  0EF6  0DF7               	rlf	??___ftpack+2,f
  4166  0EF7  3EFF               	addlw	-1
  4167  0EF8  1D03               	skipz
  4168  0EF9  2EF3               	goto	u1355
  4169  0EFA  0875               	movf	??___ftpack,w
  4170  0EFB  04F0               	iorwf	___ftpack@arg,f
  4171  0EFC  0876               	movf	??___ftpack+1,w
  4172  0EFD  04F1               	iorwf	___ftpack@arg+1,f
  4173  0EFE  0877               	movf	??___ftpack+2,w
  4174  0EFF  04F2               	iorwf	___ftpack@arg+2,f
  4175  0F00  0874               	movf	___ftpack@sign,w
  4176  0F01  1903               	btfsc	3,2
  4177  0F02  0008               	return
  4178  0F03  17F2               	bsf	___ftpack@arg+2,7
  4179  0F04  0008               	return
  4180  0F05                     __end_of___ftpack:	
  4181                           
  4182                           	psect	text19
  4183  0D38                     __ptext19:	
  4184 ;; *************** function _PWM_Max_Duty *****************
  4185 ;; Defined at:
  4186 ;;		line 28 in file "finalcode.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  2    6[BANK0 ] int 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       2       0       0       0
  4201 ;;      Locals:         0       0       0       0       0
  4202 ;;      Temps:          4       0       0       0       0
  4203 ;;      Totals:         4       2       0       0       0
  4204 ;;Total ram usage:        6 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    1
  4207 ;; This function calls:
  4208 ;;		___aldiv
  4209 ;; This function is called by:
  4210 ;;		_PWM1_Duty
  4211 ;;		_PWM2_Duty
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _PWM_Max_Duty
  4217  0D38                     _PWM_Max_Duty:	
  4218                           
  4219                           ;finalcode.c: 30: return(16000000/(freq*4));
  4220                           
  4221                           ;incstack = 0
  4222                           ; Regs used in _PWM_Max_Duty: [wreg+status,2+status,0+pclath+cstack]
  4223  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0D3A  0864               	movf	_freq,w
  4226  0D3B  00F9               	movwf	??_PWM_Max_Duty
  4227  0D3C  0865               	movf	_freq+1,w
  4228  0D3D  00FA               	movwf	??_PWM_Max_Duty+1
  4229  0D3E  0866               	movf	_freq+2,w
  4230  0D3F  00FB               	movwf	??_PWM_Max_Duty+2
  4231  0D40  0867               	movf	_freq+3,w
  4232  0D41  00FC               	movwf	??_PWM_Max_Duty+3
  4233  0D42  3002               	movlw	2
  4234  0D43                     u1475:	
  4235  0D43  1003               	clrc
  4236  0D44  0DF9               	rlf	??_PWM_Max_Duty,f
  4237  0D45  0DFA               	rlf	??_PWM_Max_Duty+1,f
  4238  0D46  0DFB               	rlf	??_PWM_Max_Duty+2,f
  4239  0D47  0DFC               	rlf	??_PWM_Max_Duty+3,f
  4240  0D48  3EFF               	addlw	-1
  4241  0D49  1D03               	skipz
  4242  0D4A  2D43               	goto	u1475
  4243  0D4B  087C               	movf	??_PWM_Max_Duty+3,w
  4244  0D4C  00F3               	movwf	___aldiv@divisor+3
  4245  0D4D  087B               	movf	??_PWM_Max_Duty+2,w
  4246  0D4E  00F2               	movwf	___aldiv@divisor+2
  4247  0D4F  087A               	movf	??_PWM_Max_Duty+1,w
  4248  0D50  00F1               	movwf	___aldiv@divisor+1
  4249  0D51  0879               	movf	??_PWM_Max_Duty,w
  4250  0D52  00F0               	movwf	___aldiv@divisor
  4251  0D53  3000               	movlw	0
  4252  0D54  00F7               	movwf	___aldiv@dividend+3
  4253  0D55  30F4               	movlw	244
  4254  0D56  00F6               	movwf	___aldiv@dividend+2
  4255  0D57  3024               	movlw	36
  4256  0D58  00F5               	movwf	___aldiv@dividend+1
  4257  0D59  3000               	movlw	0
  4258  0D5A  00F4               	movwf	___aldiv@dividend
  4259  0D5B  120A  118A  2085   	fcall	___aldiv
  4260  0D5E  0871               	movf	?___aldiv+1,w
  4261  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  4263  0D61  00A7               	movwf	?_PWM_Max_Duty+1
  4264  0D62  0870               	movf	?___aldiv,w
  4265  0D63  00A6               	movwf	?_PWM_Max_Duty
  4266  0D64  0008               	return
  4267  0D65                     __end_of_PWM_Max_Duty:	
  4268                           
  4269                           	psect	text20
  4270  0085                     __ptext20:	
  4271 ;; *************** function ___aldiv *****************
  4272 ;; Defined at:
  4273 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  divisor         4    0[COMMON] long 
  4276 ;;  dividend        4    4[COMMON] long 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  quotient        4    2[BANK0 ] long 
  4279 ;;  sign            1    1[BANK0 ] unsigned char 
  4280 ;;  counter         1    0[BANK0 ] unsigned char 
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  4    0[COMMON] long 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4290 ;;      Params:         8       0       0       0       0
  4291 ;;      Locals:         0       6       0       0       0
  4292 ;;      Temps:          1       0       0       0       0
  4293 ;;      Totals:         9       6       0       0       0
  4294 ;;Total ram usage:       15 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_PWM_Max_Duty
  4300 ;;		_PWM1_Init
  4301 ;;		_PWM2_Init
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           
  4306                           ;psect for function ___aldiv
  4307  0085                     ___aldiv:	
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4311  0085  1283               	bcf	3,5	;RP0=0, select bank0
  4312  0086  1303               	bcf	3,6	;RP1=0, select bank0
  4313  0087  01A1               	clrf	___aldiv@sign
  4314  0088  1FF3               	btfss	___aldiv@divisor+3,7
  4315  0089  2897               	goto	l256
  4316  008A  09F0               	comf	___aldiv@divisor,f
  4317  008B  09F1               	comf	___aldiv@divisor+1,f
  4318  008C  09F2               	comf	___aldiv@divisor+2,f
  4319  008D  09F3               	comf	___aldiv@divisor+3,f
  4320  008E  0AF0               	incf	___aldiv@divisor,f
  4321  008F  1903               	skipnz
  4322  0090  0AF1               	incf	___aldiv@divisor+1,f
  4323  0091  1903               	skipnz
  4324  0092  0AF2               	incf	___aldiv@divisor+2,f
  4325  0093  1903               	skipnz
  4326  0094  0AF3               	incf	___aldiv@divisor+3,f
  4327  0095  01A1               	clrf	___aldiv@sign
  4328  0096  0AA1               	incf	___aldiv@sign,f
  4329  0097                     l256:	
  4330  0097  1FF7               	btfss	___aldiv@dividend+3,7
  4331  0098  28A8               	goto	l1185
  4332  0099  09F4               	comf	___aldiv@dividend,f
  4333  009A  09F5               	comf	___aldiv@dividend+1,f
  4334  009B  09F6               	comf	___aldiv@dividend+2,f
  4335  009C  09F7               	comf	___aldiv@dividend+3,f
  4336  009D  0AF4               	incf	___aldiv@dividend,f
  4337  009E  1903               	skipnz
  4338  009F  0AF5               	incf	___aldiv@dividend+1,f
  4339  00A0  1903               	skipnz
  4340  00A1  0AF6               	incf	___aldiv@dividend+2,f
  4341  00A2  1903               	skipnz
  4342  00A3  0AF7               	incf	___aldiv@dividend+3,f
  4343  00A4  3001               	movlw	1
  4344  00A5  00F8               	movwf	??___aldiv
  4345  00A6  0878               	movf	??___aldiv,w
  4346  00A7  06A1               	xorwf	___aldiv@sign,f
  4347  00A8                     l1185:	
  4348  00A8  3000               	movlw	0
  4349  00A9  00A5               	movwf	___aldiv@quotient+3
  4350  00AA  3000               	movlw	0
  4351  00AB  00A4               	movwf	___aldiv@quotient+2
  4352  00AC  3000               	movlw	0
  4353  00AD  00A3               	movwf	___aldiv@quotient+1
  4354  00AE  3000               	movlw	0
  4355  00AF  00A2               	movwf	___aldiv@quotient
  4356  00B0  0873               	movf	___aldiv@divisor+3,w
  4357  00B1  0472               	iorwf	___aldiv@divisor+2,w
  4358  00B2  0471               	iorwf	___aldiv@divisor+1,w
  4359  00B3  0470               	iorwf	___aldiv@divisor,w
  4360  00B4  1903               	skipnz
  4361  00B5  28FD               	goto	l1207
  4362  00B6  01A0               	clrf	___aldiv@counter
  4363  00B7  0AA0               	incf	___aldiv@counter,f
  4364  00B8                     l1193:	
  4365  00B8  1BF3               	btfsc	___aldiv@divisor+3,7
  4366  00B9  28C8               	goto	l1195
  4367  00BA  3001               	movlw	1
  4368  00BB  00F8               	movwf	??___aldiv
  4369  00BC                     u1405:	
  4370  00BC  1003               	clrc
  4371  00BD  0DF0               	rlf	___aldiv@divisor,f
  4372  00BE  0DF1               	rlf	___aldiv@divisor+1,f
  4373  00BF  0DF2               	rlf	___aldiv@divisor+2,f
  4374  00C0  0DF3               	rlf	___aldiv@divisor+3,f
  4375  00C1  0BF8               	decfsz	??___aldiv,f
  4376  00C2  28BC               	goto	u1405
  4377  00C3  3001               	movlw	1
  4378  00C4  00F8               	movwf	??___aldiv
  4379  00C5  0878               	movf	??___aldiv,w
  4380  00C6  07A0               	addwf	___aldiv@counter,f
  4381  00C7  28B8               	goto	l1193
  4382  00C8                     l1195:	
  4383  00C8  3001               	movlw	1
  4384  00C9  00F8               	movwf	??___aldiv
  4385  00CA                     u1425:	
  4386  00CA  1003               	clrc
  4387  00CB  0DA2               	rlf	___aldiv@quotient,f
  4388  00CC  0DA3               	rlf	___aldiv@quotient+1,f
  4389  00CD  0DA4               	rlf	___aldiv@quotient+2,f
  4390  00CE  0DA5               	rlf	___aldiv@quotient+3,f
  4391  00CF  0BF8               	decfsz	??___aldiv,f
  4392  00D0  28CA               	goto	u1425
  4393  00D1  0873               	movf	___aldiv@divisor+3,w
  4394  00D2  0277               	subwf	___aldiv@dividend+3,w
  4395  00D3  1D03               	skipz
  4396  00D4  28DF               	goto	u1435
  4397  00D5  0872               	movf	___aldiv@divisor+2,w
  4398  00D6  0276               	subwf	___aldiv@dividend+2,w
  4399  00D7  1D03               	skipz
  4400  00D8  28DF               	goto	u1435
  4401  00D9  0871               	movf	___aldiv@divisor+1,w
  4402  00DA  0275               	subwf	___aldiv@dividend+1,w
  4403  00DB  1D03               	skipz
  4404  00DC  28DF               	goto	u1435
  4405  00DD  0870               	movf	___aldiv@divisor,w
  4406  00DE  0274               	subwf	___aldiv@dividend,w
  4407  00DF                     u1435:	
  4408  00DF  1C03               	skipc
  4409  00E0  28F0               	goto	l1203
  4410  00E1  0870               	movf	___aldiv@divisor,w
  4411  00E2  02F4               	subwf	___aldiv@dividend,f
  4412  00E3  0871               	movf	___aldiv@divisor+1,w
  4413  00E4  1C03               	skipc
  4414  00E5  0F71               	incfsz	___aldiv@divisor+1,w
  4415  00E6  02F5               	subwf	___aldiv@dividend+1,f
  4416  00E7  0872               	movf	___aldiv@divisor+2,w
  4417  00E8  1C03               	skipc
  4418  00E9  0F72               	incfsz	___aldiv@divisor+2,w
  4419  00EA  02F6               	subwf	___aldiv@dividend+2,f
  4420  00EB  0873               	movf	___aldiv@divisor+3,w
  4421  00EC  1C03               	skipc
  4422  00ED  0F73               	incfsz	___aldiv@divisor+3,w
  4423  00EE  02F7               	subwf	___aldiv@dividend+3,f
  4424  00EF  1422               	bsf	___aldiv@quotient,0
  4425  00F0                     l1203:	
  4426  00F0  3001               	movlw	1
  4427  00F1                     u1445:	
  4428  00F1  1003               	clrc
  4429  00F2  0CF3               	rrf	___aldiv@divisor+3,f
  4430  00F3  0CF2               	rrf	___aldiv@divisor+2,f
  4431  00F4  0CF1               	rrf	___aldiv@divisor+1,f
  4432  00F5  0CF0               	rrf	___aldiv@divisor,f
  4433  00F6  3EFF               	addlw	-1
  4434  00F7  1D03               	skipz
  4435  00F8  28F1               	goto	u1445
  4436  00F9  3001               	movlw	1
  4437  00FA  02A0               	subwf	___aldiv@counter,f
  4438  00FB  1D03               	btfss	3,2
  4439  00FC  28C8               	goto	l1195
  4440  00FD                     l1207:	
  4441  00FD  0821               	movf	___aldiv@sign,w
  4442  00FE  1903               	btfsc	3,2
  4443  00FF  290B               	goto	l1211
  4444  0100  09A2               	comf	___aldiv@quotient,f
  4445  0101  09A3               	comf	___aldiv@quotient+1,f
  4446  0102  09A4               	comf	___aldiv@quotient+2,f
  4447  0103  09A5               	comf	___aldiv@quotient+3,f
  4448  0104  0AA2               	incf	___aldiv@quotient,f
  4449  0105  1903               	skipnz
  4450  0106  0AA3               	incf	___aldiv@quotient+1,f
  4451  0107  1903               	skipnz
  4452  0108  0AA4               	incf	___aldiv@quotient+2,f
  4453  0109  1903               	skipnz
  4454  010A  0AA5               	incf	___aldiv@quotient+3,f
  4455  010B                     l1211:	
  4456  010B  0825               	movf	___aldiv@quotient+3,w
  4457  010C  00F3               	movwf	?___aldiv+3
  4458  010D  0824               	movf	___aldiv@quotient+2,w
  4459  010E  00F2               	movwf	?___aldiv+2
  4460  010F  0823               	movf	___aldiv@quotient+1,w
  4461  0110  00F1               	movwf	?___aldiv+1
  4462  0111  0822               	movf	___aldiv@quotient,w
  4463  0112  00F0               	movwf	?___aldiv
  4464  0113  0008               	return
  4465  0114                     __end_of___aldiv:	
  4466  007E                     btemp	set	126	;btemp
  4467  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     68      72
    BANK1            80     39      39
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awtoft
    _PWM2_Init->___aldiv
    _PWM2_Duty->___awtoft
    _PWM1_Init->___aldiv
    _PWM1_Duty->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___lwtoft
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK0

    _main->_PWM1_Duty
    _main->_PWM2_Duty
    ___ftneg->___ftdiv
    ___ftadd->___ftneg
    _PWM2_Init->___aldiv
    _PWM2_Duty->___fttol
    _PWM1_Init->___aldiv
    _PWM1_Duty->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftadd
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   34270
                                             66 BANK0      2     2      0
                                              0 BANK1     39    39      0
                          _PWM1_Duty
                          _PWM1_Init
                         _PWM1_Start
                          _PWM1_Stop
                          _PWM2_Duty
                          _PWM2_Init
                         _PWM2_Start
                          _PWM2_Stop
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3     257
                                             16 BANK0      3     0      3
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftge                                              12     6      6     454
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             13     7      6    3302
                                             19 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _PWM2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM2_Duty                                            4     2      2   10040
                                             62 BANK0      4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _PWM1_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Duty                                            4     2      2   10040
                                             62 BANK0      4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1874
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                             48 BANK0     14    10      4
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2496
                                             32 BANK0     16    10      6
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2450
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1996
                                             13 COMMON     1     1      0
                                              8 BANK0      5     2      3
                       _PWM_Max_Duty (ARG)
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     618
                                              9 COMMON     4     4      0
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     618
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   _PWM1_Stop
   _PWM2_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM2_Init
     ___aldiv
   _PWM2_Start
   _PWM2_Stop
   ___awdiv
   ___awtoft
     _PWM_Max_Duty (ARG)
       ___aldiv
     ___awdiv (ARG)
     ___ftpack (ARG)
   ___ftadd
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftge
   ___ftmul
     _PWM_Max_Duty (ARG)
       ___aldiv
     ___awtoft (ARG)
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftadd (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___ftneg
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
   ___fttol
     _PWM_Max_Duty (ARG)
       ___aldiv
     ___awtoft (ARG)
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     44      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      27       7       48.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7D      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jan 05 16:59:35 2019

            __CFG_CP$OFF 0000              main@LastOut 00B3             ___awdiv@sign 0076  
            main@LineOut 00B5             ___ftadd@exp1 003F             ___ftadd@exp2 003E  
            __CFG_LVP$ON 0000             ___ftadd@sign 003D                      l111 071E  
                    l114 077C                      l256 0097                      l370 0EEC  
                    l362 0ECF                      l453 0FE6                      l369 0EE4  
                    l393 0347                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _RB4 0034  
                    _RB5 0035                      _RD1 0041                      _RB6 0036  
                    _RD2 0042                      _RB7 0037                      _RD3 0043  
                    _RD4 0044                      _PR2 0092             __CFG_CPD$OFF 0000  
           __CFG_FOSC$HS 0000             ___ftdiv@cntr 002A             ___ftdiv@sign 002F  
                   l1211 010B                     l1203 00F0                     l1301 0249  
                   l1207 00FD                     l1151 0EA8                     l1161 0ED4  
                   l1153 0EB4                     l1313 0271                     l1163 0EDE  
                   l1155 0EB9                     l1147 0EA1                     l1227 0D1F  
                   l1243 0142                     l1237 012C                     l1309 0261  
                   l1413 0DED                     l1501 0359                     l1431 0E0E  
                   l1193 00B8                     l1185 00A8                     l1265 01A6  
                   l1257 0187                     l1361 0FF7                     l1329 0F8C  
                   l1441 0E2F                     l1505 036B                     l1195 00C8  
                   l1355 0FDB                     l1347 0FBE                     l1419 0DF8  
                   l1515 038E                     l1523 0E63                     l1611 0473  
                   l1603 0460                     l1285 01FA                     l1357 0FE9  
                   l1349 0FCE                     l1445 0E37                     l1437 0E24  
                   l1429 0E00                     l1621 048E                     l1279 01E4  
                   l1455 02C8                     l1527 0E8A                     l1297 0239  
                   l1385 0F65                     l1465 02DE                     l1395 0078  
                   l1483 030D                     l1459 02CF                     l1643 051F  
                   l1563 03E3                     l1485 0319                     l1477 02F8  
                   l1661 0756                     l1653 068A                     l1637 04C8  
                   l1629 04AB                     l1495 0337                     l1487 031E  
                   l1497 0343                     l1489 0322                     l1657 0739  
                   l1585 0432                     l1577 0415                     l1595 044D  
                   u1315 0ED7                     u2115 030E                     u1405 00BC  
                   u1425 00CA                     u2145 0323                     u2241 0E56  
                   u2242 0E57                     u1435 00DF                     u1355 0EF3  
                   u1275 0EAD                     u1515 0154                     u2243 0E5C  
                   u2244 0E5D                     u1445 00F1                     u1525 0166  
                   u1605 0218                     u2085 02F9                     u2261 0E7D  
                   u2262 0E7E                     u1295 0EC8                     u1535 0188  
                   u2175 0338                     u2263 0E83                     u2264 0E84  
                   u1545 0199                     u1475 0D43                     u1555 01A7  
                   u1635 024A                     u1645 0252                     u1725 0F93  
                   u1815 0D70                     u1825 0D79                     u1850 0F62  
                   u1595 0206                     u1755 0FBF                     u1835 0DAF  
                   u1685 0272                     u1845 0DB8                     u1925 0E03  
                   u1870 0075                     u1695 027A                     u1785 0FDD  
                   u1945 0E0F                     u2497 078C                     u1955 0E1B  
                   u1965 0E25             _PWM_Max_Duty 0D38             __CFG_WRT$OFF 0000  
                   _main 03A8                     _freq 0064             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     btemp 007E                     start 0000  
           ___ftmul@cntr 004E             ___ftmul@sign 004F             ___fttol@exp1 005D  
           ___fttol@lval 0059          __end_of___aldiv 0114                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC                    _CCP2X 00ED  
                  _CCP2Y 00EC          __end_of___awdiv 0E3C          __end_of___ftadd 03A8  
          __CFG_WDTE$OFF 0000          __end_of___ftdiv 01CC          __end_of___ftneg 0D08  
        __end_of___ftmul 029F          ___awdiv@divisor 0070          __end_of___fttol 1000  
        ___awdiv@counter 0075                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088            __CFG_PWRTE$ON 0000       __size_of_PWM1_Init 003F  
     __size_of_PWM1_Duty 006D              ?_PWM1_Start 0070       __size_of_PWM2_Init 003F  
     __size_of_PWM2_Duty 006D              ?_PWM2_Start 0070            ___awtoft@sign 007D  
     __size_of_PWM1_Stop 0005       __size_of_PWM2_Stop 0005            ___ftpack@sign 0074  
                  main@n 00C5           __CFG_BOREN$OFF 0000             main@position 00A0  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0062            ___fttol@sign1 0058  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _CCPR1L 0015                   _CCPR2L 001B  
       ___awdiv@dividend 0072         __end_of___awtoft 0D38         __end_of___ftpack 0F05  
       __end_of___lwtoft 0018                   _TMR2ON 0092                   _TRISC1 0439  
                 _TRISC2 043A            main@lasterror 00A3        __end_of_PWM1_Init 0DA4  
                 ___ftge 0E3C        __end_of_PWM1_Duty 0F72        __end_of_PWM2_Init 0DE3  
      __end_of_PWM2_Duty 0085                ??___aldiv 0078        __end_of_PWM1_Stop 0CF0  
      __end_of_PWM2_Stop 0CF5                ??___awdiv 0074                ??___ftadd 0039  
    __size_of_PWM1_Start 0009                ??___ftdiv 0026                ??___ftneg 007C  
    __size_of_PWM2_Start 000B                ??___ftmul 0046                ??___fttol 0054  
       ___awdiv@quotient 0077                   main@Kd 00A9                   main@Kp 00A6  
  ___ftmul@f3_as_product 004B  __end_of__initialization 07FC               ___ftadd@f1 0033  
             ___ftadd@f2 0036               ___ftge@ff1 0070               ___ftge@ff2 0073  
             ___ftdiv@f1 0023               ___ftdiv@f2 0020               ___ftdiv@f3 002B  
             ___ftneg@f1 0030               ___awtoft@c 0028               ___ftmul@f1 0040  
             ___ftmul@f2 0043               ___fttol@f1 0050           __pcstackCOMMON 0070  
             ___lwtoft@c 0078           main@adjustment 00BA               __pmaintext 03A8  
                ?___ftge 0070                ?___awtoft 0028                ?___ftpack 0070  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?___lwtoft 0078  
           ??_PWM1_Start 0070             ??_PWM2_Start 0070                  ___aldiv 0085  
        __size_of___ftge 005D                  ___awdiv 0DE3                  ___ftadd 029F  
                ___ftdiv 0114                  ___ftneg 0CFE                  ___ftmul 01CC  
                ___fttol 0F72       __end_of_PWM1_Start 0CFE       __end_of_PWM2_Start 0D13  
             ??___awtoft 002B               ??___ftpack 0075                  __ptext1 0CFE  
                __ptext2 0E3C                  __ptext3 029F                  __ptext4 0DE3  
                __ptext5 0CF0                  __ptext6 0D08                  __ptext7 0DA4  
                __ptext8 0018                  __ptext9 0CEB               ??___lwtoft 007B  
       ___aldiv@dividend 0074                  main@sum 00C3     end_of_initialization 07FC  
       ___aldiv@quotient 0022                _PWM1_Init 0D65                _PWM1_Duty 0F05  
              _PWM2_Init 0DA4                _PWM2_Duty 0018                _PWM1_Stop 0CEB  
              _PWM2_Stop 0CF0               main@Lspeed 00BD               main@Rspeed 00C0  
            ___ftdiv@exp 002E              ___ftmul@exp 004A           __end_of___ftge 0E99  
             ?_PWM1_Init 0026               ?_PWM1_Duty 005E               ?_PWM2_Init 0026  
             ?_PWM2_Duty 005E               ?_PWM1_Stop 0070               ?_PWM2_Stop 0070  
    start_initialization 07FC            ?_PWM_Max_Duty 0026                 ??___ftge 0076  
      __size_of___awtoft 0025        __size_of___ftpack 006C                ___latbits 0002  
      __size_of___lwtoft 0014            __pcstackBANK0 0020            __pcstackBANK1 00A0  
         ??_PWM_Max_Duty 0079                __pnvBANK0 0064                 ?___aldiv 0070  
               ?___awdiv 0070                 ?___ftadd 0033                 ?___ftdiv 0020  
               ?___ftneg 0030                 ?___ftmul 0040                 ?___fttol 0050  
            ??_PWM1_Init 0079              ??_PWM1_Duty 0060              ??_PWM2_Init 0079  
            ??_PWM2_Duty 0060              ??_PWM1_Stop 0070              ??_PWM2_Stop 0070  
        ___aldiv@divisor 0070          ___aldiv@counter 0020            PWM1_Duty@duty 005E  
          PWM2_Duty@duty 005E                main@error 00B7         __size_of___aldiv 008F  
   __end_of_PWM_Max_Duty 0D65         __size_of___awdiv 0059         __size_of___ftadd 0109  
       __size_of___ftdiv 00B8         __size_of___ftneg 000A         __size_of___ftmul 00D3  
       __size_of___fttol 008E                 ___awtoft 0D13                 ___ftpack 0E99  
               ___lwtoft 0004                 _main$494 00AC                 _main$495 00AF  
               _main$496 00B1                 __ptext10 0CF5                 __ptext11 0D65  
               __ptext20 0085                 __ptext12 0F05                 __ptext13 0004  
               __ptext14 0F72                 __ptext15 01CC                 __ptext16 0114  
               __ptext17 0D13                 __ptext18 0E99                 __ptext19 0D38  
          __size_of_main 0454             PWM1_Init@fre 0026             PWM2_Init@fre 0026  
           ___aldiv@sign 0021               _PWM1_Start 0CF5               _PWM2_Start 0D08  
  __size_of_PWM_Max_Duty 002D  
