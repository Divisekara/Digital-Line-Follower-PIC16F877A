Version 3.2 HI-TECH Software Intermediate Code
"1814 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877a.h
[v _PR2 `Vuc ~T0 @X0 0 e@146 ]
"2423
[v _CCP1X `Vb ~T0 @X0 0 e@189 ]
"2425
[v _CCP1Y `Vb ~T0 @X0 0 e@188 ]
"890
[v _CCPR1L `Vuc ~T0 @X0 0 e@21 ]
"2439
[v _CCP2X `Vb ~T0 @X0 0 e@237 ]
"2441
[v _CCP2Y `Vb ~T0 @X0 0 e@236 ]
"1078
[v _CCPR2L `Vuc ~T0 @X0 0 e@27 ]
"2421
[v _CCP1M3 `Vb ~T0 @X0 0 e@187 ]
"2419
[v _CCP1M2 `Vb ~T0 @X0 0 e@186 ]
"2723
[v _TMR2ON `Vb ~T0 @X0 0 e@146 ]
"2765
[v _TRISC2 `Vb ~T0 @X0 0 e@1082 ]
"2437
[v _CCP2M3 `Vb ~T0 @X0 0 e@235 ]
"2435
[v _CCP2M2 `Vb ~T0 @X0 0 e@234 ]
"2703
[v _T2CKPS0 `Vb ~T0 @X0 0 e@144 ]
"2705
[v _T2CKPS1 `Vb ~T0 @X0 0 e@145 ]
"2763
[v _TRISC1 `Vb ~T0 @X0 0 e@1081 ]
[p mainexit ]
"1435
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1497
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1373
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"2577
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"2575
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"2573
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"2571
[v _RB0 `Vb ~T0 @X0 0 e@48 ]
"2635
[v _RD7 `Vb ~T0 @X0 0 e@71 ]
"2633
[v _RD6 `Vb ~T0 @X0 0 e@70 ]
"2631
[v _RD5 `Vb ~T0 @X0 0 e@69 ]
"2621
[v _RD0 `Vb ~T0 @X0 0 e@64 ]
"2623
[v _RD1 `Vb ~T0 @X0 0 e@65 ]
"2625
[v _RD2 `Vb ~T0 @X0 0 e@66 ]
"2627
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
[v F1089 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic.h
[v __delay `JF1089 ~T0 @X0 0 e ]
[p i __delay ]
"17 maincode.c
[p x FOSC=HS ]
"18
[p x WDTE=OFF ]
"19
[p x PWRTE=ON ]
"20
[p x BOREN=OFF ]
"21
[p x LVP=ON ]
"22
[p x CPD=OFF ]
"23
[p x WRT=OFF ]
"24
[p x CP=OFF ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f877a.h: 50: extern volatile unsigned char INDF @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f877a.h
[; ;pic16f877a.h: 52: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f877a.h: 57: extern volatile unsigned char TMR0 @ 0x001;
"59
[; ;pic16f877a.h: 59: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f877a.h: 64: extern volatile unsigned char PCL @ 0x002;
"66
[; ;pic16f877a.h: 66: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f877a.h: 71: extern volatile unsigned char STATUS @ 0x003;
"73
[; ;pic16f877a.h: 73: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f877a.h: 76: typedef union {
[; ;pic16f877a.h: 77: struct {
[; ;pic16f877a.h: 78: unsigned C :1;
[; ;pic16f877a.h: 79: unsigned DC :1;
[; ;pic16f877a.h: 80: unsigned Z :1;
[; ;pic16f877a.h: 81: unsigned nPD :1;
[; ;pic16f877a.h: 82: unsigned nTO :1;
[; ;pic16f877a.h: 83: unsigned RP :2;
[; ;pic16f877a.h: 84: unsigned IRP :1;
[; ;pic16f877a.h: 85: };
[; ;pic16f877a.h: 86: struct {
[; ;pic16f877a.h: 87: unsigned :5;
[; ;pic16f877a.h: 88: unsigned RP0 :1;
[; ;pic16f877a.h: 89: unsigned RP1 :1;
[; ;pic16f877a.h: 90: };
[; ;pic16f877a.h: 91: struct {
[; ;pic16f877a.h: 92: unsigned CARRY :1;
[; ;pic16f877a.h: 93: unsigned :1;
[; ;pic16f877a.h: 94: unsigned ZERO :1;
[; ;pic16f877a.h: 95: };
[; ;pic16f877a.h: 96: } STATUSbits_t;
[; ;pic16f877a.h: 97: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f877a.h: 157: extern volatile unsigned char FSR @ 0x004;
"159
[; ;pic16f877a.h: 159: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f877a.h: 164: extern volatile unsigned char PORTA @ 0x005;
"166
[; ;pic16f877a.h: 166: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f877a.h: 169: typedef union {
[; ;pic16f877a.h: 170: struct {
[; ;pic16f877a.h: 171: unsigned RA0 :1;
[; ;pic16f877a.h: 172: unsigned RA1 :1;
[; ;pic16f877a.h: 173: unsigned RA2 :1;
[; ;pic16f877a.h: 174: unsigned RA3 :1;
[; ;pic16f877a.h: 175: unsigned RA4 :1;
[; ;pic16f877a.h: 176: unsigned RA5 :1;
[; ;pic16f877a.h: 177: };
[; ;pic16f877a.h: 178: } PORTAbits_t;
[; ;pic16f877a.h: 179: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f877a.h: 214: extern volatile unsigned char PORTB @ 0x006;
"216
[; ;pic16f877a.h: 216: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f877a.h: 219: typedef union {
[; ;pic16f877a.h: 220: struct {
[; ;pic16f877a.h: 221: unsigned RB0 :1;
[; ;pic16f877a.h: 222: unsigned RB1 :1;
[; ;pic16f877a.h: 223: unsigned RB2 :1;
[; ;pic16f877a.h: 224: unsigned RB3 :1;
[; ;pic16f877a.h: 225: unsigned RB4 :1;
[; ;pic16f877a.h: 226: unsigned RB5 :1;
[; ;pic16f877a.h: 227: unsigned RB6 :1;
[; ;pic16f877a.h: 228: unsigned RB7 :1;
[; ;pic16f877a.h: 229: };
[; ;pic16f877a.h: 230: } PORTBbits_t;
[; ;pic16f877a.h: 231: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f877a.h: 276: extern volatile unsigned char PORTC @ 0x007;
"278
[; ;pic16f877a.h: 278: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f877a.h: 281: typedef union {
[; ;pic16f877a.h: 282: struct {
[; ;pic16f877a.h: 283: unsigned RC0 :1;
[; ;pic16f877a.h: 284: unsigned RC1 :1;
[; ;pic16f877a.h: 285: unsigned RC2 :1;
[; ;pic16f877a.h: 286: unsigned RC3 :1;
[; ;pic16f877a.h: 287: unsigned RC4 :1;
[; ;pic16f877a.h: 288: unsigned RC5 :1;
[; ;pic16f877a.h: 289: unsigned RC6 :1;
[; ;pic16f877a.h: 290: unsigned RC7 :1;
[; ;pic16f877a.h: 291: };
[; ;pic16f877a.h: 292: } PORTCbits_t;
[; ;pic16f877a.h: 293: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f877a.h: 338: extern volatile unsigned char PORTD @ 0x008;
"340
[; ;pic16f877a.h: 340: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f877a.h: 343: typedef union {
[; ;pic16f877a.h: 344: struct {
[; ;pic16f877a.h: 345: unsigned RD0 :1;
[; ;pic16f877a.h: 346: unsigned RD1 :1;
[; ;pic16f877a.h: 347: unsigned RD2 :1;
[; ;pic16f877a.h: 348: unsigned RD3 :1;
[; ;pic16f877a.h: 349: unsigned RD4 :1;
[; ;pic16f877a.h: 350: unsigned RD5 :1;
[; ;pic16f877a.h: 351: unsigned RD6 :1;
[; ;pic16f877a.h: 352: unsigned RD7 :1;
[; ;pic16f877a.h: 353: };
[; ;pic16f877a.h: 354: } PORTDbits_t;
[; ;pic16f877a.h: 355: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f877a.h: 400: extern volatile unsigned char PORTE @ 0x009;
"402
[; ;pic16f877a.h: 402: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f877a.h: 405: typedef union {
[; ;pic16f877a.h: 406: struct {
[; ;pic16f877a.h: 407: unsigned RE0 :1;
[; ;pic16f877a.h: 408: unsigned RE1 :1;
[; ;pic16f877a.h: 409: unsigned RE2 :1;
[; ;pic16f877a.h: 410: };
[; ;pic16f877a.h: 411: } PORTEbits_t;
[; ;pic16f877a.h: 412: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f877a.h: 432: extern volatile unsigned char PCLATH @ 0x00A;
"434
[; ;pic16f877a.h: 434: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f877a.h: 437: typedef union {
[; ;pic16f877a.h: 438: struct {
[; ;pic16f877a.h: 439: unsigned PCLATH :5;
[; ;pic16f877a.h: 440: };
[; ;pic16f877a.h: 441: } PCLATHbits_t;
[; ;pic16f877a.h: 442: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f877a.h: 452: extern volatile unsigned char INTCON @ 0x00B;
"454
[; ;pic16f877a.h: 454: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f877a.h: 457: typedef union {
[; ;pic16f877a.h: 458: struct {
[; ;pic16f877a.h: 459: unsigned RBIF :1;
[; ;pic16f877a.h: 460: unsigned INTF :1;
[; ;pic16f877a.h: 461: unsigned TMR0IF :1;
[; ;pic16f877a.h: 462: unsigned RBIE :1;
[; ;pic16f877a.h: 463: unsigned INTE :1;
[; ;pic16f877a.h: 464: unsigned TMR0IE :1;
[; ;pic16f877a.h: 465: unsigned PEIE :1;
[; ;pic16f877a.h: 466: unsigned GIE :1;
[; ;pic16f877a.h: 467: };
[; ;pic16f877a.h: 468: struct {
[; ;pic16f877a.h: 469: unsigned :2;
[; ;pic16f877a.h: 470: unsigned T0IF :1;
[; ;pic16f877a.h: 471: unsigned :2;
[; ;pic16f877a.h: 472: unsigned T0IE :1;
[; ;pic16f877a.h: 473: };
[; ;pic16f877a.h: 474: } INTCONbits_t;
[; ;pic16f877a.h: 475: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f877a.h: 530: extern volatile unsigned char PIR1 @ 0x00C;
"532
[; ;pic16f877a.h: 532: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f877a.h: 535: typedef union {
[; ;pic16f877a.h: 536: struct {
[; ;pic16f877a.h: 537: unsigned TMR1IF :1;
[; ;pic16f877a.h: 538: unsigned TMR2IF :1;
[; ;pic16f877a.h: 539: unsigned CCP1IF :1;
[; ;pic16f877a.h: 540: unsigned SSPIF :1;
[; ;pic16f877a.h: 541: unsigned TXIF :1;
[; ;pic16f877a.h: 542: unsigned RCIF :1;
[; ;pic16f877a.h: 543: unsigned ADIF :1;
[; ;pic16f877a.h: 544: unsigned PSPIF :1;
[; ;pic16f877a.h: 545: };
[; ;pic16f877a.h: 546: } PIR1bits_t;
[; ;pic16f877a.h: 547: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f877a.h: 592: extern volatile unsigned char PIR2 @ 0x00D;
"594
[; ;pic16f877a.h: 594: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f877a.h: 597: typedef union {
[; ;pic16f877a.h: 598: struct {
[; ;pic16f877a.h: 599: unsigned CCP2IF :1;
[; ;pic16f877a.h: 600: unsigned :2;
[; ;pic16f877a.h: 601: unsigned BCLIF :1;
[; ;pic16f877a.h: 602: unsigned EEIF :1;
[; ;pic16f877a.h: 603: unsigned :1;
[; ;pic16f877a.h: 604: unsigned CMIF :1;
[; ;pic16f877a.h: 605: };
[; ;pic16f877a.h: 606: } PIR2bits_t;
[; ;pic16f877a.h: 607: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f877a.h: 632: extern volatile unsigned short TMR1 @ 0x00E;
"634
[; ;pic16f877a.h: 634: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f877a.h: 639: extern volatile unsigned char TMR1L @ 0x00E;
"641
[; ;pic16f877a.h: 641: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f877a.h: 646: extern volatile unsigned char TMR1H @ 0x00F;
"648
[; ;pic16f877a.h: 648: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f877a.h: 653: extern volatile unsigned char T1CON @ 0x010;
"655
[; ;pic16f877a.h: 655: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f877a.h: 658: typedef union {
[; ;pic16f877a.h: 659: struct {
[; ;pic16f877a.h: 660: unsigned TMR1ON :1;
[; ;pic16f877a.h: 661: unsigned TMR1CS :1;
[; ;pic16f877a.h: 662: unsigned nT1SYNC :1;
[; ;pic16f877a.h: 663: unsigned T1OSCEN :1;
[; ;pic16f877a.h: 664: unsigned T1CKPS :2;
[; ;pic16f877a.h: 665: };
[; ;pic16f877a.h: 666: struct {
[; ;pic16f877a.h: 667: unsigned :2;
[; ;pic16f877a.h: 668: unsigned T1SYNC :1;
[; ;pic16f877a.h: 669: unsigned :1;
[; ;pic16f877a.h: 670: unsigned T1CKPS0 :1;
[; ;pic16f877a.h: 671: unsigned T1CKPS1 :1;
[; ;pic16f877a.h: 672: };
[; ;pic16f877a.h: 673: struct {
[; ;pic16f877a.h: 674: unsigned :2;
[; ;pic16f877a.h: 675: unsigned T1INSYNC :1;
[; ;pic16f877a.h: 676: };
[; ;pic16f877a.h: 677: } T1CONbits_t;
[; ;pic16f877a.h: 678: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f877a.h: 728: extern volatile unsigned char TMR2 @ 0x011;
"730
[; ;pic16f877a.h: 730: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f877a.h: 735: extern volatile unsigned char T2CON @ 0x012;
"737
[; ;pic16f877a.h: 737: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f877a.h: 740: typedef union {
[; ;pic16f877a.h: 741: struct {
[; ;pic16f877a.h: 742: unsigned T2CKPS :2;
[; ;pic16f877a.h: 743: unsigned TMR2ON :1;
[; ;pic16f877a.h: 744: unsigned TOUTPS :4;
[; ;pic16f877a.h: 745: };
[; ;pic16f877a.h: 746: struct {
[; ;pic16f877a.h: 747: unsigned T2CKPS0 :1;
[; ;pic16f877a.h: 748: unsigned T2CKPS1 :1;
[; ;pic16f877a.h: 749: unsigned :1;
[; ;pic16f877a.h: 750: unsigned TOUTPS0 :1;
[; ;pic16f877a.h: 751: unsigned TOUTPS1 :1;
[; ;pic16f877a.h: 752: unsigned TOUTPS2 :1;
[; ;pic16f877a.h: 753: unsigned TOUTPS3 :1;
[; ;pic16f877a.h: 754: };
[; ;pic16f877a.h: 755: } T2CONbits_t;
[; ;pic16f877a.h: 756: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f877a.h: 806: extern volatile unsigned char SSPBUF @ 0x013;
"808
[; ;pic16f877a.h: 808: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f877a.h: 813: extern volatile unsigned char SSPCON @ 0x014;
"815
[; ;pic16f877a.h: 815: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f877a.h: 818: typedef union {
[; ;pic16f877a.h: 819: struct {
[; ;pic16f877a.h: 820: unsigned SSPM :4;
[; ;pic16f877a.h: 821: unsigned CKP :1;
[; ;pic16f877a.h: 822: unsigned SSPEN :1;
[; ;pic16f877a.h: 823: unsigned SSPOV :1;
[; ;pic16f877a.h: 824: unsigned WCOL :1;
[; ;pic16f877a.h: 825: };
[; ;pic16f877a.h: 826: struct {
[; ;pic16f877a.h: 827: unsigned SSPM0 :1;
[; ;pic16f877a.h: 828: unsigned SSPM1 :1;
[; ;pic16f877a.h: 829: unsigned SSPM2 :1;
[; ;pic16f877a.h: 830: unsigned SSPM3 :1;
[; ;pic16f877a.h: 831: };
[; ;pic16f877a.h: 832: } SSPCONbits_t;
[; ;pic16f877a.h: 833: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f877a.h: 883: extern volatile unsigned short CCPR1 @ 0x015;
"885
[; ;pic16f877a.h: 885: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f877a.h: 890: extern volatile unsigned char CCPR1L @ 0x015;
"892
[; ;pic16f877a.h: 892: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f877a.h: 897: extern volatile unsigned char CCPR1H @ 0x016;
"899
[; ;pic16f877a.h: 899: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f877a.h: 904: extern volatile unsigned char CCP1CON @ 0x017;
"906
[; ;pic16f877a.h: 906: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f877a.h: 909: typedef union {
[; ;pic16f877a.h: 910: struct {
[; ;pic16f877a.h: 911: unsigned CCP1M :4;
[; ;pic16f877a.h: 912: unsigned CCP1Y :1;
[; ;pic16f877a.h: 913: unsigned CCP1X :1;
[; ;pic16f877a.h: 914: };
[; ;pic16f877a.h: 915: struct {
[; ;pic16f877a.h: 916: unsigned CCP1M0 :1;
[; ;pic16f877a.h: 917: unsigned CCP1M1 :1;
[; ;pic16f877a.h: 918: unsigned CCP1M2 :1;
[; ;pic16f877a.h: 919: unsigned CCP1M3 :1;
[; ;pic16f877a.h: 920: };
[; ;pic16f877a.h: 921: } CCP1CONbits_t;
[; ;pic16f877a.h: 922: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f877a.h: 962: extern volatile unsigned char RCSTA @ 0x018;
"964
[; ;pic16f877a.h: 964: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f877a.h: 967: typedef union {
[; ;pic16f877a.h: 968: struct {
[; ;pic16f877a.h: 969: unsigned RX9D :1;
[; ;pic16f877a.h: 970: unsigned OERR :1;
[; ;pic16f877a.h: 971: unsigned FERR :1;
[; ;pic16f877a.h: 972: unsigned ADDEN :1;
[; ;pic16f877a.h: 973: unsigned CREN :1;
[; ;pic16f877a.h: 974: unsigned SREN :1;
[; ;pic16f877a.h: 975: unsigned RX9 :1;
[; ;pic16f877a.h: 976: unsigned SPEN :1;
[; ;pic16f877a.h: 977: };
[; ;pic16f877a.h: 978: struct {
[; ;pic16f877a.h: 979: unsigned RCD8 :1;
[; ;pic16f877a.h: 980: unsigned :5;
[; ;pic16f877a.h: 981: unsigned RC9 :1;
[; ;pic16f877a.h: 982: };
[; ;pic16f877a.h: 983: struct {
[; ;pic16f877a.h: 984: unsigned :6;
[; ;pic16f877a.h: 985: unsigned nRC8 :1;
[; ;pic16f877a.h: 986: };
[; ;pic16f877a.h: 987: struct {
[; ;pic16f877a.h: 988: unsigned :6;
[; ;pic16f877a.h: 989: unsigned RC8_9 :1;
[; ;pic16f877a.h: 990: };
[; ;pic16f877a.h: 991: } RCSTAbits_t;
[; ;pic16f877a.h: 992: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f877a.h: 1057: extern volatile unsigned char TXREG @ 0x019;
"1059
[; ;pic16f877a.h: 1059: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f877a.h: 1064: extern volatile unsigned char RCREG @ 0x01A;
"1066
[; ;pic16f877a.h: 1066: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f877a.h: 1071: extern volatile unsigned short CCPR2 @ 0x01B;
"1073
[; ;pic16f877a.h: 1073: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f877a.h: 1078: extern volatile unsigned char CCPR2L @ 0x01B;
"1080
[; ;pic16f877a.h: 1080: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f877a.h: 1085: extern volatile unsigned char CCPR2H @ 0x01C;
"1087
[; ;pic16f877a.h: 1087: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f877a.h: 1092: extern volatile unsigned char CCP2CON @ 0x01D;
"1094
[; ;pic16f877a.h: 1094: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f877a.h: 1097: typedef union {
[; ;pic16f877a.h: 1098: struct {
[; ;pic16f877a.h: 1099: unsigned CCP2M :4;
[; ;pic16f877a.h: 1100: unsigned CCP2Y :1;
[; ;pic16f877a.h: 1101: unsigned CCP2X :1;
[; ;pic16f877a.h: 1102: };
[; ;pic16f877a.h: 1103: struct {
[; ;pic16f877a.h: 1104: unsigned CCP2M0 :1;
[; ;pic16f877a.h: 1105: unsigned CCP2M1 :1;
[; ;pic16f877a.h: 1106: unsigned CCP2M2 :1;
[; ;pic16f877a.h: 1107: unsigned CCP2M3 :1;
[; ;pic16f877a.h: 1108: };
[; ;pic16f877a.h: 1109: } CCP2CONbits_t;
[; ;pic16f877a.h: 1110: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f877a.h: 1150: extern volatile unsigned char ADRESH @ 0x01E;
"1152
[; ;pic16f877a.h: 1152: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f877a.h: 1157: extern volatile unsigned char ADCON0 @ 0x01F;
"1159
[; ;pic16f877a.h: 1159: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f877a.h: 1162: typedef union {
[; ;pic16f877a.h: 1163: struct {
[; ;pic16f877a.h: 1164: unsigned ADON :1;
[; ;pic16f877a.h: 1165: unsigned :1;
[; ;pic16f877a.h: 1166: unsigned GO_nDONE :1;
[; ;pic16f877a.h: 1167: unsigned CHS :3;
[; ;pic16f877a.h: 1168: unsigned ADCS :2;
[; ;pic16f877a.h: 1169: };
[; ;pic16f877a.h: 1170: struct {
[; ;pic16f877a.h: 1171: unsigned :2;
[; ;pic16f877a.h: 1172: unsigned GO :1;
[; ;pic16f877a.h: 1173: unsigned CHS0 :1;
[; ;pic16f877a.h: 1174: unsigned CHS1 :1;
[; ;pic16f877a.h: 1175: unsigned CHS2 :1;
[; ;pic16f877a.h: 1176: unsigned ADCS0 :1;
[; ;pic16f877a.h: 1177: unsigned ADCS1 :1;
[; ;pic16f877a.h: 1178: };
[; ;pic16f877a.h: 1179: struct {
[; ;pic16f877a.h: 1180: unsigned :2;
[; ;pic16f877a.h: 1181: unsigned nDONE :1;
[; ;pic16f877a.h: 1182: };
[; ;pic16f877a.h: 1183: struct {
[; ;pic16f877a.h: 1184: unsigned :2;
[; ;pic16f877a.h: 1185: unsigned GO_DONE :1;
[; ;pic16f877a.h: 1186: };
[; ;pic16f877a.h: 1187: } ADCON0bits_t;
[; ;pic16f877a.h: 1188: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f877a.h: 1253: extern volatile unsigned char OPTION_REG @ 0x081;
"1255
[; ;pic16f877a.h: 1255: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f877a.h: 1258: typedef union {
[; ;pic16f877a.h: 1259: struct {
[; ;pic16f877a.h: 1260: unsigned PS :3;
[; ;pic16f877a.h: 1261: unsigned PSA :1;
[; ;pic16f877a.h: 1262: unsigned T0SE :1;
[; ;pic16f877a.h: 1263: unsigned T0CS :1;
[; ;pic16f877a.h: 1264: unsigned INTEDG :1;
[; ;pic16f877a.h: 1265: unsigned nRBPU :1;
[; ;pic16f877a.h: 1266: };
[; ;pic16f877a.h: 1267: struct {
[; ;pic16f877a.h: 1268: unsigned PS0 :1;
[; ;pic16f877a.h: 1269: unsigned PS1 :1;
[; ;pic16f877a.h: 1270: unsigned PS2 :1;
[; ;pic16f877a.h: 1271: };
[; ;pic16f877a.h: 1272: } OPTION_REGbits_t;
[; ;pic16f877a.h: 1273: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f877a.h: 1323: extern volatile unsigned char TRISA @ 0x085;
"1325
[; ;pic16f877a.h: 1325: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f877a.h: 1328: typedef union {
[; ;pic16f877a.h: 1329: struct {
[; ;pic16f877a.h: 1330: unsigned TRISA0 :1;
[; ;pic16f877a.h: 1331: unsigned TRISA1 :1;
[; ;pic16f877a.h: 1332: unsigned TRISA2 :1;
[; ;pic16f877a.h: 1333: unsigned TRISA3 :1;
[; ;pic16f877a.h: 1334: unsigned TRISA4 :1;
[; ;pic16f877a.h: 1335: unsigned TRISA5 :1;
[; ;pic16f877a.h: 1336: };
[; ;pic16f877a.h: 1337: } TRISAbits_t;
[; ;pic16f877a.h: 1338: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f877a.h: 1373: extern volatile unsigned char TRISB @ 0x086;
"1375
[; ;pic16f877a.h: 1375: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f877a.h: 1378: typedef union {
[; ;pic16f877a.h: 1379: struct {
[; ;pic16f877a.h: 1380: unsigned TRISB0 :1;
[; ;pic16f877a.h: 1381: unsigned TRISB1 :1;
[; ;pic16f877a.h: 1382: unsigned TRISB2 :1;
[; ;pic16f877a.h: 1383: unsigned TRISB3 :1;
[; ;pic16f877a.h: 1384: unsigned TRISB4 :1;
[; ;pic16f877a.h: 1385: unsigned TRISB5 :1;
[; ;pic16f877a.h: 1386: unsigned TRISB6 :1;
[; ;pic16f877a.h: 1387: unsigned TRISB7 :1;
[; ;pic16f877a.h: 1388: };
[; ;pic16f877a.h: 1389: } TRISBbits_t;
[; ;pic16f877a.h: 1390: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f877a.h: 1435: extern volatile unsigned char TRISC @ 0x087;
"1437
[; ;pic16f877a.h: 1437: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f877a.h: 1440: typedef union {
[; ;pic16f877a.h: 1441: struct {
[; ;pic16f877a.h: 1442: unsigned TRISC0 :1;
[; ;pic16f877a.h: 1443: unsigned TRISC1 :1;
[; ;pic16f877a.h: 1444: unsigned TRISC2 :1;
[; ;pic16f877a.h: 1445: unsigned TRISC3 :1;
[; ;pic16f877a.h: 1446: unsigned TRISC4 :1;
[; ;pic16f877a.h: 1447: unsigned TRISC5 :1;
[; ;pic16f877a.h: 1448: unsigned TRISC6 :1;
[; ;pic16f877a.h: 1449: unsigned TRISC7 :1;
[; ;pic16f877a.h: 1450: };
[; ;pic16f877a.h: 1451: } TRISCbits_t;
[; ;pic16f877a.h: 1452: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f877a.h: 1497: extern volatile unsigned char TRISD @ 0x088;
"1499
[; ;pic16f877a.h: 1499: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f877a.h: 1502: typedef union {
[; ;pic16f877a.h: 1503: struct {
[; ;pic16f877a.h: 1504: unsigned TRISD0 :1;
[; ;pic16f877a.h: 1505: unsigned TRISD1 :1;
[; ;pic16f877a.h: 1506: unsigned TRISD2 :1;
[; ;pic16f877a.h: 1507: unsigned TRISD3 :1;
[; ;pic16f877a.h: 1508: unsigned TRISD4 :1;
[; ;pic16f877a.h: 1509: unsigned TRISD5 :1;
[; ;pic16f877a.h: 1510: unsigned TRISD6 :1;
[; ;pic16f877a.h: 1511: unsigned TRISD7 :1;
[; ;pic16f877a.h: 1512: };
[; ;pic16f877a.h: 1513: } TRISDbits_t;
[; ;pic16f877a.h: 1514: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f877a.h: 1559: extern volatile unsigned char TRISE @ 0x089;
"1561
[; ;pic16f877a.h: 1561: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f877a.h: 1564: typedef union {
[; ;pic16f877a.h: 1565: struct {
[; ;pic16f877a.h: 1566: unsigned TRISE0 :1;
[; ;pic16f877a.h: 1567: unsigned TRISE1 :1;
[; ;pic16f877a.h: 1568: unsigned TRISE2 :1;
[; ;pic16f877a.h: 1569: unsigned :1;
[; ;pic16f877a.h: 1570: unsigned PSPMODE :1;
[; ;pic16f877a.h: 1571: unsigned IBOV :1;
[; ;pic16f877a.h: 1572: unsigned OBF :1;
[; ;pic16f877a.h: 1573: unsigned IBF :1;
[; ;pic16f877a.h: 1574: };
[; ;pic16f877a.h: 1575: } TRISEbits_t;
[; ;pic16f877a.h: 1576: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f877a.h: 1616: extern volatile unsigned char PIE1 @ 0x08C;
"1618
[; ;pic16f877a.h: 1618: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f877a.h: 1621: typedef union {
[; ;pic16f877a.h: 1622: struct {
[; ;pic16f877a.h: 1623: unsigned TMR1IE :1;
[; ;pic16f877a.h: 1624: unsigned TMR2IE :1;
[; ;pic16f877a.h: 1625: unsigned CCP1IE :1;
[; ;pic16f877a.h: 1626: unsigned SSPIE :1;
[; ;pic16f877a.h: 1627: unsigned TXIE :1;
[; ;pic16f877a.h: 1628: unsigned RCIE :1;
[; ;pic16f877a.h: 1629: unsigned ADIE :1;
[; ;pic16f877a.h: 1630: unsigned PSPIE :1;
[; ;pic16f877a.h: 1631: };
[; ;pic16f877a.h: 1632: } PIE1bits_t;
[; ;pic16f877a.h: 1633: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f877a.h: 1678: extern volatile unsigned char PIE2 @ 0x08D;
"1680
[; ;pic16f877a.h: 1680: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f877a.h: 1683: typedef union {
[; ;pic16f877a.h: 1684: struct {
[; ;pic16f877a.h: 1685: unsigned CCP2IE :1;
[; ;pic16f877a.h: 1686: unsigned :2;
[; ;pic16f877a.h: 1687: unsigned BCLIE :1;
[; ;pic16f877a.h: 1688: unsigned EEIE :1;
[; ;pic16f877a.h: 1689: unsigned :1;
[; ;pic16f877a.h: 1690: unsigned CMIE :1;
[; ;pic16f877a.h: 1691: };
[; ;pic16f877a.h: 1692: } PIE2bits_t;
[; ;pic16f877a.h: 1693: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f877a.h: 1718: extern volatile unsigned char PCON @ 0x08E;
"1720
[; ;pic16f877a.h: 1720: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f877a.h: 1723: typedef union {
[; ;pic16f877a.h: 1724: struct {
[; ;pic16f877a.h: 1725: unsigned nBOR :1;
[; ;pic16f877a.h: 1726: unsigned nPOR :1;
[; ;pic16f877a.h: 1727: };
[; ;pic16f877a.h: 1728: struct {
[; ;pic16f877a.h: 1729: unsigned nBO :1;
[; ;pic16f877a.h: 1730: };
[; ;pic16f877a.h: 1731: } PCONbits_t;
[; ;pic16f877a.h: 1732: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f877a.h: 1752: extern volatile unsigned char SSPCON2 @ 0x091;
"1754
[; ;pic16f877a.h: 1754: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f877a.h: 1757: typedef union {
[; ;pic16f877a.h: 1758: struct {
[; ;pic16f877a.h: 1759: unsigned SEN :1;
[; ;pic16f877a.h: 1760: unsigned RSEN :1;
[; ;pic16f877a.h: 1761: unsigned PEN :1;
[; ;pic16f877a.h: 1762: unsigned RCEN :1;
[; ;pic16f877a.h: 1763: unsigned ACKEN :1;
[; ;pic16f877a.h: 1764: unsigned ACKDT :1;
[; ;pic16f877a.h: 1765: unsigned ACKSTAT :1;
[; ;pic16f877a.h: 1766: unsigned GCEN :1;
[; ;pic16f877a.h: 1767: };
[; ;pic16f877a.h: 1768: } SSPCON2bits_t;
[; ;pic16f877a.h: 1769: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f877a.h: 1814: extern volatile unsigned char PR2 @ 0x092;
"1816
[; ;pic16f877a.h: 1816: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f877a.h: 1821: extern volatile unsigned char SSPADD @ 0x093;
"1823
[; ;pic16f877a.h: 1823: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f877a.h: 1828: extern volatile unsigned char SSPSTAT @ 0x094;
"1830
[; ;pic16f877a.h: 1830: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f877a.h: 1833: typedef union {
[; ;pic16f877a.h: 1834: struct {
[; ;pic16f877a.h: 1835: unsigned BF :1;
[; ;pic16f877a.h: 1836: unsigned UA :1;
[; ;pic16f877a.h: 1837: unsigned R_nW :1;
[; ;pic16f877a.h: 1838: unsigned S :1;
[; ;pic16f877a.h: 1839: unsigned P :1;
[; ;pic16f877a.h: 1840: unsigned D_nA :1;
[; ;pic16f877a.h: 1841: unsigned CKE :1;
[; ;pic16f877a.h: 1842: unsigned SMP :1;
[; ;pic16f877a.h: 1843: };
[; ;pic16f877a.h: 1844: struct {
[; ;pic16f877a.h: 1845: unsigned :2;
[; ;pic16f877a.h: 1846: unsigned R :1;
[; ;pic16f877a.h: 1847: unsigned :2;
[; ;pic16f877a.h: 1848: unsigned D :1;
[; ;pic16f877a.h: 1849: };
[; ;pic16f877a.h: 1850: struct {
[; ;pic16f877a.h: 1851: unsigned :2;
[; ;pic16f877a.h: 1852: unsigned I2C_READ :1;
[; ;pic16f877a.h: 1853: unsigned I2C_START :1;
[; ;pic16f877a.h: 1854: unsigned I2C_STOP :1;
[; ;pic16f877a.h: 1855: unsigned I2C_DATA :1;
[; ;pic16f877a.h: 1856: };
[; ;pic16f877a.h: 1857: struct {
[; ;pic16f877a.h: 1858: unsigned :2;
[; ;pic16f877a.h: 1859: unsigned nW :1;
[; ;pic16f877a.h: 1860: unsigned :2;
[; ;pic16f877a.h: 1861: unsigned nA :1;
[; ;pic16f877a.h: 1862: };
[; ;pic16f877a.h: 1863: struct {
[; ;pic16f877a.h: 1864: unsigned :2;
[; ;pic16f877a.h: 1865: unsigned nWRITE :1;
[; ;pic16f877a.h: 1866: unsigned :2;
[; ;pic16f877a.h: 1867: unsigned nADDRESS :1;
[; ;pic16f877a.h: 1868: };
[; ;pic16f877a.h: 1869: struct {
[; ;pic16f877a.h: 1870: unsigned :2;
[; ;pic16f877a.h: 1871: unsigned R_W :1;
[; ;pic16f877a.h: 1872: unsigned :2;
[; ;pic16f877a.h: 1873: unsigned D_A :1;
[; ;pic16f877a.h: 1874: };
[; ;pic16f877a.h: 1875: struct {
[; ;pic16f877a.h: 1876: unsigned :2;
[; ;pic16f877a.h: 1877: unsigned READ_WRITE :1;
[; ;pic16f877a.h: 1878: unsigned :2;
[; ;pic16f877a.h: 1879: unsigned DATA_ADDRESS :1;
[; ;pic16f877a.h: 1880: };
[; ;pic16f877a.h: 1881: } SSPSTATbits_t;
[; ;pic16f877a.h: 1882: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f877a.h: 1997: extern volatile unsigned char TXSTA @ 0x098;
"1999
[; ;pic16f877a.h: 1999: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f877a.h: 2002: typedef union {
[; ;pic16f877a.h: 2003: struct {
[; ;pic16f877a.h: 2004: unsigned TX9D :1;
[; ;pic16f877a.h: 2005: unsigned TRMT :1;
[; ;pic16f877a.h: 2006: unsigned BRGH :1;
[; ;pic16f877a.h: 2007: unsigned :1;
[; ;pic16f877a.h: 2008: unsigned SYNC :1;
[; ;pic16f877a.h: 2009: unsigned TXEN :1;
[; ;pic16f877a.h: 2010: unsigned TX9 :1;
[; ;pic16f877a.h: 2011: unsigned CSRC :1;
[; ;pic16f877a.h: 2012: };
[; ;pic16f877a.h: 2013: struct {
[; ;pic16f877a.h: 2014: unsigned TXD8 :1;
[; ;pic16f877a.h: 2015: unsigned :5;
[; ;pic16f877a.h: 2016: unsigned nTX8 :1;
[; ;pic16f877a.h: 2017: };
[; ;pic16f877a.h: 2018: struct {
[; ;pic16f877a.h: 2019: unsigned :6;
[; ;pic16f877a.h: 2020: unsigned TX8_9 :1;
[; ;pic16f877a.h: 2021: };
[; ;pic16f877a.h: 2022: } TXSTAbits_t;
[; ;pic16f877a.h: 2023: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f877a.h: 2078: extern volatile unsigned char SPBRG @ 0x099;
"2080
[; ;pic16f877a.h: 2080: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f877a.h: 2085: extern volatile unsigned char CMCON @ 0x09C;
"2087
[; ;pic16f877a.h: 2087: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f877a.h: 2090: typedef union {
[; ;pic16f877a.h: 2091: struct {
[; ;pic16f877a.h: 2092: unsigned CM :3;
[; ;pic16f877a.h: 2093: unsigned CIS :1;
[; ;pic16f877a.h: 2094: unsigned C1INV :1;
[; ;pic16f877a.h: 2095: unsigned C2INV :1;
[; ;pic16f877a.h: 2096: unsigned C1OUT :1;
[; ;pic16f877a.h: 2097: unsigned C2OUT :1;
[; ;pic16f877a.h: 2098: };
[; ;pic16f877a.h: 2099: struct {
[; ;pic16f877a.h: 2100: unsigned CM0 :1;
[; ;pic16f877a.h: 2101: unsigned CM1 :1;
[; ;pic16f877a.h: 2102: unsigned CM2 :1;
[; ;pic16f877a.h: 2103: };
[; ;pic16f877a.h: 2104: } CMCONbits_t;
[; ;pic16f877a.h: 2105: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f877a.h: 2155: extern volatile unsigned char CVRCON @ 0x09D;
"2157
[; ;pic16f877a.h: 2157: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f877a.h: 2160: typedef union {
[; ;pic16f877a.h: 2161: struct {
[; ;pic16f877a.h: 2162: unsigned CVR :4;
[; ;pic16f877a.h: 2163: unsigned :1;
[; ;pic16f877a.h: 2164: unsigned CVRR :1;
[; ;pic16f877a.h: 2165: unsigned CVROE :1;
[; ;pic16f877a.h: 2166: unsigned CVREN :1;
[; ;pic16f877a.h: 2167: };
[; ;pic16f877a.h: 2168: struct {
[; ;pic16f877a.h: 2169: unsigned CVR0 :1;
[; ;pic16f877a.h: 2170: unsigned CVR1 :1;
[; ;pic16f877a.h: 2171: unsigned CVR2 :1;
[; ;pic16f877a.h: 2172: unsigned CVR3 :1;
[; ;pic16f877a.h: 2173: };
[; ;pic16f877a.h: 2174: } CVRCONbits_t;
[; ;pic16f877a.h: 2175: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f877a.h: 2220: extern volatile unsigned char ADRESL @ 0x09E;
"2222
[; ;pic16f877a.h: 2222: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f877a.h: 2227: extern volatile unsigned char ADCON1 @ 0x09F;
"2229
[; ;pic16f877a.h: 2229: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f877a.h: 2232: typedef union {
[; ;pic16f877a.h: 2233: struct {
[; ;pic16f877a.h: 2234: unsigned PCFG :4;
[; ;pic16f877a.h: 2235: unsigned :2;
[; ;pic16f877a.h: 2236: unsigned ADCS2 :1;
[; ;pic16f877a.h: 2237: unsigned ADFM :1;
[; ;pic16f877a.h: 2238: };
[; ;pic16f877a.h: 2239: struct {
[; ;pic16f877a.h: 2240: unsigned PCFG0 :1;
[; ;pic16f877a.h: 2241: unsigned PCFG1 :1;
[; ;pic16f877a.h: 2242: unsigned PCFG2 :1;
[; ;pic16f877a.h: 2243: unsigned PCFG3 :1;
[; ;pic16f877a.h: 2244: };
[; ;pic16f877a.h: 2245: } ADCON1bits_t;
[; ;pic16f877a.h: 2246: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f877a.h: 2286: extern volatile unsigned char EEDATA @ 0x10C;
"2288
[; ;pic16f877a.h: 2288: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f877a.h: 2293: extern volatile unsigned char EEADR @ 0x10D;
"2295
[; ;pic16f877a.h: 2295: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f877a.h: 2300: extern volatile unsigned char EEDATH @ 0x10E;
"2302
[; ;pic16f877a.h: 2302: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f877a.h: 2307: extern volatile unsigned char EEADRH @ 0x10F;
"2309
[; ;pic16f877a.h: 2309: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f877a.h: 2314: extern volatile unsigned char EECON1 @ 0x18C;
"2316
[; ;pic16f877a.h: 2316: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f877a.h: 2319: typedef union {
[; ;pic16f877a.h: 2320: struct {
[; ;pic16f877a.h: 2321: unsigned RD :1;
[; ;pic16f877a.h: 2322: unsigned WR :1;
[; ;pic16f877a.h: 2323: unsigned WREN :1;
[; ;pic16f877a.h: 2324: unsigned WRERR :1;
[; ;pic16f877a.h: 2325: unsigned :3;
[; ;pic16f877a.h: 2326: unsigned EEPGD :1;
[; ;pic16f877a.h: 2327: };
[; ;pic16f877a.h: 2328: } EECON1bits_t;
[; ;pic16f877a.h: 2329: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f877a.h: 2359: extern volatile unsigned char EECON2 @ 0x18D;
"2361
[; ;pic16f877a.h: 2361: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f877a.h: 2371: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f877a.h: 2373: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f877a.h: 2375: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f877a.h: 2377: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f877a.h: 2379: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f877a.h: 2381: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f877a.h: 2383: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f877a.h: 2385: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f877a.h: 2387: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f877a.h: 2389: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f877a.h: 2391: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f877a.h: 2393: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f877a.h: 2395: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f877a.h: 2397: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f877a.h: 2399: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f877a.h: 2401: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f877a.h: 2403: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f877a.h: 2405: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f877a.h: 2407: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f877a.h: 2409: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f877a.h: 2411: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f877a.h: 2413: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f877a.h: 2415: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f877a.h: 2417: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f877a.h: 2419: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f877a.h: 2421: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f877a.h: 2423: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f877a.h: 2425: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f877a.h: 2427: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f877a.h: 2429: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f877a.h: 2431: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f877a.h: 2433: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f877a.h: 2435: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f877a.h: 2437: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f877a.h: 2439: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f877a.h: 2441: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f877a.h: 2443: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f877a.h: 2445: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f877a.h: 2447: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f877a.h: 2449: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f877a.h: 2451: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f877a.h: 2453: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f877a.h: 2455: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f877a.h: 2457: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f877a.h: 2459: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f877a.h: 2461: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f877a.h: 2463: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f877a.h: 2465: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f877a.h: 2467: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f877a.h: 2469: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f877a.h: 2471: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f877a.h: 2473: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f877a.h: 2475: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f877a.h: 2477: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f877a.h: 2479: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f877a.h: 2481: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f877a.h: 2483: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2485: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f877a.h: 2487: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2489: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2491: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f877a.h: 2493: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f877a.h: 2495: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f877a.h: 2497: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f877a.h: 2499: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f877a.h: 2501: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f877a.h: 2503: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2505: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2507: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2509: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2511: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2513: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f877a.h: 2515: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f877a.h: 2517: extern volatile __bit IBF @ (((unsigned) &TRISE)*8) + 7;
[; ;pic16f877a.h: 2519: extern volatile __bit IBOV @ (((unsigned) &TRISE)*8) + 5;
[; ;pic16f877a.h: 2521: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f877a.h: 2523: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f877a.h: 2525: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f877a.h: 2527: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f877a.h: 2529: extern volatile __bit OBF @ (((unsigned) &TRISE)*8) + 6;
[; ;pic16f877a.h: 2531: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f877a.h: 2533: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f877a.h: 2535: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f877a.h: 2537: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f877a.h: 2539: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f877a.h: 2541: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f877a.h: 2543: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f877a.h: 2545: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f877a.h: 2547: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f877a.h: 2549: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f877a.h: 2551: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f877a.h: 2553: extern volatile __bit PSPIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f877a.h: 2555: extern volatile __bit PSPIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f877a.h: 2557: extern volatile __bit PSPMODE @ (((unsigned) &TRISE)*8) + 4;
[; ;pic16f877a.h: 2559: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f877a.h: 2561: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f877a.h: 2563: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f877a.h: 2565: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f877a.h: 2567: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f877a.h: 2569: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f877a.h: 2571: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f877a.h: 2573: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f877a.h: 2575: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f877a.h: 2577: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f877a.h: 2579: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f877a.h: 2581: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f877a.h: 2583: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f877a.h: 2585: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f877a.h: 2587: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f877a.h: 2589: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f877a.h: 2591: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f877a.h: 2593: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f877a.h: 2595: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f877a.h: 2597: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f877a.h: 2599: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f877a.h: 2601: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f877a.h: 2603: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f877a.h: 2605: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f877a.h: 2607: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2609: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2611: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2613: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f877a.h: 2615: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f877a.h: 2617: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f877a.h: 2619: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f877a.h: 2621: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f877a.h: 2623: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f877a.h: 2625: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f877a.h: 2627: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f877a.h: 2629: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f877a.h: 2631: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f877a.h: 2633: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f877a.h: 2635: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f877a.h: 2637: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f877a.h: 2639: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f877a.h: 2641: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f877a.h: 2643: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2645: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f877a.h: 2647: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f877a.h: 2649: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f877a.h: 2651: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2653: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f877a.h: 2655: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2657: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2659: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f877a.h: 2661: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f877a.h: 2663: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f877a.h: 2665: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f877a.h: 2667: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f877a.h: 2669: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f877a.h: 2671: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f877a.h: 2673: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f877a.h: 2675: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f877a.h: 2677: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f877a.h: 2679: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f877a.h: 2681: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f877a.h: 2683: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f877a.h: 2685: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f877a.h: 2687: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2689: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2691: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f877a.h: 2693: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f877a.h: 2695: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f877a.h: 2697: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2699: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f877a.h: 2701: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2703: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f877a.h: 2705: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f877a.h: 2707: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f877a.h: 2709: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f877a.h: 2711: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f877a.h: 2713: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f877a.h: 2715: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f877a.h: 2717: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f877a.h: 2719: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f877a.h: 2721: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f877a.h: 2723: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f877a.h: 2725: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f877a.h: 2727: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f877a.h: 2729: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f877a.h: 2731: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f877a.h: 2733: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f877a.h: 2735: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f877a.h: 2737: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f877a.h: 2739: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f877a.h: 2741: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f877a.h: 2743: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f877a.h: 2745: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f877a.h: 2747: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f877a.h: 2749: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f877a.h: 2751: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f877a.h: 2753: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f877a.h: 2755: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f877a.h: 2757: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f877a.h: 2759: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f877a.h: 2761: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f877a.h: 2763: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f877a.h: 2765: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f877a.h: 2767: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f877a.h: 2769: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f877a.h: 2771: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f877a.h: 2773: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f877a.h: 2775: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f877a.h: 2777: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f877a.h: 2779: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f877a.h: 2781: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f877a.h: 2783: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f877a.h: 2785: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f877a.h: 2787: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f877a.h: 2789: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f877a.h: 2791: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f877a.h: 2793: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f877a.h: 2795: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f877a.h: 2797: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f877a.h: 2799: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f877a.h: 2801: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2803: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2805: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2807: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f877a.h: 2809: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f877a.h: 2811: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f877a.h: 2813: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f877a.h: 2815: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f877a.h: 2817: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f877a.h: 2819: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f877a.h: 2821: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f877a.h: 2823: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f877a.h: 2825: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f877a.h: 2827: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2829: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f877a.h: 2831: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2833: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f877a.h: 2835: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f877a.h: 2837: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f877a.h: 2839: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f877a.h: 2841: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f877a.h: 2843: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f877a.h: 2845: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f877a.h: 2847: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f877a.h: 2849: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f877a.h: 2851: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f877a.h: 2853: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"30 maincode.c
[v _freq `l ~T0 @X0 1 e ]
[; ;maincode.c: 30: long freq;
"31
[v _PWM_Max_Duty `(i ~T0 @X0 1 ef ]
"32
{
[; ;maincode.c: 31: int PWM_Max_Duty()
[; ;maincode.c: 32: {
[e :U _PWM_Max_Duty ]
[f ]
[; ;maincode.c: 33: return(16000000/(freq*4));
"33
[e ) -> / -> 16000000 `l * _freq -> -> 4 `i `l `i ]
[e $UE 95  ]
[; ;maincode.c: 34: }
"34
[e :UE 95 ]
}
"35
[v _PWM1_Init `(i ~T0 @X0 1 ef1`l ]
"36
{
[; ;maincode.c: 35: PWM1_Init(long fre)
[; ;maincode.c: 36: {
[e :U _PWM1_Init ]
"35
[v _fre `l ~T0 @X0 1 r1 ]
"36
[f ]
[; ;maincode.c: 37: PR2 = (16000000/(fre*4*4)) - 1;
"37
[e = _PR2 -> - / -> 16000000 `l * * _fre -> -> 4 `i `l -> -> 4 `i `l -> -> 1 `i `l `uc ]
[; ;maincode.c: 38: freq = fre;
"38
[e = _freq _fre ]
[; ;maincode.c: 39: }
"39
[e :UE 96 ]
}
"40
[v _PWM2_Init `(i ~T0 @X0 1 ef1`l ]
"41
{
[; ;maincode.c: 40: PWM2_Init(long fre)
[; ;maincode.c: 41: {
[e :U _PWM2_Init ]
"40
[v _fre `l ~T0 @X0 1 r1 ]
"41
[f ]
[; ;maincode.c: 42: PR2 = (16000000/(fre*4*4)) - 1;
"42
[e = _PR2 -> - / -> 16000000 `l * * _fre -> -> 4 `i `l -> -> 4 `i `l -> -> 1 `i `l `uc ]
[; ;maincode.c: 43: freq = fre;
"43
[e = _freq _fre ]
[; ;maincode.c: 44: }
"44
[e :UE 97 ]
}
"45
[v _PWM1_Duty `(i ~T0 @X0 1 ef1`ui ]
"46
{
[; ;maincode.c: 45: PWM1_Duty(unsigned int duty)
[; ;maincode.c: 46: {
[e :U _PWM1_Duty ]
"45
[v _duty `ui ~T0 @X0 1 r1 ]
"46
[f ]
[; ;maincode.c: 47: if(duty<1024);
"47
[e $ ! < _duty -> -> 1024 `i `ui 99  ]
[e :U 99 ]
[; ;maincode.c: 48: {
"48
{
[; ;maincode.c: 49: duty = ((float)duty/1023)*PWM_Max_Duty();
"49
[e = _duty -> * / -> _duty `f -> -> 1023 `i `f -> ( _PWM_Max_Duty ..  `f `ui ]
[; ;maincode.c: 50: CCP1X = duty & 2;
"50
[e = _CCP1X -> & _duty -> -> 2 `i `ui `b ]
[; ;maincode.c: 51: CCP1Y = duty & 1;
"51
[e = _CCP1Y -> & _duty -> -> 1 `i `ui `b ]
[; ;maincode.c: 52: CCPR1L = duty>>2;
"52
[e = _CCPR1L -> >> _duty -> 2 `i `uc ]
"53
}
[; ;maincode.c: 53: }
[; ;maincode.c: 54: }
"54
[e :UE 98 ]
}
"55
[v _PWM2_Duty `(i ~T0 @X0 1 ef1`ui ]
"56
{
[; ;maincode.c: 55: PWM2_Duty(unsigned int duty)
[; ;maincode.c: 56: {
[e :U _PWM2_Duty ]
"55
[v _duty `ui ~T0 @X0 1 r1 ]
"56
[f ]
[; ;maincode.c: 57: if(duty<1024);
"57
[e $ ! < _duty -> -> 1024 `i `ui 101  ]
[e :U 101 ]
[; ;maincode.c: 58: {
"58
{
[; ;maincode.c: 59: duty = ((float)duty/1023)*PWM_Max_Duty();
"59
[e = _duty -> * / -> _duty `f -> -> 1023 `i `f -> ( _PWM_Max_Duty ..  `f `ui ]
[; ;maincode.c: 60: CCP2X = duty & 2;
"60
[e = _CCP2X -> & _duty -> -> 2 `i `ui `b ]
[; ;maincode.c: 61: CCP2Y = duty & 1;
"61
[e = _CCP2Y -> & _duty -> -> 1 `i `ui `b ]
[; ;maincode.c: 62: CCPR2L = duty>>2;
"62
[e = _CCPR2L -> >> _duty -> 2 `i `uc ]
"63
}
[; ;maincode.c: 63: }
[; ;maincode.c: 64: }
"64
[e :UE 100 ]
}
"65
[v _PWM1_Start `(i ~T0 @X0 1 ef ]
"66
{
[; ;maincode.c: 65: PWM1_Start()
[; ;maincode.c: 66: {
[e :U _PWM1_Start ]
[f ]
[; ;maincode.c: 67: CCP1M3 = 1;
"67
[e = _CCP1M3 -> -> 1 `i `b ]
[; ;maincode.c: 68: CCP1M2 = 1;
"68
[e = _CCP1M2 -> -> 1 `i `b ]
[; ;maincode.c: 79: TMR2ON = 1;
"79
[e = _TMR2ON -> -> 1 `i `b ]
[; ;maincode.c: 80: TRISC2 = 0;
"80
[e = _TRISC2 -> -> 0 `i `b ]
[; ;maincode.c: 81: }
"81
[e :UE 102 ]
}
"82
[v _PWM1_Stop `(i ~T0 @X0 1 ef ]
"83
{
[; ;maincode.c: 82: PWM1_Stop()
[; ;maincode.c: 83: {
[e :U _PWM1_Stop ]
[f ]
[; ;maincode.c: 84: CCP1M3 = 0;
"84
[e = _CCP1M3 -> -> 0 `i `b ]
[; ;maincode.c: 85: CCP1M2 = 0;
"85
[e = _CCP1M2 -> -> 0 `i `b ]
[; ;maincode.c: 86: }
"86
[e :UE 103 ]
}
"87
[v _PWM2_Start `(i ~T0 @X0 1 ef ]
"88
{
[; ;maincode.c: 87: PWM2_Start()
[; ;maincode.c: 88: {
[e :U _PWM2_Start ]
[f ]
[; ;maincode.c: 89: CCP2M3 = 1;
"89
[e = _CCP2M3 -> -> 1 `i `b ]
[; ;maincode.c: 90: CCP2M2 = 1;
"90
[e = _CCP2M2 -> -> 1 `i `b ]
[; ;maincode.c: 95: T2CKPS0 = 1;
"95
[e = _T2CKPS0 -> -> 1 `i `b ]
[; ;maincode.c: 96: T2CKPS1 = 0;
"96
[e = _T2CKPS1 -> -> 0 `i `b ]
[; ;maincode.c: 101: TMR2ON = 1;
"101
[e = _TMR2ON -> -> 1 `i `b ]
[; ;maincode.c: 102: TRISC1 = 0;
"102
[e = _TRISC1 -> -> 0 `i `b ]
[; ;maincode.c: 103: }
"103
[e :UE 104 ]
}
"104
[v _PWM2_Stop `(i ~T0 @X0 1 ef ]
"105
{
[; ;maincode.c: 104: PWM2_Stop()
[; ;maincode.c: 105: {
[e :U _PWM2_Stop ]
[f ]
[; ;maincode.c: 106: CCP2M3 = 0;
"106
[e = _CCP2M3 -> -> 0 `i `b ]
[; ;maincode.c: 107: CCP2M2 = 0;
"107
[e = _CCP2M2 -> -> 0 `i `b ]
[; ;maincode.c: 108: }
"108
[e :UE 105 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"109
[v _main `(v ~T0 @X0 1 ef ]
"110
{
[; ;maincode.c: 109: void main()
[; ;maincode.c: 110: {
[e :U _main ]
[f ]
[; ;maincode.c: 111: TRISC=0;
"111
[e = _TRISC -> -> 0 `i `uc ]
[; ;maincode.c: 112: TRISD=0b11110000;
"112
[e = _TRISD -> -> 240 `i `uc ]
[; ;maincode.c: 113: TRISB=0b00001111;
"113
[e = _TRISB -> -> 15 `i `uc ]
[; ;maincode.c: 114: PWM1_Init(5000);
"114
[e ( _PWM1_Init (1 -> -> 5000 `i `l ]
[; ;maincode.c: 115: PWM2_Init(5000);
"115
[e ( _PWM2_Init (1 -> -> 5000 `i `l ]
"117
[v _position `f ~T0 @X0 1 a ]
[v _error `f ~T0 @X0 1 a ]
[v _lasterror `f ~T0 @X0 1 a ]
[v _adjustment `f ~T0 @X0 1 a ]
"118
[v _Kp `f ~T0 @X0 1 a ]
[; ;maincode.c: 117: float position, error, lasterror, adjustment;
[; ;maincode.c: 118: float Kp=140;
[e = _Kp -> -> 140 `i `f ]
"119
[v _Kd `f ~T0 @X0 1 a ]
[; ;maincode.c: 119: float Kd=350;
[e = _Kd -> -> 350 `i `f ]
"120
[v _Lspeed `f ~T0 @X0 1 a ]
[v _Rspeed `f ~T0 @X0 1 a ]
"121
[v _n `i ~T0 @X0 1 a ]
[; ;maincode.c: 120: float Lspeed, Rspeed;
[; ;maincode.c: 121: int n=0;
[e = _n -> 0 `i ]
"122
[v _sum `i ~T0 @X0 1 a ]
[; ;maincode.c: 122: int sum=0;
[e = _sum -> 0 `i ]
"123
[v _LineOut `i ~T0 @X0 1 a ]
[; ;maincode.c: 123: int LineOut=1;
[e = _LineOut -> 1 `i ]
"124
[v _LastOut `i ~T0 @X0 1 a ]
"125
[v _square `i ~T0 @X0 1 a ]
[; ;maincode.c: 124: int LastOut;
[; ;maincode.c: 125: int square;
[; ;maincode.c: 126: while(1);{
"126
[e :U 108 ]
[e :U 107 ]
[e $U 108  ]
[e :U 109 ]
{
[; ;maincode.c: 127: LineOut=0;
"127
[e = _LineOut -> 0 `i ]
[; ;maincode.c: 128: Lspeed=720;
"128
[e = _Lspeed -> -> 720 `i `f ]
[; ;maincode.c: 129: Rspeed=720;
"129
[e = _Rspeed -> -> 720 `i `f ]
[; ;maincode.c: 130: n=0;
"130
[e = _n -> 0 `i ]
[; ;maincode.c: 131: sum=0;
"131
[e = _sum -> 0 `i ]
[; ;maincode.c: 132: if(RB3==0){
"132
[e $ ! == -> _RB3 `i -> 0 `i 110  ]
{
[; ;maincode.c: 133: n=n+1;
"133
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 134: LineOut=1;
"134
[e = _LineOut -> 1 `i ]
[; ;maincode.c: 135: sum=sum-9;
"135
[e = _sum - _sum -> 9 `i ]
[; ;maincode.c: 136: LastOut=-1;
"136
[e = _LastOut -U -> 1 `i ]
"137
}
[e :U 110 ]
[; ;maincode.c: 137: }
[; ;maincode.c: 138: if(RB2==0){
"138
[e $ ! == -> _RB2 `i -> 0 `i 111  ]
{
[; ;maincode.c: 139: n=n+1;
"139
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 140: LineOut=1;
"140
[e = _LineOut -> 1 `i ]
[; ;maincode.c: 141: sum=sum-5;
"141
[e = _sum - _sum -> 5 `i ]
[; ;maincode.c: 142: LastOut=-1;
"142
[e = _LastOut -U -> 1 `i ]
"143
}
[e :U 111 ]
[; ;maincode.c: 143: }
[; ;maincode.c: 144: if(RB1==0){
"144
[e $ ! == -> _RB1 `i -> 0 `i 112  ]
{
[; ;maincode.c: 145: n=n+1;
"145
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 146: LineOut=1;
"146
[e = _LineOut -> 1 `i ]
[; ;maincode.c: 147: sum=sum-3;
"147
[e = _sum - _sum -> 3 `i ]
[; ;maincode.c: 148: LastOut=0;
"148
[e = _LastOut -> 0 `i ]
"149
}
[e :U 112 ]
[; ;maincode.c: 149: }
[; ;maincode.c: 150: if(RB0==0){
"150
[e $ ! == -> _RB0 `i -> 0 `i 113  ]
{
[; ;maincode.c: 151: n=n+1;
"151
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 152: LineOut=1;
"152
[e = _LineOut -> 1 `i ]
[; ;maincode.c: 153: sum=sum+0;
"153
[e = _sum + _sum -> 0 `i ]
[; ;maincode.c: 154: LastOut=0;
"154
[e = _LastOut -> 0 `i ]
"155
}
[e :U 113 ]
[; ;maincode.c: 155: }
[; ;maincode.c: 156: if(RD7==0){
"156
[e $ ! == -> _RD7 `i -> 0 `i 114  ]
{
[; ;maincode.c: 157: n=n+1;
"157
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 158: LineOut=1;
"158
[e = _LineOut -> 1 `i ]
[; ;maincode.c: 159: sum=sum+3;
"159
[e = _sum + _sum -> 3 `i ]
[; ;maincode.c: 160: LastOut=0;
"160
[e = _LastOut -> 0 `i ]
"161
}
[e :U 114 ]
[; ;maincode.c: 161: }
[; ;maincode.c: 162: if(RD6==0){
"162
[e $ ! == -> _RD6 `i -> 0 `i 115  ]
{
[; ;maincode.c: 163: n=n+1;
"163
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 164: LineOut=1;
"164
[e = _LineOut -> 1 `i ]
[; ;maincode.c: 165: sum=sum+5;
"165
[e = _sum + _sum -> 5 `i ]
[; ;maincode.c: 166: LastOut=1;
"166
[e = _LastOut -> 1 `i ]
"167
}
[e :U 115 ]
[; ;maincode.c: 167: }
[; ;maincode.c: 168: if(RD5==0){
"168
[e $ ! == -> _RD5 `i -> 0 `i 116  ]
{
[; ;maincode.c: 169: n=n+1;
"169
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 170: LineOut=1;
"170
[e = _LineOut -> 1 `i ]
[; ;maincode.c: 171: sum=sum+9;
"171
[e = _sum + _sum -> 9 `i ]
[; ;maincode.c: 172: LastOut=1;
"172
[e = _LastOut -> 1 `i ]
"173
}
[e :U 116 ]
[; ;maincode.c: 173: }
[; ;maincode.c: 174: if(n!=0){
"174
[e $ ! != _n -> 0 `i 117  ]
{
[; ;maincode.c: 175: position=sum/n;
"175
[e = _position -> / _sum _n `f ]
[; ;maincode.c: 176: error=0-position;
"176
[e = _error - -> -> 0 `i `f _position ]
"177
}
[e :U 117 ]
[; ;maincode.c: 177: }
[; ;maincode.c: 178: adjustment = Kp*error + Kd*(error - lasterror);
"178
[e = _adjustment + * _Kp _error * _Kd - _error _lasterror ]
[; ;maincode.c: 179: lasterror=error;
"179
[e = _lasterror _error ]
[; ;maincode.c: 180: if(adjustment>0){
"180
[e $ ! > _adjustment -> -> 0 `i `f 118  ]
{
[; ;maincode.c: 181: Lspeed=Lspeed-adjustment;
"181
[e = _Lspeed - _Lspeed _adjustment ]
[; ;maincode.c: 182: Rspeed=Rspeed+adjustment/6;
"182
[e = _Rspeed + _Rspeed / _adjustment -> -> 6 `i `f ]
"183
}
[; ;maincode.c: 183: }
[e $U 119  ]
"184
[e :U 118 ]
[; ;maincode.c: 184: else{
{
[; ;maincode.c: 185: Rspeed=Rspeed+adjustment;
"185
[e = _Rspeed + _Rspeed _adjustment ]
[; ;maincode.c: 186: Lspeed=Lspeed-adjustment/6;
"186
[e = _Lspeed - _Lspeed / _adjustment -> -> 6 `i `f ]
"187
}
[e :U 119 ]
[; ;maincode.c: 187: }
[; ;maincode.c: 192: if(Rspeed>1023){
"192
[e $ ! > _Rspeed -> -> 1023 `i `f 120  ]
{
[; ;maincode.c: 193: Rspeed=1023;
"193
[e = _Rspeed -> -> 1023 `i `f ]
"194
}
[e :U 120 ]
[; ;maincode.c: 194: }
[; ;maincode.c: 195: if(Lspeed>1023){
"195
[e $ ! > _Lspeed -> -> 1023 `i `f 121  ]
{
[; ;maincode.c: 196: Lspeed=1023;
"196
[e = _Lspeed -> -> 1023 `i `f ]
"197
}
[e :U 121 ]
[; ;maincode.c: 197: }
[; ;maincode.c: 198: if(Rspeed<0){
"198
[e $ ! < _Rspeed -> -> 0 `i `f 122  ]
{
[; ;maincode.c: 199: RD0=0;
"199
[e = _RD0 -> -> 0 `i `b ]
[; ;maincode.c: 200: RD1=1;
"200
[e = _RD1 -> -> 1 `i `b ]
[; ;maincode.c: 201: Rspeed=-Rspeed;
"201
[e = _Rspeed -U _Rspeed ]
"202
}
[e :U 122 ]
[; ;maincode.c: 202: }
[; ;maincode.c: 203: if(Lspeed<0){
"203
[e $ ! < _Lspeed -> -> 0 `i `f 123  ]
{
[; ;maincode.c: 204: RD2=0;
"204
[e = _RD2 -> -> 0 `i `b ]
[; ;maincode.c: 205: RD3=1;
"205
[e = _RD3 -> -> 1 `i `b ]
[; ;maincode.c: 206: Lspeed=-Lspeed;
"206
[e = _Lspeed -U _Lspeed ]
"207
}
[e :U 123 ]
[; ;maincode.c: 207: }
[; ;maincode.c: 209: while(LineOut==0){
"209
[e $U 124  ]
[e :U 125 ]
{
[; ;maincode.c: 210: if(LastOut==(-1))
"210
[e $ ! == _LastOut -U -> 1 `i 127  ]
[; ;maincode.c: 211: {
"211
{
[; ;maincode.c: 212: RD2=0;
"212
[e = _RD2 -> -> 0 `i `b ]
[; ;maincode.c: 213: RD3=1;
"213
[e = _RD3 -> -> 1 `i `b ]
[; ;maincode.c: 214: Lspeed=500;
"214
[e = _Lspeed -> -> 500 `i `f ]
[; ;maincode.c: 215: Rspeed=750;
"215
[e = _Rspeed -> -> 750 `i `f ]
"216
}
[e :U 127 ]
[; ;maincode.c: 216: }
[; ;maincode.c: 217: if(LastOut==1){
"217
[e $ ! == _LastOut -> 1 `i 128  ]
{
[; ;maincode.c: 218: RD0=0;
"218
[e = _RD0 -> -> 0 `i `b ]
[; ;maincode.c: 219: RD1=1;
"219
[e = _RD1 -> -> 1 `i `b ]
[; ;maincode.c: 220: Lspeed=750;
"220
[e = _Lspeed -> -> 750 `i `f ]
[; ;maincode.c: 221: Rspeed=500;
"221
[e = _Rspeed -> -> 500 `i `f ]
"222
}
[e :U 128 ]
[; ;maincode.c: 222: }
[; ;maincode.c: 223: if(LastOut==0){
"223
[e $ ! == _LastOut -> 0 `i 129  ]
{
[; ;maincode.c: 224: RD0=0;
"224
[e = _RD0 -> -> 0 `i `b ]
[; ;maincode.c: 225: RD1=0;
"225
[e = _RD1 -> -> 0 `i `b ]
[; ;maincode.c: 226: RD2=0;
"226
[e = _RD2 -> -> 0 `i `b ]
[; ;maincode.c: 227: RD3=0;
"227
[e = _RD3 -> -> 0 `i `b ]
"228
}
[e :U 129 ]
[; ;maincode.c: 228: }
[; ;maincode.c: 229: PWM1_Duty(Lspeed);
"229
[e ( _PWM1_Duty (1 -> _Lspeed `ui ]
[; ;maincode.c: 230: PWM2_Duty(Rspeed);
"230
[e ( _PWM2_Duty (1 -> _Rspeed `ui ]
[; ;maincode.c: 231: _delay((unsigned long)((20)*(16000000/4000.0)));
"231
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
[; ;maincode.c: 232: if((RB3==0)||(RB2==0)||(RB1==0)||(RB0==0)||(RD7==0)||(RD6==0)||(RD5==0)){
"232
[e $ ! || || || || || || == -> _RB3 `i -> 0 `i == -> _RB2 `i -> 0 `i == -> _RB1 `i -> 0 `i == -> _RB0 `i -> 0 `i == -> _RD7 `i -> 0 `i == -> _RD6 `i -> 0 `i == -> _RD5 `i -> 0 `i 130  ]
{
[; ;maincode.c: 233: LineOut=1;
"233
[e = _LineOut -> 1 `i ]
"234
}
[e :U 130 ]
"235
}
[e :U 124 ]
"209
[e $ == _LineOut -> 0 `i 125  ]
[e :U 126 ]
[; ;maincode.c: 234: }
[; ;maincode.c: 235: }
[; ;maincode.c: 237: if((RB0==0)&&(RB3==0)){
"237
[e $ ! && == -> _RB0 `i -> 0 `i == -> _RB3 `i -> 0 `i 131  ]
{
[; ;maincode.c: 238: square=-1;
"238
[e = _square -U -> 1 `i ]
"239
[v _i `i ~T0 @X0 1 a ]
[; ;maincode.c: 239: int i;
[; ;maincode.c: 240: for(i=0;i<20;i++){
"240
{
[e = _i -> 0 `i ]
[e $ < _i -> 20 `i 132  ]
[e $U 133  ]
[e :U 132 ]
{
[; ;maincode.c: 241: Lspeed=700;
"241
[e = _Lspeed -> -> 700 `i `f ]
[; ;maincode.c: 242: Rspeed=700;
"242
[e = _Rspeed -> -> 700 `i `f ]
[; ;maincode.c: 243: n=0; sum=0;
"243
[e = _n -> 0 `i ]
[e = _sum -> 0 `i ]
[; ;maincode.c: 244: if(RB0==0){
"244
[e $ ! == -> _RB0 `i -> 0 `i 135  ]
{
[; ;maincode.c: 245: n=n+1;
"245
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 246: sum=sum+0;
"246
[e = _sum + _sum -> 0 `i ]
[; ;maincode.c: 247: LineOut=1;
"247
[e = _LineOut -> 1 `i ]
"248
}
[e :U 135 ]
[; ;maincode.c: 248: }
[; ;maincode.c: 249: if(RD7==0){
"249
[e $ ! == -> _RD7 `i -> 0 `i 136  ]
{
[; ;maincode.c: 250: n=n+1;
"250
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 251: sum=sum+3;
"251
[e = _sum + _sum -> 3 `i ]
"252
}
[e :U 136 ]
[; ;maincode.c: 252: }
[; ;maincode.c: 253: if(RD6==0){
"253
[e $ ! == -> _RD6 `i -> 0 `i 137  ]
{
[; ;maincode.c: 254: n=n+1;
"254
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 255: sum=sum+5;
"255
[e = _sum + _sum -> 5 `i ]
[; ;maincode.c: 256: LineOut=1;
"256
[e = _LineOut -> 1 `i ]
"257
}
[e :U 137 ]
[; ;maincode.c: 257: }
[; ;maincode.c: 258: if(RD5==0){
"258
[e $ ! == -> _RD5 `i -> 0 `i 138  ]
{
[; ;maincode.c: 259: n=n+1;
"259
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 260: sum=sum+9;
"260
[e = _sum + _sum -> 9 `i ]
[; ;maincode.c: 261: LineOut=1;
"261
[e = _LineOut -> 1 `i ]
"262
}
[e :U 138 ]
[; ;maincode.c: 262: }
[; ;maincode.c: 263: if(n!=0){
"263
[e $ ! != _n -> 0 `i 139  ]
{
[; ;maincode.c: 264: position=sum/n;
"264
[e = _position -> / _sum _n `f ]
[; ;maincode.c: 265: error=0-position;
"265
[e = _error - -> -> 0 `i `f _position ]
"266
}
[e :U 139 ]
[; ;maincode.c: 266: }
[; ;maincode.c: 267: LastOut=-1;
"267
[e = _LastOut -U -> 1 `i ]
[; ;maincode.c: 268: adjustment = Kp*error + Kd*(error - lasterror);
"268
[e = _adjustment + * _Kp _error * _Kd - _error _lasterror ]
[; ;maincode.c: 269: lasterror=error;
"269
[e = _lasterror _error ]
[; ;maincode.c: 270: Rspeed=Rspeed+adjustment;
"270
[e = _Rspeed + _Rspeed _adjustment ]
[; ;maincode.c: 271: Lspeed=Lspeed-adjustment/6;
"271
[e = _Lspeed - _Lspeed / _adjustment -> -> 6 `i `f ]
[; ;maincode.c: 272: if(Rspeed>1023){
"272
[e $ ! > _Rspeed -> -> 1023 `i `f 140  ]
{
[; ;maincode.c: 273: Rspeed=1023;
"273
[e = _Rspeed -> -> 1023 `i `f ]
"274
}
[e :U 140 ]
[; ;maincode.c: 274: }
[; ;maincode.c: 275: if(Lspeed>1023){
"275
[e $ ! > _Lspeed -> -> 1023 `i `f 141  ]
{
[; ;maincode.c: 276: Lspeed=1023;
"276
[e = _Lspeed -> -> 1023 `i `f ]
"277
}
[e :U 141 ]
[; ;maincode.c: 277: }
[; ;maincode.c: 278: if(Rspeed<0){
"278
[e $ ! < _Rspeed -> -> 0 `i `f 142  ]
{
[; ;maincode.c: 279: RD0=0;
"279
[e = _RD0 -> -> 0 `i `b ]
[; ;maincode.c: 280: RD1=1;
"280
[e = _RD1 -> -> 1 `i `b ]
[; ;maincode.c: 281: Rspeed=-Rspeed/2.5;
"281
[e = _Rspeed -> / -> -U _Rspeed `d .2.5 `f ]
"282
}
[e :U 142 ]
[; ;maincode.c: 282: }
[; ;maincode.c: 283: if(Lspeed<0){
"283
[e $ ! < _Lspeed -> -> 0 `i `f 143  ]
{
[; ;maincode.c: 284: RD2=0;
"284
[e = _RD2 -> -> 0 `i `b ]
[; ;maincode.c: 285: RD3=1;
"285
[e = _RD3 -> -> 1 `i `b ]
[; ;maincode.c: 286: Lspeed=-Lspeed/2.5;
"286
[e = _Lspeed -> / -> -U _Lspeed `d .2.5 `f ]
"287
}
[e :U 143 ]
[; ;maincode.c: 287: }
[; ;maincode.c: 288: PWM1_Duty(Lspeed);
"288
[e ( _PWM1_Duty (1 -> _Lspeed `ui ]
[; ;maincode.c: 289: PWM2_Duty(Rspeed);
"289
[e ( _PWM2_Duty (1 -> _Rspeed `ui ]
[; ;maincode.c: 290: _delay((unsigned long)((20)*(16000000/4000.0)));
"290
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
[; ;maincode.c: 291: RD0=1;
"291
[e = _RD0 -> -> 1 `i `b ]
[; ;maincode.c: 292: RD1=0;
"292
[e = _RD1 -> -> 0 `i `b ]
[; ;maincode.c: 293: RD2=1;
"293
[e = _RD2 -> -> 1 `i `b ]
[; ;maincode.c: 294: RD3=0;
"294
[e = _RD3 -> -> 0 `i `b ]
"295
}
"240
[e ++ _i -> 1 `i ]
[e $ < _i -> 20 `i 132  ]
[e :U 133 ]
"295
}
"296
}
[e :U 131 ]
[; ;maincode.c: 295: }
[; ;maincode.c: 296: }
[; ;maincode.c: 297: if((RB0==0)&&(RD5==0)){
"297
[e $ ! && == -> _RB0 `i -> 0 `i == -> _RD5 `i -> 0 `i 144  ]
{
[; ;maincode.c: 298: square=1;
"298
[e = _square -> 1 `i ]
"299
[v _i `i ~T0 @X0 1 a ]
[; ;maincode.c: 299: int i;
[; ;maincode.c: 300: for(i=0;i<20;i++){
"300
{
[e = _i -> 0 `i ]
[e $ < _i -> 20 `i 145  ]
[e $U 146  ]
[e :U 145 ]
{
[; ;maincode.c: 301: Lspeed=700;
"301
[e = _Lspeed -> -> 700 `i `f ]
[; ;maincode.c: 302: Rspeed=700; n=0;
"302
[e = _Rspeed -> -> 700 `i `f ]
[e = _n -> 0 `i ]
[; ;maincode.c: 303: sum=0;
"303
[e = _sum -> 0 `i ]
[; ;maincode.c: 304: if(RB3==0){
"304
[e $ ! == -> _RB3 `i -> 0 `i 148  ]
{
[; ;maincode.c: 305: n=n+1;
"305
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 306: sum=sum-9;
"306
[e = _sum - _sum -> 9 `i ]
[; ;maincode.c: 307: LineOut=1;
"307
[e = _LineOut -> 1 `i ]
"308
}
[e :U 148 ]
[; ;maincode.c: 308: }
[; ;maincode.c: 309: if(RB2==0){
"309
[e $ ! == -> _RB2 `i -> 0 `i 149  ]
{
[; ;maincode.c: 310: n=n+1;
"310
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 311: sum=sum-5;
"311
[e = _sum - _sum -> 5 `i ]
[; ;maincode.c: 312: LineOut=1;
"312
[e = _LineOut -> 1 `i ]
"313
}
[e :U 149 ]
[; ;maincode.c: 313: }
[; ;maincode.c: 314: if(RB1==0){
"314
[e $ ! == -> _RB1 `i -> 0 `i 150  ]
{
[; ;maincode.c: 315: n=n+1;
"315
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 316: sum=sum-3;
"316
[e = _sum - _sum -> 3 `i ]
[; ;maincode.c: 317: LineOut=1;
"317
[e = _LineOut -> 1 `i ]
"318
}
[e :U 150 ]
[; ;maincode.c: 318: }
[; ;maincode.c: 319: if(RB0==0){
"319
[e $ ! == -> _RB0 `i -> 0 `i 151  ]
{
[; ;maincode.c: 320: n=n+1;
"320
[e = _n + _n -> 1 `i ]
[; ;maincode.c: 321: sum=sum+0;
"321
[e = _sum + _sum -> 0 `i ]
"322
}
[e :U 151 ]
[; ;maincode.c: 322: }
[; ;maincode.c: 323: if(n!=0){
"323
[e $ ! != _n -> 0 `i 152  ]
{
[; ;maincode.c: 324: position=sum/n;
"324
[e = _position -> / _sum _n `f ]
[; ;maincode.c: 325: error=0-position;
"325
[e = _error - -> -> 0 `i `f _position ]
"326
}
[e :U 152 ]
[; ;maincode.c: 326: }
[; ;maincode.c: 327: LastOut=1;
"327
[e = _LastOut -> 1 `i ]
[; ;maincode.c: 328: adjustment = Kp*error + Kd*(error - lasterror);
"328
[e = _adjustment + * _Kp _error * _Kd - _error _lasterror ]
[; ;maincode.c: 329: lasterror=error;
"329
[e = _lasterror _error ]
[; ;maincode.c: 330: Lspeed=Lspeed-adjustment;
"330
[e = _Lspeed - _Lspeed _adjustment ]
[; ;maincode.c: 331: Rspeed=Rspeed+adjustment/5;
"331
[e = _Rspeed + _Rspeed / _adjustment -> -> 5 `i `f ]
[; ;maincode.c: 333: if(Rspeed>1023){
"333
[e $ ! > _Rspeed -> -> 1023 `i `f 153  ]
{
[; ;maincode.c: 334: Rspeed=1023;
"334
[e = _Rspeed -> -> 1023 `i `f ]
"335
}
[e :U 153 ]
[; ;maincode.c: 335: }
[; ;maincode.c: 336: if(Lspeed>1023){
"336
[e $ ! > _Lspeed -> -> 1023 `i `f 154  ]
{
[; ;maincode.c: 337: Lspeed=1023;
"337
[e = _Lspeed -> -> 1023 `i `f ]
"338
}
[e :U 154 ]
[; ;maincode.c: 338: }
[; ;maincode.c: 339: if(Rspeed<0){ RD0=0;
"339
[e $ ! < _Rspeed -> -> 0 `i `f 155  ]
{
[e = _RD0 -> -> 0 `i `b ]
[; ;maincode.c: 340: RD1=1;
"340
[e = _RD1 -> -> 1 `i `b ]
[; ;maincode.c: 341: Rspeed=-Rspeed/2.5;
"341
[e = _Rspeed -> / -> -U _Rspeed `d .2.5 `f ]
"342
}
[e :U 155 ]
[; ;maincode.c: 342: }
[; ;maincode.c: 343: if(Lspeed<0){
"343
[e $ ! < _Lspeed -> -> 0 `i `f 156  ]
{
[; ;maincode.c: 344: RD2=0;
"344
[e = _RD2 -> -> 0 `i `b ]
[; ;maincode.c: 345: RD3=1;
"345
[e = _RD3 -> -> 1 `i `b ]
[; ;maincode.c: 346: Lspeed=-Lspeed/2.5;
"346
[e = _Lspeed -> / -> -U _Lspeed `d .2.5 `f ]
"347
}
[e :U 156 ]
[; ;maincode.c: 347: }
[; ;maincode.c: 348: PWM1_Duty(Lspeed);
"348
[e ( _PWM1_Duty (1 -> _Lspeed `ui ]
[; ;maincode.c: 349: PWM2_Duty(Rspeed);
"349
[e ( _PWM2_Duty (1 -> _Rspeed `ui ]
[; ;maincode.c: 350: _delay((unsigned long)((20)*(16000000/4000.0)));
"350
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
[; ;maincode.c: 351: RD0=1;
"351
[e = _RD0 -> -> 1 `i `b ]
[; ;maincode.c: 352: RD1=0;
"352
[e = _RD1 -> -> 0 `i `b ]
[; ;maincode.c: 353: RD2=1;
"353
[e = _RD2 -> -> 1 `i `b ]
[; ;maincode.c: 354: RD3=0;
"354
[e = _RD3 -> -> 0 `i `b ]
"355
}
"300
[e ++ _i -> 1 `i ]
[e $ < _i -> 20 `i 145  ]
[e :U 146 ]
"355
}
"356
}
[e :U 144 ]
[; ;maincode.c: 355: }
[; ;maincode.c: 356: }
[; ;maincode.c: 376: PWM1_Duty(Lspeed);
"376
[e ( _PWM1_Duty (1 -> _Lspeed `ui ]
[; ;maincode.c: 377: PWM2_Duty(Rspeed);
"377
[e ( _PWM2_Duty (1 -> _Rspeed `ui ]
[; ;maincode.c: 378: _delay((unsigned long)((20)*(16000000/4000.0)));
"378
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
[; ;maincode.c: 379: RD0=1;
"379
[e = _RD0 -> -> 1 `i `b ]
[; ;maincode.c: 380: RD1=0;
"380
[e = _RD1 -> -> 0 `i `b ]
[; ;maincode.c: 381: RD2=1;
"381
[e = _RD2 -> -> 1 `i `b ]
[; ;maincode.c: 382: RD3=0;
"382
[e = _RD3 -> -> 0 `i `b ]
"383
}
[; ;maincode.c: 383: }
[; ;maincode.c: 384: }
"384
[e :UE 106 ]
}
