

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jan 05 18:17:38 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.45
    26                           ; Generated 16/11/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119                           
   120                           	psect	nvBANK0
   121  0058                     __pnvBANK0:	
   122  0058                     _freq:	
   123  0058                     	ds	4
   124  001B                     _CCPR2L	set	27
   125  0015                     _CCPR1L	set	21
   126  0042                     _RD2	set	66
   127  0041                     _RD1	set	65
   128  0044                     _RD4	set	68
   129  0043                     _RD3	set	67
   130  0032                     _RB2	set	50
   131  0031                     _RB1	set	49
   132  0030                     _RB0	set	48
   133  0035                     _RB5	set	53
   134  0036                     _RB6	set	54
   135  0037                     _RB7	set	55
   136  0034                     _RB4	set	52
   137  0033                     _RB3	set	51
   138  0091                     _T2CKPS1	set	145
   139  0090                     _T2CKPS0	set	144
   140  00EA                     _CCP2M2	set	234
   141  00EB                     _CCP2M3	set	235
   142  0092                     _TMR2ON	set	146
   143  00BA                     _CCP1M2	set	186
   144  00BB                     _CCP1M3	set	187
   145  00EC                     _CCP2Y	set	236
   146  00ED                     _CCP2X	set	237
   147  00BC                     _CCP1Y	set	188
   148  00BD                     _CCP1X	set	189
   149  0086                     _TRISB	set	134
   150  0088                     _TRISD	set	136
   151  0087                     _TRISC	set	135
   152  0092                     _PR2	set	146
   153  0439                     _TRISC1	set	1081
   154  043A                     _TRISC2	set	1082
   155                           
   156                           ; #config settings
   157  0000                     
   158                           	psect	cinit
   159  07FC                     start_initialization:	
   160  07FC                     __initialization:	
   161  07FC                     end_of_initialization:	
   162                           ;End of C runtime variable initialization code
   163                           
   164  07FC                     __end_of__initialization:	
   165  07FC  0183               	clrf	3
   166  07FD  120A  118A  2E65   	ljmp	_main	;jump to C main() function
   167                           
   168                           	psect	cstackCOMMON
   169  0070                     __pcstackCOMMON:	
   170  0070                     ??_PWM1_Start:	
   171  0070                     ??_PWM2_Start:	
   172                           ; 1 bytes @ 0x0
   173                           
   174  0070                     ?_main:	
   175                           ; 1 bytes @ 0x0
   176                           
   177  0070                     ?_PWM1_Start:	
   178                           ; 1 bytes @ 0x0
   179                           
   180  0070                     ?_PWM2_Start:	
   181                           ; 2 bytes @ 0x0
   182                           
   183  0070                     ?___ftpack:	
   184                           ; 2 bytes @ 0x0
   185                           
   186  0070                     ?___aldiv:	
   187                           ; 3 bytes @ 0x0
   188                           
   189  0070                     ___ftpack@arg:	
   190                           ; 4 bytes @ 0x0
   191                           
   192  0070                     ___aldiv@divisor:	
   193                           ; 3 bytes @ 0x0
   194                           
   195                           
   196                           ; 4 bytes @ 0x0
   197  0070                     	ds	3
   198  0073                     ___ftpack@exp:	
   199                           
   200                           ; 1 bytes @ 0x3
   201  0073                     	ds	1
   202  0074                     ___ftpack@sign:	
   203  0074                     ___aldiv@dividend:	
   204                           ; 1 bytes @ 0x4
   205                           
   206                           
   207                           ; 4 bytes @ 0x4
   208  0074                     	ds	1
   209  0075                     ??___ftpack:	
   210                           
   211                           ; 1 bytes @ 0x5
   212  0075                     	ds	3
   213  0078                     ??___aldiv:	
   214  0078                     ?___lwtoft:	
   215                           ; 1 bytes @ 0x8
   216                           
   217  0078                     ___lwtoft@c:	
   218                           ; 3 bytes @ 0x8
   219                           
   220                           
   221                           ; 2 bytes @ 0x8
   222  0078                     	ds	1
   223  0079                     ??_PWM_Max_Duty:	
   224  0079                     ??_PWM1_Init:	
   225                           ; 1 bytes @ 0x9
   226                           
   227  0079                     ??_PWM2_Init:	
   228                           ; 1 bytes @ 0x9
   229                           
   230                           
   231                           ; 1 bytes @ 0x9
   232  0079                     	ds	2
   233  007B                     ??___lwtoft:	
   234                           
   235                           ; 1 bytes @ 0xB
   236  007B                     	ds	2
   237  007D                     ___awtoft@sign:	
   238                           
   239                           ; 1 bytes @ 0xD
   240  007D                     	ds	1
   241                           
   242                           	psect	cstackBANK0
   243  0020                     __pcstackBANK0:	
   244  0020                     ?___ftdiv:	
   245  0020                     ___aldiv@counter:	
   246                           ; 3 bytes @ 0x0
   247                           
   248  0020                     ___ftdiv@f2:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 3 bytes @ 0x0
   253  0020                     	ds	1
   254  0021                     ___aldiv@sign:	
   255                           
   256                           ; 1 bytes @ 0x1
   257  0021                     	ds	1
   258  0022                     ___aldiv@quotient:	
   259                           
   260                           ; 4 bytes @ 0x2
   261  0022                     	ds	1
   262  0023                     ___ftdiv@f1:	
   263                           
   264                           ; 3 bytes @ 0x3
   265  0023                     	ds	3
   266  0026                     ??___ftdiv:	
   267  0026                     ?_PWM_Max_Duty:	
   268                           ; 1 bytes @ 0x6
   269                           
   270  0026                     ?_PWM1_Init:	
   271                           ; 2 bytes @ 0x6
   272                           
   273  0026                     ?_PWM2_Init:	
   274                           ; 2 bytes @ 0x6
   275                           
   276  0026                     PWM1_Init@fre:	
   277                           ; 2 bytes @ 0x6
   278                           
   279  0026                     PWM2_Init@fre:	
   280                           ; 4 bytes @ 0x6
   281                           
   282                           
   283                           ; 4 bytes @ 0x6
   284  0026                     	ds	2
   285  0028                     ?___awtoft:	
   286  0028                     ___awtoft@c:	
   287                           ; 3 bytes @ 0x8
   288                           
   289                           
   290                           ; 2 bytes @ 0x8
   291  0028                     	ds	2
   292  002A                     ___ftdiv@cntr:	
   293                           
   294                           ; 1 bytes @ 0xA
   295  002A                     	ds	1
   296  002B                     ??___awtoft:	
   297  002B                     ___ftdiv@f3:	
   298                           ; 1 bytes @ 0xB
   299                           
   300                           
   301                           ; 3 bytes @ 0xB
   302  002B                     	ds	3
   303  002E                     ___ftdiv@exp:	
   304                           
   305                           ; 1 bytes @ 0xE
   306  002E                     	ds	1
   307  002F                     ___ftdiv@sign:	
   308                           
   309                           ; 1 bytes @ 0xF
   310  002F                     	ds	1
   311  0030                     ?___ftmul:	
   312  0030                     ___ftmul@f1:	
   313                           ; 3 bytes @ 0x10
   314                           
   315                           
   316                           ; 3 bytes @ 0x10
   317  0030                     	ds	3
   318  0033                     ___ftmul@f2:	
   319                           
   320                           ; 3 bytes @ 0x13
   321  0033                     	ds	3
   322  0036                     ??___ftmul:	
   323                           
   324                           ; 1 bytes @ 0x16
   325  0036                     	ds	4
   326  003A                     ___ftmul@exp:	
   327                           
   328                           ; 1 bytes @ 0x1A
   329  003A                     	ds	1
   330  003B                     ___ftmul@f3_as_product:	
   331                           
   332                           ; 3 bytes @ 0x1B
   333  003B                     	ds	3
   334  003E                     ___ftmul@cntr:	
   335                           
   336                           ; 1 bytes @ 0x1E
   337  003E                     	ds	1
   338  003F                     ___ftmul@sign:	
   339                           
   340                           ; 1 bytes @ 0x1F
   341  003F                     	ds	1
   342  0040                     ?___fttol:	
   343  0040                     ___fttol@f1:	
   344                           ; 4 bytes @ 0x20
   345                           
   346                           
   347                           ; 3 bytes @ 0x20
   348  0040                     	ds	4
   349  0044                     ??___fttol:	
   350                           
   351                           ; 1 bytes @ 0x24
   352  0044                     	ds	4
   353  0048                     ___fttol@sign1:	
   354                           
   355                           ; 1 bytes @ 0x28
   356  0048                     	ds	1
   357  0049                     ___fttol@lval:	
   358                           
   359                           ; 4 bytes @ 0x29
   360  0049                     	ds	4
   361  004D                     ___fttol@exp1:	
   362                           
   363                           ; 1 bytes @ 0x2D
   364  004D                     	ds	1
   365  004E                     ?_PWM1_Duty:	
   366  004E                     ?_PWM2_Duty:	
   367                           ; 2 bytes @ 0x2E
   368                           
   369  004E                     PWM1_Duty@duty:	
   370                           ; 2 bytes @ 0x2E
   371                           
   372  004E                     PWM2_Duty@duty:	
   373                           ; 2 bytes @ 0x2E
   374                           
   375                           
   376                           ; 2 bytes @ 0x2E
   377  004E                     	ds	2
   378  0050                     ??_PWM1_Duty:	
   379  0050                     ??_PWM2_Duty:	
   380                           ; 1 bytes @ 0x30
   381                           
   382                           
   383                           ; 1 bytes @ 0x30
   384  0050                     	ds	2
   385  0052                     ??_main:	
   386                           
   387                           ; 1 bytes @ 0x32
   388  0052                     	ds	2
   389  0054                     main@Rspeed:	
   390                           
   391                           ; 2 bytes @ 0x34
   392  0054                     	ds	2
   393  0056                     main@Lspeed:	
   394                           
   395                           ; 2 bytes @ 0x36
   396  0056                     	ds	2
   397                           
   398                           	psect	maintext
   399  0665                     __pmaintext:	
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 116 in file "FINAL2.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  Lspeed          2   54[BANK0 ] int 
   410 ;;  Rspeed          2   52[BANK0 ] int 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       4       0       0       0
   422 ;;      Temps:          0       2       0       0       0
   423 ;;      Totals:         0       6       0       0       0
   424 ;;Total ram usage:        6 bytes
   425 ;; Hardware stack levels required when called:    3
   426 ;; This function calls:
   427 ;;		_PWM1_Duty
   428 ;;		_PWM1_Init
   429 ;;		_PWM1_Start
   430 ;;		_PWM2_Duty
   431 ;;		_PWM2_Init
   432 ;;		_PWM2_Start
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  0665                     _main:	
   441                           
   442                           ;FINAL2.c: 117: TRISC=0;
   443                           
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446  0665  1683               	bsf	3,5	;RP0=1, select bank1
   447  0666  1303               	bcf	3,6	;RP1=0, select bank1
   448  0667  0187               	clrf	7	;volatile
   449                           
   450                           ;FINAL2.c: 118: TRISD=0b00000000;
   451  0668  0188               	clrf	8	;volatile
   452                           
   453                           ;FINAL2.c: 119: TRISB=1;
   454  0669  3001               	movlw	1
   455  066A  0086               	movwf	6	;volatile
   456                           
   457                           ;FINAL2.c: 120: PWM1_Init(5000);
   458  066B  3000               	movlw	0
   459  066C  1283               	bcf	3,5	;RP0=0, select bank0
   460  066D  1303               	bcf	3,6	;RP1=0, select bank0
   461  066E  00A9               	movwf	PWM1_Init@fre+3
   462  066F  3000               	movlw	0
   463  0670  00A8               	movwf	PWM1_Init@fre+2
   464  0671  3013               	movlw	19
   465  0672  00A7               	movwf	PWM1_Init@fre+1
   466  0673  3088               	movlw	136
   467  0674  00A6               	movwf	PWM1_Init@fre
   468  0675  120A  118A  22CC  120A  118A  	fcall	_PWM1_Init
   469                           
   470                           ;FINAL2.c: 121: PWM2_Init(5000);
   471  067A  3000               	movlw	0
   472  067B  1283               	bcf	3,5	;RP0=0, select bank0
   473  067C  1303               	bcf	3,6	;RP1=0, select bank0
   474  067D  00A9               	movwf	PWM2_Init@fre+3
   475  067E  3000               	movlw	0
   476  067F  00A8               	movwf	PWM2_Init@fre+2
   477  0680  3013               	movlw	19
   478  0681  00A7               	movwf	PWM2_Init@fre+1
   479  0682  3088               	movlw	136
   480  0683  00A6               	movwf	PWM2_Init@fre
   481  0684  120A  118A  230B  120A  118A  	fcall	_PWM2_Init
   482  0689                     l1206:	
   483                           ;FINAL2.c: 122: int Rspeed;
   484                           ;FINAL2.c: 123: int Lspeed;
   485                           ;FINAL2.c: 124: while(1){
   486                           
   487                           
   488                           ;FINAL2.c: 127: if ((RB3==0)&&(RB4==0)){
   489  0689  1283               	bcf	3,5	;RP0=0, select bank0
   490  068A  1303               	bcf	3,6	;RP1=0, select bank0
   491  068B  1D86               	btfss	6,3	;volatile
   492  068C  1A06               	btfsc	6,4	;volatile
   493  068D  2E90               	goto	l101
   494                           
   495                           ;FINAL2.c: 128: Rspeed=900;
   496  068E  3084               	movlw	132
   497  068F  2EB7               	goto	L7
   498  0690                     l101:	
   499                           ;FINAL2.c: 130: }
   500                           
   501                           ;FINAL2.c: 129: Lspeed=865;
   502                           
   503                           
   504                           ;FINAL2.c: 131: else if ((RB7==0)&&(RB6==0)&&(RB5==0)){
   505  0690  1F86               	btfss	6,7	;volatile
   506  0691  1B06               	btfsc	6,6	;volatile
   507  0692  2E97               	goto	l103
   508  0693  1A86               	btfsc	6,5	;volatile
   509  0694  2E97               	goto	l103
   510                           
   511                           ;FINAL2.c: 132: Rspeed=960;
   512  0695  30C0               	movlw	192
   513  0696  2EB7               	goto	L7
   514  0697                     l103:	
   515                           ;FINAL2.c: 134: }
   516                           
   517                           ;FINAL2.c: 133: Lspeed=865;
   518                           
   519                           
   520                           ;FINAL2.c: 135: else if ((RB7==0)&&(RB6==0)){
   521  0697  1F86               	btfss	6,7	;volatile
   522  0698  1B06               	btfsc	6,6	;volatile
   523  0699  2E9C               	goto	l105
   524                           
   525                           ;FINAL2.c: 136: Rspeed=980;
   526  069A  30D4               	movlw	212
   527  069B  2EB7               	goto	L7
   528  069C                     l105:	
   529                           ;FINAL2.c: 138: }
   530                           
   531                           ;FINAL2.c: 137: Lspeed=865;
   532                           
   533                           
   534                           ;FINAL2.c: 139: else if (RB7==0){
   535  069C  1B86               	btfsc	6,7	;volatile
   536  069D  2EA0               	goto	l107
   537                           
   538                           ;FINAL2.c: 140: Rspeed=1000;
   539  069E  30E8               	movlw	232
   540  069F  2EB7               	goto	L7
   541  06A0                     l107:	
   542                           ;FINAL2.c: 142: }
   543                           
   544                           ;FINAL2.c: 141: Lspeed=865;
   545                           
   546                           
   547                           ;FINAL2.c: 145: else if ((RB6==0)&&(RB5==0))
   548  06A0  1F06               	btfss	6,6	;volatile
   549  06A1  1A86               	btfsc	6,5	;volatile
   550  06A2  2EA5               	goto	l109
   551                           
   552                           ;FINAL2.c: 146: {
   553                           ;FINAL2.c: 147: Rspeed=945;
   554  06A3  30B1               	movlw	177
   555  06A4  2EB7               	goto	L7
   556  06A5                     l109:	
   557                           ;FINAL2.c: 149: }
   558                           
   559                           ;FINAL2.c: 148: Lspeed=865;
   560                           
   561                           
   562                           ;FINAL2.c: 150: else if ((RB6==0)&&(RB5==0)&&(RB4==0))
   563  06A5  1F06               	btfss	6,6	;volatile
   564  06A6  1A86               	btfsc	6,5	;volatile
   565  06A7  2EAC               	goto	l111
   566  06A8  1A06               	btfsc	6,4	;volatile
   567  06A9  2EAC               	goto	l111
   568                           
   569                           ;FINAL2.c: 151: {
   570                           ;FINAL2.c: 152: Rspeed=930;
   571  06AA  30A2               	movlw	162
   572  06AB  2EB7               	goto	L7
   573  06AC                     l111:	
   574                           ;FINAL2.c: 154: }
   575                           
   576                           ;FINAL2.c: 153: Lspeed=865;
   577                           
   578                           
   579                           ;FINAL2.c: 155: else if ((RB5==0)&&(RB4==0)){
   580  06AC  1E86               	btfss	6,5	;volatile
   581  06AD  1A06               	btfsc	6,4	;volatile
   582  06AE  2EB1               	goto	l113
   583                           
   584                           ;FINAL2.c: 156: Rspeed=920;
   585  06AF  3098               	movlw	152
   586  06B0  2EB7               	goto	L7
   587  06B1                     l113:	
   588                           ;FINAL2.c: 158: }
   589                           
   590                           ;FINAL2.c: 157: Lspeed=865;
   591                           
   592                           
   593                           ;FINAL2.c: 159: else if ((RB5==0)&&(RB4==0)&&(RB3==0)){
   594  06B1  1E86               	btfss	6,5	;volatile
   595  06B2  1A06               	btfsc	6,4	;volatile
   596  06B3  2EBC               	goto	l115
   597  06B4  1986               	btfsc	6,3	;volatile
   598  06B5  2EBC               	goto	l115
   599                           
   600                           ;FINAL2.c: 160: Rspeed=910;
   601  06B6  308E               	movlw	142
   602  06B7                     L7:	
   603  06B7  00D4               	movwf	main@Rspeed
   604  06B8  3003               	movlw	3
   605  06B9  00D5               	movwf	main@Rspeed+1
   606                           
   607                           ;FINAL2.c: 161: Lspeed=865;
   608  06BA  3061               	movlw	97
   609  06BB  2EF4               	goto	L13
   610  06BC                     l115:	
   611                           ;FINAL2.c: 162: }
   612                           
   613                           
   614                           ;FINAL2.c: 164: else if (RB0==0){
   615  06BC  1806               	btfsc	6,0	;volatile
   616  06BD  2EC4               	goto	l117
   617                           
   618                           ;FINAL2.c: 165: Rspeed=900;
   619  06BE  3084               	movlw	132
   620  06BF  00D4               	movwf	main@Rspeed
   621  06C0  3003               	movlw	3
   622  06C1  00D5               	movwf	main@Rspeed+1
   623                           
   624                           ;FINAL2.c: 166: Lspeed=945;
   625  06C2  30B1               	movlw	177
   626  06C3  2EF4               	goto	L13
   627  06C4                     l117:	
   628                           ;FINAL2.c: 167: }
   629                           
   630                           
   631                           ;FINAL2.c: 168: else if ((RB0==0)&&(RB1==0)){
   632  06C4  1C06               	btfss	6,0	;volatile
   633  06C5  1886               	btfsc	6,1	;volatile
   634  06C6  2ECD               	goto	l119
   635                           
   636                           ;FINAL2.c: 169: Rspeed=900;
   637  06C7  3084               	movlw	132
   638  06C8  00D4               	movwf	main@Rspeed
   639  06C9  3003               	movlw	3
   640  06CA  00D5               	movwf	main@Rspeed+1
   641                           
   642                           ;FINAL2.c: 170: Lspeed=925;
   643  06CB  309D               	movlw	157
   644  06CC  2EF4               	goto	L13
   645  06CD                     l119:	
   646                           ;FINAL2.c: 171: }
   647                           
   648                           
   649                           ;FINAL2.c: 172: else if ((RB0==0)&&(RB1==0)&&(RB2==0)){
   650  06CD  1C06               	btfss	6,0	;volatile
   651  06CE  1886               	btfsc	6,1	;volatile
   652  06CF  2ED8               	goto	l121
   653  06D0  1906               	btfsc	6,2	;volatile
   654  06D1  2ED8               	goto	l121
   655                           
   656                           ;FINAL2.c: 173: Rspeed=900;
   657  06D2  3084               	movlw	132
   658  06D3  00D4               	movwf	main@Rspeed
   659  06D4  3003               	movlw	3
   660  06D5  00D5               	movwf	main@Rspeed+1
   661                           
   662                           ;FINAL2.c: 174: Lspeed=910;
   663  06D6  308E               	movlw	142
   664  06D7  2EF4               	goto	L13
   665  06D8                     l121:	
   666                           ;FINAL2.c: 175: }
   667                           
   668                           
   669                           ;FINAL2.c: 176: else if ((RB1==0)&&(RB2==0)){
   670  06D8  1C86               	btfss	6,1	;volatile
   671  06D9  1906               	btfsc	6,2	;volatile
   672  06DA  2EE1               	goto	l123
   673                           
   674                           ;FINAL2.c: 177: Rspeed=900;
   675  06DB  3084               	movlw	132
   676  06DC  00D4               	movwf	main@Rspeed
   677  06DD  3003               	movlw	3
   678  06DE  00D5               	movwf	main@Rspeed+1
   679                           
   680                           ;FINAL2.c: 178: Lspeed=900;
   681  06DF  3084               	movlw	132
   682  06E0  2EF4               	goto	L13
   683  06E1                     l123:	
   684                           ;FINAL2.c: 179: }
   685                           
   686                           
   687                           ;FINAL2.c: 180: else if ((RB1==0)&&(RB2==0)&&(RB3==0)){
   688  06E1  1C86               	btfss	6,1	;volatile
   689  06E2  1906               	btfsc	6,2	;volatile
   690  06E3  2EEC               	goto	l125
   691  06E4  1986               	btfsc	6,3	;volatile
   692  06E5  2EEC               	goto	l125
   693                           
   694                           ;FINAL2.c: 181: Rspeed=900;
   695  06E6  3084               	movlw	132
   696  06E7  00D4               	movwf	main@Rspeed
   697  06E8  3003               	movlw	3
   698  06E9  00D5               	movwf	main@Rspeed+1
   699                           
   700                           ;FINAL2.c: 182: Lspeed=890;
   701  06EA  307A               	movlw	122
   702  06EB  2EF4               	goto	L13
   703  06EC                     l125:	
   704                           ;FINAL2.c: 183: }
   705                           
   706                           
   707                           ;FINAL2.c: 184: else if ((RB2==0)&&(RB3==0)){
   708  06EC  1D06               	btfss	6,2	;volatile
   709  06ED  1986               	btfsc	6,3	;volatile
   710  06EE  2EF7               	goto	l102
   711                           
   712                           ;FINAL2.c: 185: Rspeed=900;
   713  06EF  3084               	movlw	132
   714  06F0  00D4               	movwf	main@Rspeed
   715  06F1  3003               	movlw	3
   716  06F2  00D5               	movwf	main@Rspeed+1
   717                           
   718                           ;FINAL2.c: 186: Lspeed=875;
   719  06F3  306B               	movlw	107
   720  06F4                     L13:	
   721  06F4  00D6               	movwf	main@Lspeed
   722  06F5  3003               	movlw	3
   723  06F6  00D7               	movwf	main@Lspeed+1
   724  06F7                     l102:	
   725                           
   726                           ;FINAL2.c: 187: }
   727                           ;FINAL2.c: 190: _delay((unsigned long)((20)*(16000000/4000.0)));
   728  06F7  3068               	movlw	104
   729  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   730  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   731  06FA  00D3               	movwf	??_main+1
   732  06FB  30E3               	movlw	227
   733  06FC  00D2               	movwf	??_main
   734  06FD                     u1917:	
   735  06FD  0BD2               	decfsz	??_main,f
   736  06FE  2EFD               	goto	u1917
   737  06FF  0BD3               	decfsz	??_main+1,f
   738  0700  2EFD               	goto	u1917
   739  0701  2F02               	nop2
   740                           
   741                           ;FINAL2.c: 191: RD3=1;
   742  0702  1283               	bcf	3,5	;RP0=0, select bank0
   743  0703  1303               	bcf	3,6	;RP1=0, select bank0
   744  0704  1588               	bsf	8,3	;volatile
   745                           
   746                           ;FINAL2.c: 192: RD4=0;
   747  0705  1208               	bcf	8,4	;volatile
   748                           
   749                           ;FINAL2.c: 193: RD1=1;
   750  0706  1488               	bsf	8,1	;volatile
   751                           
   752                           ;FINAL2.c: 194: RD2=0;
   753  0707  1108               	bcf	8,2	;volatile
   754                           
   755                           ;FINAL2.c: 195: PWM1_Start();
   756  0708  120A  118A  2252  120A  118A  	fcall	_PWM1_Start
   757                           
   758                           ;FINAL2.c: 196: PWM2_Start();
   759  070D  120A  118A  225B  120A  118A  	fcall	_PWM2_Start
   760                           
   761                           ;FINAL2.c: 197: PWM1_Duty(Rspeed);
   762  0712  1283               	bcf	3,5	;RP0=0, select bank0
   763  0713  1303               	bcf	3,6	;RP1=0, select bank0
   764  0714  0855               	movf	main@Rspeed+1,w
   765  0715  00CF               	movwf	PWM1_Duty@duty+1
   766  0716  0854               	movf	main@Rspeed,w
   767  0717  00CE               	movwf	PWM1_Duty@duty
   768  0718  120A  118A  23B6  120A  118A  	fcall	_PWM1_Duty
   769                           
   770                           ;FINAL2.c: 198: PWM2_Duty(Lspeed);
   771  071D  1283               	bcf	3,5	;RP0=0, select bank0
   772  071E  1303               	bcf	3,6	;RP1=0, select bank0
   773  071F  0857               	movf	main@Lspeed+1,w
   774  0720  00CF               	movwf	PWM2_Duty@duty+1
   775  0721  0856               	movf	main@Lspeed,w
   776  0722  00CE               	movwf	PWM2_Duty@duty
   777  0723  120A  118A  2423  120A  118A  	fcall	_PWM2_Duty
   778  0728  2E89               	goto	l1206
   779  0729                     __end_of_main:	
   780                           ;FINAL2.c: 199: }
   781                           ;FINAL2.c: 200: return;
   782                           
   783                           
   784                           	psect	text1
   785  025B                     __ptext1:	
   786 ;; *************** function _PWM2_Start *****************
   787 ;; Defined at:
   788 ;;		line 93 in file "FINAL2.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  2   91[None  ] int 
   795 ;; Registers used:
   796 ;;		None
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0
   805 ;;      Totals:         0       0       0       0       0
   806 ;;Total ram usage:        0 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _PWM2_Start
   817  025B                     _PWM2_Start:	
   818                           
   819                           ;FINAL2.c: 95: CCP2M3 = 1;
   820                           
   821                           ;incstack = 0
   822                           ; Regs used in _PWM2_Start: []
   823  025B  1283               	bcf	3,5	;RP0=0, select bank0
   824  025C  1303               	bcf	3,6	;RP1=0, select bank0
   825  025D  159D               	bsf	29,3	;volatile
   826                           
   827                           ;FINAL2.c: 96: CCP2M2 = 1;
   828  025E  151D               	bsf	29,2	;volatile
   829                           
   830                           ;FINAL2.c: 101: T2CKPS0 = 1;
   831  025F  1412               	bsf	18,0	;volatile
   832                           
   833                           ;FINAL2.c: 102: T2CKPS1 = 0;
   834  0260  1092               	bcf	18,1	;volatile
   835                           
   836                           ;FINAL2.c: 107: TMR2ON = 1;
   837  0261  1512               	bsf	18,2	;volatile
   838                           
   839                           ;FINAL2.c: 108: TRISC1 = 0;
   840  0262  1683               	bsf	3,5	;RP0=1, select bank1
   841  0263  1303               	bcf	3,6	;RP1=0, select bank1
   842  0264  1087               	bcf	7,1	;volatile
   843  0265  0008               	return
   844  0266                     __end_of_PWM2_Start:	
   845                           
   846                           	psect	text2
   847  030B                     __ptext2:	
   848 ;; *************** function _PWM2_Init *****************
   849 ;; Defined at:
   850 ;;		line 46 in file "FINAL2.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  fre             4    6[BANK0 ] long 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2    6[BANK0 ] int 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       4       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          4       0       0       0       0
   867 ;;      Totals:         4       4       0       0       0
   868 ;;Total ram usage:        8 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		___aldiv
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function _PWM2_Init
   880  030B                     _PWM2_Init:	
   881                           
   882                           ;FINAL2.c: 48: PR2 = (16000000/(fre*4*4)) - 1;
   883                           
   884                           ;incstack = 0
   885                           ; Regs used in _PWM2_Init: [wreg+status,2+status,0+pclath+cstack]
   886  030B  1283               	bcf	3,5	;RP0=0, select bank0
   887  030C  1303               	bcf	3,6	;RP1=0, select bank0
   888  030D  0826               	movf	PWM2_Init@fre,w
   889  030E  00F9               	movwf	??_PWM2_Init
   890  030F  0827               	movf	PWM2_Init@fre+1,w
   891  0310  00FA               	movwf	??_PWM2_Init+1
   892  0311  0828               	movf	PWM2_Init@fre+2,w
   893  0312  00FB               	movwf	??_PWM2_Init+2
   894  0313  0829               	movf	PWM2_Init@fre+3,w
   895  0314  00FC               	movwf	??_PWM2_Init+3
   896  0315  3002               	movlw	2
   897  0316                     u1545:	
   898  0316  1003               	clrc
   899  0317  0DF9               	rlf	??_PWM2_Init,f
   900  0318  0DFA               	rlf	??_PWM2_Init+1,f
   901  0319  0DFB               	rlf	??_PWM2_Init+2,f
   902  031A  0DFC               	rlf	??_PWM2_Init+3,f
   903  031B  3EFF               	addlw	-1
   904  031C  1D03               	skipz
   905  031D  2B16               	goto	u1545
   906  031E  3002               	movlw	2
   907  031F                     u1555:	
   908  031F  1003               	clrc
   909  0320  0DF9               	rlf	??_PWM2_Init,f
   910  0321  0DFA               	rlf	??_PWM2_Init+1,f
   911  0322  0DFB               	rlf	??_PWM2_Init+2,f
   912  0323  0DFC               	rlf	??_PWM2_Init+3,f
   913  0324  3EFF               	addlw	-1
   914  0325  1D03               	skipz
   915  0326  2B1F               	goto	u1555
   916  0327  087C               	movf	??_PWM2_Init+3,w
   917  0328  00F3               	movwf	___aldiv@divisor+3
   918  0329  087B               	movf	??_PWM2_Init+2,w
   919  032A  00F2               	movwf	___aldiv@divisor+2
   920  032B  087A               	movf	??_PWM2_Init+1,w
   921  032C  00F1               	movwf	___aldiv@divisor+1
   922  032D  0879               	movf	??_PWM2_Init,w
   923  032E  00F0               	movwf	___aldiv@divisor
   924  032F  3000               	movlw	0
   925  0330  00F7               	movwf	___aldiv@dividend+3
   926  0331  30F4               	movlw	244
   927  0332  00F6               	movwf	___aldiv@dividend+2
   928  0333  3024               	movlw	36
   929  0334  00F5               	movwf	___aldiv@dividend+1
   930  0335  3000               	movlw	0
   931  0336  00F4               	movwf	___aldiv@dividend
   932  0337  120A  118A  251E   	fcall	___aldiv
   933  033A  0870               	movf	?___aldiv,w
   934  033B  3EFF               	addlw	255
   935  033C  1683               	bsf	3,5	;RP0=1, select bank1
   936  033D  1303               	bcf	3,6	;RP1=0, select bank1
   937  033E  0092               	movwf	18	;volatile
   938                           
   939                           ;FINAL2.c: 49: freq = fre;
   940  033F  1283               	bcf	3,5	;RP0=0, select bank0
   941  0340  1303               	bcf	3,6	;RP1=0, select bank0
   942  0341  0829               	movf	PWM2_Init@fre+3,w
   943  0342  00DB               	movwf	_freq+3
   944  0343  0828               	movf	PWM2_Init@fre+2,w
   945  0344  00DA               	movwf	_freq+2
   946  0345  0827               	movf	PWM2_Init@fre+1,w
   947  0346  00D9               	movwf	_freq+1
   948  0347  0826               	movf	PWM2_Init@fre,w
   949  0348  00D8               	movwf	_freq
   950  0349  0008               	return
   951  034A                     __end_of_PWM2_Init:	
   952                           
   953                           	psect	text3
   954  0423                     __ptext3:	
   955 ;; *************** function _PWM2_Duty *****************
   956 ;; Defined at:
   957 ;;		line 61 in file "FINAL2.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  duty            2   46[BANK0 ] unsigned int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2   46[BANK0 ] int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       2       0       0       0
   972 ;;      Locals:         0       0       0       0       0
   973 ;;      Temps:          0       2       0       0       0
   974 ;;      Totals:         0       4       0       0       0
   975 ;;Total ram usage:        4 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    2
   978 ;; This function calls:
   979 ;;		_PWM_Max_Duty
   980 ;;		___awtoft
   981 ;;		___ftdiv
   982 ;;		___ftmul
   983 ;;		___fttol
   984 ;;		___lwtoft
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _PWM2_Duty
   992  0423                     _PWM2_Duty:	
   993                           
   994                           ;FINAL2.c: 64: {
   995                           ;FINAL2.c: 65: duty = ((float)duty/1023)*PWM_Max_Duty();
   996                           
   997                           ;incstack = 0
   998                           ; Regs used in _PWM2_Duty: [wreg+status,2+status,0+pclath+cstack]
   999  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0425  084F               	movf	PWM2_Duty@duty+1,w
  1002  0426  00F9               	movwf	___lwtoft@c+1
  1003  0427  084E               	movf	PWM2_Duty@duty,w
  1004  0428  00F8               	movwf	___lwtoft@c
  1005  0429  120A  118A  2266  120A  118A  	fcall	___lwtoft
  1006  042E  0878               	movf	?___lwtoft,w
  1007  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0431  00A3               	movwf	___ftdiv@f1
  1010  0432  0879               	movf	?___lwtoft+1,w
  1011  0433  00A4               	movwf	___ftdiv@f1+1
  1012  0434  087A               	movf	?___lwtoft+2,w
  1013  0435  00A5               	movwf	___ftdiv@f1+2
  1014  0436  30C0               	movlw	192
  1015  0437  00A0               	movwf	___ftdiv@f2
  1016  0438  307F               	movlw	127
  1017  0439  00A1               	movwf	___ftdiv@f2+1
  1018  043A  3044               	movlw	68
  1019  043B  00A2               	movwf	___ftdiv@f2+2
  1020  043C  120A  118A  25AD  120A  118A  	fcall	___ftdiv
  1021  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0443  0820               	movf	?___ftdiv,w
  1024  0444  00B3               	movwf	___ftmul@f2
  1025  0445  0821               	movf	?___ftdiv+1,w
  1026  0446  00B4               	movwf	___ftmul@f2+1
  1027  0447  0822               	movf	?___ftdiv+2,w
  1028  0448  00B5               	movwf	___ftmul@f2+2
  1029  0449  120A  118A  229F  120A  118A  	fcall	_PWM_Max_Duty
  1030  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1031  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0450  0827               	movf	?_PWM_Max_Duty+1,w
  1033  0451  00A9               	movwf	___awtoft@c+1
  1034  0452  0826               	movf	?_PWM_Max_Duty,w
  1035  0453  00A8               	movwf	___awtoft@c
  1036  0454  120A  118A  227A  120A  118A  	fcall	___awtoft
  1037  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1038  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1039  045B  0828               	movf	?___awtoft,w
  1040  045C  00B0               	movwf	___ftmul@f1
  1041  045D  0829               	movf	?___awtoft+1,w
  1042  045E  00B1               	movwf	___ftmul@f1+1
  1043  045F  082A               	movf	?___awtoft+2,w
  1044  0460  00B2               	movwf	___ftmul@f1+2
  1045  0461  120A  118A  2729  120A  118A  	fcall	___ftmul
  1046  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0468  0830               	movf	?___ftmul,w
  1049  0469  00C0               	movwf	___fttol@f1
  1050  046A  0831               	movf	?___ftmul+1,w
  1051  046B  00C1               	movwf	___fttol@f1+1
  1052  046C  0832               	movf	?___ftmul+2,w
  1053  046D  00C2               	movwf	___fttol@f1+2
  1054  046E  120A  118A  2490  120A  118A  	fcall	___fttol
  1055  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0475  0841               	movf	?___fttol+1,w
  1058  0476  00CF               	movwf	PWM2_Duty@duty+1
  1059  0477  0840               	movf	?___fttol,w
  1060  0478  00CE               	movwf	PWM2_Duty@duty
  1061                           
  1062                           ;FINAL2.c: 66: CCP2X = duty & 2;
  1063  0479  129D               	bcf	29,5	;volatile
  1064                           
  1065                           ;FINAL2.c: 67: CCP2Y = duty & 1;
  1066  047A  1C4E               	btfss	PWM2_Duty@duty,0
  1067  047B  2C80               	goto	u1580
  1068  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1069  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1070  047E  161D               	bsf	29,4	;volatile
  1071  047F  2C83               	goto	l1192
  1072  0480                     u1580:	
  1073  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1074  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1075  0482  121D               	bcf	29,4	;volatile
  1076  0483                     l1192:	
  1077                           
  1078                           ;FINAL2.c: 68: CCPR2L = duty>>2;
  1079  0483  084F               	movf	PWM2_Duty@duty+1,w
  1080  0484  00D1               	movwf	??_PWM2_Duty+1
  1081  0485  084E               	movf	PWM2_Duty@duty,w
  1082  0486  00D0               	movwf	??_PWM2_Duty
  1083  0487  1003               	clrc
  1084  0488  0CD1               	rrf	??_PWM2_Duty+1,f
  1085  0489  0CD0               	rrf	??_PWM2_Duty,f
  1086  048A  1003               	clrc
  1087  048B  0CD1               	rrf	??_PWM2_Duty+1,f
  1088  048C  0CD0               	rrf	??_PWM2_Duty,f
  1089  048D  0850               	movf	??_PWM2_Duty,w
  1090  048E  009B               	movwf	27	;volatile
  1091  048F  0008               	return
  1092  0490                     __end_of_PWM2_Duty:	
  1093                           
  1094                           	psect	text4
  1095  0252                     __ptext4:	
  1096 ;; *************** function _PWM1_Start *****************
  1097 ;; Defined at:
  1098 ;;		line 71 in file "FINAL2.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  2   85[None  ] int 
  1105 ;; Registers used:
  1106 ;;		None
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _PWM1_Start
  1127  0252                     _PWM1_Start:	
  1128                           
  1129                           ;FINAL2.c: 73: CCP1M3 = 1;
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _PWM1_Start: []
  1133  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0254  1597               	bsf	23,3	;volatile
  1136                           
  1137                           ;FINAL2.c: 74: CCP1M2 = 1;
  1138  0255  1517               	bsf	23,2	;volatile
  1139                           
  1140                           ;FINAL2.c: 85: TMR2ON = 1;
  1141  0256  1512               	bsf	18,2	;volatile
  1142                           
  1143                           ;FINAL2.c: 86: TRISC2 = 0;
  1144  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1145  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1146  0259  1107               	bcf	7,2	;volatile
  1147  025A  0008               	return
  1148  025B                     __end_of_PWM1_Start:	
  1149                           
  1150                           	psect	text5
  1151  02CC                     __ptext5:	
  1152 ;; *************** function _PWM1_Init *****************
  1153 ;; Defined at:
  1154 ;;		line 41 in file "FINAL2.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  fre             4    6[BANK0 ] long 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  2    6[BANK0 ] int 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       4       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          4       0       0       0       0
  1171 ;;      Totals:         4       4       0       0       0
  1172 ;;Total ram usage:        8 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    1
  1175 ;; This function calls:
  1176 ;;		___aldiv
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _PWM1_Init
  1184  02CC                     _PWM1_Init:	
  1185                           
  1186                           ;FINAL2.c: 43: PR2 = (16000000/(fre*4*4)) - 1;
  1187                           
  1188                           ;incstack = 0
  1189                           ; Regs used in _PWM1_Init: [wreg+status,2+status,0+pclath+cstack]
  1190  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1191  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1192  02CE  0826               	movf	PWM1_Init@fre,w
  1193  02CF  00F9               	movwf	??_PWM1_Init
  1194  02D0  0827               	movf	PWM1_Init@fre+1,w
  1195  02D1  00FA               	movwf	??_PWM1_Init+1
  1196  02D2  0828               	movf	PWM1_Init@fre+2,w
  1197  02D3  00FB               	movwf	??_PWM1_Init+2
  1198  02D4  0829               	movf	PWM1_Init@fre+3,w
  1199  02D5  00FC               	movwf	??_PWM1_Init+3
  1200  02D6  3002               	movlw	2
  1201  02D7                     u1525:	
  1202  02D7  1003               	clrc
  1203  02D8  0DF9               	rlf	??_PWM1_Init,f
  1204  02D9  0DFA               	rlf	??_PWM1_Init+1,f
  1205  02DA  0DFB               	rlf	??_PWM1_Init+2,f
  1206  02DB  0DFC               	rlf	??_PWM1_Init+3,f
  1207  02DC  3EFF               	addlw	-1
  1208  02DD  1D03               	skipz
  1209  02DE  2AD7               	goto	u1525
  1210  02DF  3002               	movlw	2
  1211  02E0                     u1535:	
  1212  02E0  1003               	clrc
  1213  02E1  0DF9               	rlf	??_PWM1_Init,f
  1214  02E2  0DFA               	rlf	??_PWM1_Init+1,f
  1215  02E3  0DFB               	rlf	??_PWM1_Init+2,f
  1216  02E4  0DFC               	rlf	??_PWM1_Init+3,f
  1217  02E5  3EFF               	addlw	-1
  1218  02E6  1D03               	skipz
  1219  02E7  2AE0               	goto	u1535
  1220  02E8  087C               	movf	??_PWM1_Init+3,w
  1221  02E9  00F3               	movwf	___aldiv@divisor+3
  1222  02EA  087B               	movf	??_PWM1_Init+2,w
  1223  02EB  00F2               	movwf	___aldiv@divisor+2
  1224  02EC  087A               	movf	??_PWM1_Init+1,w
  1225  02ED  00F1               	movwf	___aldiv@divisor+1
  1226  02EE  0879               	movf	??_PWM1_Init,w
  1227  02EF  00F0               	movwf	___aldiv@divisor
  1228  02F0  3000               	movlw	0
  1229  02F1  00F7               	movwf	___aldiv@dividend+3
  1230  02F2  30F4               	movlw	244
  1231  02F3  00F6               	movwf	___aldiv@dividend+2
  1232  02F4  3024               	movlw	36
  1233  02F5  00F5               	movwf	___aldiv@dividend+1
  1234  02F6  3000               	movlw	0
  1235  02F7  00F4               	movwf	___aldiv@dividend
  1236  02F8  120A  118A  251E   	fcall	___aldiv
  1237  02FB  0870               	movf	?___aldiv,w
  1238  02FC  3EFF               	addlw	255
  1239  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  1240  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  1241  02FF  0092               	movwf	18	;volatile
  1242                           
  1243                           ;FINAL2.c: 44: freq = fre;
  1244  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0302  0829               	movf	PWM1_Init@fre+3,w
  1247  0303  00DB               	movwf	_freq+3
  1248  0304  0828               	movf	PWM1_Init@fre+2,w
  1249  0305  00DA               	movwf	_freq+2
  1250  0306  0827               	movf	PWM1_Init@fre+1,w
  1251  0307  00D9               	movwf	_freq+1
  1252  0308  0826               	movf	PWM1_Init@fre,w
  1253  0309  00D8               	movwf	_freq
  1254  030A  0008               	return
  1255  030B                     __end_of_PWM1_Init:	
  1256                           
  1257                           	psect	text6
  1258  03B6                     __ptext6:	
  1259 ;; *************** function _PWM1_Duty *****************
  1260 ;; Defined at:
  1261 ;;		line 51 in file "FINAL2.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  duty            2   46[BANK0 ] unsigned int 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  2   46[BANK0 ] int 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         0       2       0       0       0
  1276 ;;      Locals:         0       0       0       0       0
  1277 ;;      Temps:          0       2       0       0       0
  1278 ;;      Totals:         0       4       0       0       0
  1279 ;;Total ram usage:        4 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    2
  1282 ;; This function calls:
  1283 ;;		_PWM_Max_Duty
  1284 ;;		___awtoft
  1285 ;;		___ftdiv
  1286 ;;		___ftmul
  1287 ;;		___fttol
  1288 ;;		___lwtoft
  1289 ;; This function is called by:
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _PWM1_Duty
  1296  03B6                     _PWM1_Duty:	
  1297                           
  1298                           ;FINAL2.c: 54: {
  1299                           ;FINAL2.c: 55: duty = ((float)duty/1023)*PWM_Max_Duty();
  1300                           
  1301                           ;incstack = 0
  1302                           ; Regs used in _PWM1_Duty: [wreg+status,2+status,0+pclath+cstack]
  1303  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1304  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1305  03B8  084F               	movf	PWM1_Duty@duty+1,w
  1306  03B9  00F9               	movwf	___lwtoft@c+1
  1307  03BA  084E               	movf	PWM1_Duty@duty,w
  1308  03BB  00F8               	movwf	___lwtoft@c
  1309  03BC  120A  118A  2266  120A  118A  	fcall	___lwtoft
  1310  03C1  0878               	movf	?___lwtoft,w
  1311  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  1312  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  1313  03C4  00A3               	movwf	___ftdiv@f1
  1314  03C5  0879               	movf	?___lwtoft+1,w
  1315  03C6  00A4               	movwf	___ftdiv@f1+1
  1316  03C7  087A               	movf	?___lwtoft+2,w
  1317  03C8  00A5               	movwf	___ftdiv@f1+2
  1318  03C9  30C0               	movlw	192
  1319  03CA  00A0               	movwf	___ftdiv@f2
  1320  03CB  307F               	movlw	127
  1321  03CC  00A1               	movwf	___ftdiv@f2+1
  1322  03CD  3044               	movlw	68
  1323  03CE  00A2               	movwf	___ftdiv@f2+2
  1324  03CF  120A  118A  25AD  120A  118A  	fcall	___ftdiv
  1325  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1326  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1327  03D6  0820               	movf	?___ftdiv,w
  1328  03D7  00B3               	movwf	___ftmul@f2
  1329  03D8  0821               	movf	?___ftdiv+1,w
  1330  03D9  00B4               	movwf	___ftmul@f2+1
  1331  03DA  0822               	movf	?___ftdiv+2,w
  1332  03DB  00B5               	movwf	___ftmul@f2+2
  1333  03DC  120A  118A  229F  120A  118A  	fcall	_PWM_Max_Duty
  1334  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1335  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1336  03E3  0827               	movf	?_PWM_Max_Duty+1,w
  1337  03E4  00A9               	movwf	___awtoft@c+1
  1338  03E5  0826               	movf	?_PWM_Max_Duty,w
  1339  03E6  00A8               	movwf	___awtoft@c
  1340  03E7  120A  118A  227A  120A  118A  	fcall	___awtoft
  1341  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1342  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1343  03EE  0828               	movf	?___awtoft,w
  1344  03EF  00B0               	movwf	___ftmul@f1
  1345  03F0  0829               	movf	?___awtoft+1,w
  1346  03F1  00B1               	movwf	___ftmul@f1+1
  1347  03F2  082A               	movf	?___awtoft+2,w
  1348  03F3  00B2               	movwf	___ftmul@f1+2
  1349  03F4  120A  118A  2729  120A  118A  	fcall	___ftmul
  1350  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1351  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1352  03FB  0830               	movf	?___ftmul,w
  1353  03FC  00C0               	movwf	___fttol@f1
  1354  03FD  0831               	movf	?___ftmul+1,w
  1355  03FE  00C1               	movwf	___fttol@f1+1
  1356  03FF  0832               	movf	?___ftmul+2,w
  1357  0400  00C2               	movwf	___fttol@f1+2
  1358  0401  120A  118A  2490  120A  118A  	fcall	___fttol
  1359  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0408  0841               	movf	?___fttol+1,w
  1362  0409  00CF               	movwf	PWM1_Duty@duty+1
  1363  040A  0840               	movf	?___fttol,w
  1364  040B  00CE               	movwf	PWM1_Duty@duty
  1365                           
  1366                           ;FINAL2.c: 56: CCP1X = duty & 2;
  1367  040C  1297               	bcf	23,5	;volatile
  1368                           
  1369                           ;FINAL2.c: 57: CCP1Y = duty & 1;
  1370  040D  1C4E               	btfss	PWM1_Duty@duty,0
  1371  040E  2C13               	goto	u1560
  1372  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0411  1617               	bsf	23,4	;volatile
  1375  0412  2C16               	goto	l1182
  1376  0413                     u1560:	
  1377  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0415  1217               	bcf	23,4	;volatile
  1380  0416                     l1182:	
  1381                           
  1382                           ;FINAL2.c: 58: CCPR1L = duty>>2;
  1383  0416  084F               	movf	PWM1_Duty@duty+1,w
  1384  0417  00D1               	movwf	??_PWM1_Duty+1
  1385  0418  084E               	movf	PWM1_Duty@duty,w
  1386  0419  00D0               	movwf	??_PWM1_Duty
  1387  041A  1003               	clrc
  1388  041B  0CD1               	rrf	??_PWM1_Duty+1,f
  1389  041C  0CD0               	rrf	??_PWM1_Duty,f
  1390  041D  1003               	clrc
  1391  041E  0CD1               	rrf	??_PWM1_Duty+1,f
  1392  041F  0CD0               	rrf	??_PWM1_Duty,f
  1393  0420  0850               	movf	??_PWM1_Duty,w
  1394  0421  0095               	movwf	21	;volatile
  1395  0422  0008               	return
  1396  0423                     __end_of_PWM1_Duty:	
  1397                           
  1398                           	psect	text7
  1399  0266                     __ptext7:	
  1400 ;; *************** function ___lwtoft *****************
  1401 ;; Defined at:
  1402 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  c               2    8[COMMON] unsigned int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  3    8[COMMON] float 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         3       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          1       0       0       0       0
  1419 ;;      Totals:         4       0       0       0       0
  1420 ;;Total ram usage:        4 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    1
  1423 ;; This function calls:
  1424 ;;		___ftpack
  1425 ;; This function is called by:
  1426 ;;		_PWM1_Duty
  1427 ;;		_PWM2_Duty
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function ___lwtoft
  1433  0266                     ___lwtoft:	
  1434                           
  1435                           ;incstack = 0
  1436                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  1437  0266  0878               	movf	___lwtoft@c,w
  1438  0267  00F0               	movwf	___ftpack@arg
  1439  0268  0879               	movf	___lwtoft@c+1,w
  1440  0269  00F1               	movwf	___ftpack@arg+1
  1441  026A  01F2               	clrf	___ftpack@arg+2
  1442  026B  308E               	movlw	142
  1443  026C  00FB               	movwf	??___lwtoft
  1444  026D  087B               	movf	??___lwtoft,w
  1445  026E  00F3               	movwf	___ftpack@exp
  1446  026F  01F4               	clrf	___ftpack@sign
  1447  0270  120A  118A  234A   	fcall	___ftpack
  1448  0273  0870               	movf	?___ftpack,w
  1449  0274  00F8               	movwf	?___lwtoft
  1450  0275  0871               	movf	?___ftpack+1,w
  1451  0276  00F9               	movwf	?___lwtoft+1
  1452  0277  0872               	movf	?___ftpack+2,w
  1453  0278  00FA               	movwf	?___lwtoft+2
  1454  0279  0008               	return
  1455  027A                     __end_of___lwtoft:	
  1456                           
  1457                           	psect	text8
  1458  0490                     __ptext8:	
  1459 ;; *************** function ___fttol *****************
  1460 ;; Defined at:
  1461 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  f1              3   32[BANK0 ] float 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  lval            4   41[BANK0 ] unsigned long 
  1466 ;;  exp1            1   45[BANK0 ] unsigned char 
  1467 ;;  sign1           1   40[BANK0 ] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  4   32[BANK0 ] long 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       4       0       0       0
  1478 ;;      Locals:         0       6       0       0       0
  1479 ;;      Temps:          0       4       0       0       0
  1480 ;;      Totals:         0      14       0       0       0
  1481 ;;Total ram usage:       14 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_PWM1_Duty
  1487 ;;		_PWM2_Duty
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function ___fttol
  1493  0490                     ___fttol:	
  1494                           
  1495                           ;incstack = 0
  1496                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1497  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0492  0840               	movf	___fttol@f1,w
  1500  0493  00C4               	movwf	??___fttol
  1501  0494  0841               	movf	___fttol@f1+1,w
  1502  0495  00C5               	movwf	??___fttol+1
  1503  0496  0842               	movf	___fttol@f1+2,w
  1504  0497  00C6               	movwf	??___fttol+2
  1505  0498  1003               	clrc
  1506  0499  0D45               	rlf	??___fttol+1,w
  1507  049A  0D46               	rlf	??___fttol+2,w
  1508  049B  00C7               	movwf	??___fttol+3
  1509  049C  0847               	movf	??___fttol+3,w
  1510  049D  00CD               	movwf	___fttol@exp1
  1511  049E  084D               	movf	___fttol@exp1,w
  1512  049F  1D03               	btfss	3,2
  1513  04A0  2CAA               	goto	l1126
  1514  04A1  3000               	movlw	0
  1515  04A2  00C3               	movwf	?___fttol+3
  1516  04A3  3000               	movlw	0
  1517  04A4  00C2               	movwf	?___fttol+2
  1518  04A5  3000               	movlw	0
  1519  04A6  00C1               	movwf	?___fttol+1
  1520  04A7  3000               	movlw	0
  1521  04A8  00C0               	movwf	?___fttol
  1522  04A9  0008               	return
  1523  04AA                     l1126:	
  1524  04AA  0840               	movf	___fttol@f1,w
  1525  04AB  00C4               	movwf	??___fttol
  1526  04AC  0841               	movf	___fttol@f1+1,w
  1527  04AD  00C5               	movwf	??___fttol+1
  1528  04AE  0842               	movf	___fttol@f1+2,w
  1529  04AF  00C6               	movwf	??___fttol+2
  1530  04B0  3017               	movlw	23
  1531  04B1                     u1435:	
  1532  04B1  1003               	clrc
  1533  04B2  0CC6               	rrf	??___fttol+2,f
  1534  04B3  0CC5               	rrf	??___fttol+1,f
  1535  04B4  0CC4               	rrf	??___fttol,f
  1536  04B5  3EFF               	addlw	-1
  1537  04B6  1D03               	skipz
  1538  04B7  2CB1               	goto	u1435
  1539  04B8  0844               	movf	??___fttol,w
  1540  04B9  00C7               	movwf	??___fttol+3
  1541  04BA  0847               	movf	??___fttol+3,w
  1542  04BB  00C8               	movwf	___fttol@sign1
  1543  04BC  17C1               	bsf	___fttol@f1+1,7
  1544  04BD  30FF               	movlw	255
  1545  04BE  05C0               	andwf	___fttol@f1,f
  1546  04BF  30FF               	movlw	255
  1547  04C0  05C1               	andwf	___fttol@f1+1,f
  1548  04C1  3000               	movlw	0
  1549  04C2  05C2               	andwf	___fttol@f1+2,f
  1550  04C3  0840               	movf	___fttol@f1,w
  1551  04C4  00C9               	movwf	___fttol@lval
  1552  04C5  0841               	movf	___fttol@f1+1,w
  1553  04C6  00CA               	movwf	___fttol@lval+1
  1554  04C7  0842               	movf	___fttol@f1+2,w
  1555  04C8  00CB               	movwf	___fttol@lval+2
  1556  04C9  01CC               	clrf	___fttol@lval+3
  1557  04CA  308E               	movlw	142
  1558  04CB  02CD               	subwf	___fttol@exp1,f
  1559  04CC  1FCD               	btfss	___fttol@exp1,7
  1560  04CD  2CEC               	goto	l1146
  1561  04CE  084D               	movf	___fttol@exp1,w
  1562  04CF  3A80               	xorlw	128
  1563  04D0  3E8F               	addlw	143
  1564  04D1  1803               	skipnc
  1565  04D2  2CDC               	goto	l1144
  1566  04D3  3000               	movlw	0
  1567  04D4  00C3               	movwf	?___fttol+3
  1568  04D5  3000               	movlw	0
  1569  04D6  00C2               	movwf	?___fttol+2
  1570  04D7  3000               	movlw	0
  1571  04D8  00C1               	movwf	?___fttol+1
  1572  04D9  3000               	movlw	0
  1573  04DA  00C0               	movwf	?___fttol
  1574  04DB  0008               	return
  1575  04DC                     l1144:	
  1576  04DC  3001               	movlw	1
  1577  04DD                     u1465:	
  1578  04DD  1003               	clrc
  1579  04DE  0CCC               	rrf	___fttol@lval+3,f
  1580  04DF  0CCB               	rrf	___fttol@lval+2,f
  1581  04E0  0CCA               	rrf	___fttol@lval+1,f
  1582  04E1  0CC9               	rrf	___fttol@lval,f
  1583  04E2  3EFF               	addlw	-1
  1584  04E3  1D03               	skipz
  1585  04E4  2CDD               	goto	u1465
  1586  04E5  3001               	movlw	1
  1587  04E6  00C4               	movwf	??___fttol
  1588  04E7  0844               	movf	??___fttol,w
  1589  04E8  07CD               	addwf	___fttol@exp1,f
  1590  04E9  1903               	btfsc	3,2
  1591  04EA  2D07               	goto	l1154
  1592  04EB  2CDC               	goto	l1144
  1593  04EC                     l1146:	
  1594  04EC  3018               	movlw	24
  1595  04ED  024D               	subwf	___fttol@exp1,w
  1596  04EE  1C03               	skipc
  1597  04EF  2D04               	goto	l466
  1598  04F0  3000               	movlw	0
  1599  04F1  00C3               	movwf	?___fttol+3
  1600  04F2  3000               	movlw	0
  1601  04F3  00C2               	movwf	?___fttol+2
  1602  04F4  3000               	movlw	0
  1603  04F5  00C1               	movwf	?___fttol+1
  1604  04F6  3000               	movlw	0
  1605  04F7  00C0               	movwf	?___fttol
  1606  04F8  0008               	return
  1607  04F9                     l1152:	
  1608  04F9  3001               	movlw	1
  1609  04FA  00C4               	movwf	??___fttol
  1610  04FB                     u1495:	
  1611  04FB  1003               	clrc
  1612  04FC  0DC9               	rlf	___fttol@lval,f
  1613  04FD  0DCA               	rlf	___fttol@lval+1,f
  1614  04FE  0DCB               	rlf	___fttol@lval+2,f
  1615  04FF  0DCC               	rlf	___fttol@lval+3,f
  1616  0500  0BC4               	decfsz	??___fttol,f
  1617  0501  2CFB               	goto	u1495
  1618  0502  3001               	movlw	1
  1619  0503  02CD               	subwf	___fttol@exp1,f
  1620  0504                     l466:	
  1621  0504  084D               	movf	___fttol@exp1,w
  1622  0505  1D03               	btfss	3,2
  1623  0506  2CF9               	goto	l1152
  1624  0507                     l1154:	
  1625  0507  0848               	movf	___fttol@sign1,w
  1626  0508  1903               	btfsc	3,2
  1627  0509  2D15               	goto	l1158
  1628  050A  09C9               	comf	___fttol@lval,f
  1629  050B  09CA               	comf	___fttol@lval+1,f
  1630  050C  09CB               	comf	___fttol@lval+2,f
  1631  050D  09CC               	comf	___fttol@lval+3,f
  1632  050E  0AC9               	incf	___fttol@lval,f
  1633  050F  1903               	skipnz
  1634  0510  0ACA               	incf	___fttol@lval+1,f
  1635  0511  1903               	skipnz
  1636  0512  0ACB               	incf	___fttol@lval+2,f
  1637  0513  1903               	skipnz
  1638  0514  0ACC               	incf	___fttol@lval+3,f
  1639  0515                     l1158:	
  1640  0515  084C               	movf	___fttol@lval+3,w
  1641  0516  00C3               	movwf	?___fttol+3
  1642  0517  084B               	movf	___fttol@lval+2,w
  1643  0518  00C2               	movwf	?___fttol+2
  1644  0519  084A               	movf	___fttol@lval+1,w
  1645  051A  00C1               	movwf	?___fttol+1
  1646  051B  0849               	movf	___fttol@lval,w
  1647  051C  00C0               	movwf	?___fttol
  1648  051D  0008               	return
  1649  051E                     __end_of___fttol:	
  1650                           
  1651                           	psect	text9
  1652  0729                     __ptext9:	
  1653 ;; *************** function ___ftmul *****************
  1654 ;; Defined at:
  1655 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  f1              3   16[BANK0 ] float 
  1658 ;;  f2              3   19[BANK0 ] float 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  1661 ;;  sign            1   31[BANK0 ] unsigned char 
  1662 ;;  cntr            1   30[BANK0 ] unsigned char 
  1663 ;;  exp             1   26[BANK0 ] unsigned char 
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  3   16[BANK0 ] float 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       6       0       0       0
  1674 ;;      Locals:         0       6       0       0       0
  1675 ;;      Temps:          0       4       0       0       0
  1676 ;;      Totals:         0      16       0       0       0
  1677 ;;Total ram usage:       16 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    1
  1680 ;; This function calls:
  1681 ;;		___ftpack
  1682 ;; This function is called by:
  1683 ;;		_PWM1_Duty
  1684 ;;		_PWM2_Duty
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function ___ftmul
  1690  0729                     ___ftmul:	
  1691                           
  1692                           ;incstack = 0
  1693                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1694  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1695  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1696  072B  0830               	movf	___ftmul@f1,w
  1697  072C  00B6               	movwf	??___ftmul
  1698  072D  0831               	movf	___ftmul@f1+1,w
  1699  072E  00B7               	movwf	??___ftmul+1
  1700  072F  0832               	movf	___ftmul@f1+2,w
  1701  0730  00B8               	movwf	??___ftmul+2
  1702  0731  1003               	clrc
  1703  0732  0D37               	rlf	??___ftmul+1,w
  1704  0733  0D38               	rlf	??___ftmul+2,w
  1705  0734  00B9               	movwf	??___ftmul+3
  1706  0735  0839               	movf	??___ftmul+3,w
  1707  0736  00BA               	movwf	___ftmul@exp
  1708  0737  083A               	movf	___ftmul@exp,w
  1709  0738  1D03               	btfss	3,2
  1710  0739  2F41               	goto	l1076
  1711  073A  3000               	movlw	0
  1712  073B  00B0               	movwf	?___ftmul
  1713  073C  3000               	movlw	0
  1714  073D  00B1               	movwf	?___ftmul+1
  1715  073E  3000               	movlw	0
  1716  073F  00B2               	movwf	?___ftmul+2
  1717  0740  0008               	return
  1718  0741                     l1076:	
  1719  0741  0833               	movf	___ftmul@f2,w
  1720  0742  00B6               	movwf	??___ftmul
  1721  0743  0834               	movf	___ftmul@f2+1,w
  1722  0744  00B7               	movwf	??___ftmul+1
  1723  0745  0835               	movf	___ftmul@f2+2,w
  1724  0746  00B8               	movwf	??___ftmul+2
  1725  0747  1003               	clrc
  1726  0748  0D37               	rlf	??___ftmul+1,w
  1727  0749  0D38               	rlf	??___ftmul+2,w
  1728  074A  00B9               	movwf	??___ftmul+3
  1729  074B  0839               	movf	??___ftmul+3,w
  1730  074C  00BF               	movwf	___ftmul@sign
  1731  074D  083F               	movf	___ftmul@sign,w
  1732  074E  1D03               	btfss	3,2
  1733  074F  2F57               	goto	l1082
  1734  0750  3000               	movlw	0
  1735  0751  00B0               	movwf	?___ftmul
  1736  0752  3000               	movlw	0
  1737  0753  00B1               	movwf	?___ftmul+1
  1738  0754  3000               	movlw	0
  1739  0755  00B2               	movwf	?___ftmul+2
  1740  0756  0008               	return
  1741  0757                     l1082:	
  1742  0757  083F               	movf	___ftmul@sign,w
  1743  0758  3E7B               	addlw	123
  1744  0759  00B6               	movwf	??___ftmul
  1745  075A  0836               	movf	??___ftmul,w
  1746  075B  07BA               	addwf	___ftmul@exp,f
  1747  075C  0830               	movf	___ftmul@f1,w
  1748  075D  00B6               	movwf	??___ftmul
  1749  075E  0831               	movf	___ftmul@f1+1,w
  1750  075F  00B7               	movwf	??___ftmul+1
  1751  0760  0832               	movf	___ftmul@f1+2,w
  1752  0761  00B8               	movwf	??___ftmul+2
  1753  0762  3010               	movlw	16
  1754  0763                     u1305:	
  1755  0763  1003               	clrc
  1756  0764  0CB8               	rrf	??___ftmul+2,f
  1757  0765  0CB7               	rrf	??___ftmul+1,f
  1758  0766  0CB6               	rrf	??___ftmul,f
  1759  0767  3EFF               	addlw	-1
  1760  0768  1D03               	skipz
  1761  0769  2F63               	goto	u1305
  1762  076A  0836               	movf	??___ftmul,w
  1763  076B  00B9               	movwf	??___ftmul+3
  1764  076C  0839               	movf	??___ftmul+3,w
  1765  076D  00BF               	movwf	___ftmul@sign
  1766  076E  0833               	movf	___ftmul@f2,w
  1767  076F  00B6               	movwf	??___ftmul
  1768  0770  0834               	movf	___ftmul@f2+1,w
  1769  0771  00B7               	movwf	??___ftmul+1
  1770  0772  0835               	movf	___ftmul@f2+2,w
  1771  0773  00B8               	movwf	??___ftmul+2
  1772  0774  3010               	movlw	16
  1773  0775                     u1315:	
  1774  0775  1003               	clrc
  1775  0776  0CB8               	rrf	??___ftmul+2,f
  1776  0777  0CB7               	rrf	??___ftmul+1,f
  1777  0778  0CB6               	rrf	??___ftmul,f
  1778  0779  3EFF               	addlw	-1
  1779  077A  1D03               	skipz
  1780  077B  2F75               	goto	u1315
  1781  077C  0836               	movf	??___ftmul,w
  1782  077D  00B9               	movwf	??___ftmul+3
  1783  077E  0839               	movf	??___ftmul+3,w
  1784  077F  06BF               	xorwf	___ftmul@sign,f
  1785  0780  3080               	movlw	128
  1786  0781  00B6               	movwf	??___ftmul
  1787  0782  0836               	movf	??___ftmul,w
  1788  0783  05BF               	andwf	___ftmul@sign,f
  1789  0784  17B1               	bsf	___ftmul@f1+1,7
  1790  0785  17B4               	bsf	___ftmul@f2+1,7
  1791  0786  30FF               	movlw	255
  1792  0787  05B3               	andwf	___ftmul@f2,f
  1793  0788  30FF               	movlw	255
  1794  0789  05B4               	andwf	___ftmul@f2+1,f
  1795  078A  3000               	movlw	0
  1796  078B  05B5               	andwf	___ftmul@f2+2,f
  1797  078C  3000               	movlw	0
  1798  078D  00BB               	movwf	___ftmul@f3_as_product
  1799  078E  3000               	movlw	0
  1800  078F  00BC               	movwf	___ftmul@f3_as_product+1
  1801  0790  3000               	movlw	0
  1802  0791  00BD               	movwf	___ftmul@f3_as_product+2
  1803  0792  3007               	movlw	7
  1804  0793  00B6               	movwf	??___ftmul
  1805  0794  0836               	movf	??___ftmul,w
  1806  0795  00BE               	movwf	___ftmul@cntr
  1807  0796                     l1094:	
  1808  0796  1C30               	btfss	___ftmul@f1,0
  1809  0797  2FA6               	goto	l1098
  1810  0798  0833               	movf	___ftmul@f2,w
  1811  0799  07BB               	addwf	___ftmul@f3_as_product,f
  1812  079A  0834               	movf	___ftmul@f2+1,w
  1813  079B  1103               	clrz
  1814  079C  1803               	skipnc
  1815  079D  0A34               	incf	___ftmul@f2+1,w
  1816  079E  1D03               	btfss	3,2
  1817  079F  07BC               	addwf	___ftmul@f3_as_product+1,f
  1818  07A0  0835               	movf	___ftmul@f2+2,w
  1819  07A1  1103               	clrz
  1820  07A2  1803               	skipnc
  1821  07A3  0A35               	incf	___ftmul@f2+2,w
  1822  07A4  1D03               	btfss	3,2
  1823  07A5  07BD               	addwf	___ftmul@f3_as_product+2,f
  1824  07A6                     l1098:	
  1825  07A6  3001               	movlw	1
  1826  07A7                     u1345:	
  1827  07A7  1003               	clrc
  1828  07A8  0CB2               	rrf	___ftmul@f1+2,f
  1829  07A9  0CB1               	rrf	___ftmul@f1+1,f
  1830  07AA  0CB0               	rrf	___ftmul@f1,f
  1831  07AB  3EFF               	addlw	-1
  1832  07AC  1D03               	skipz
  1833  07AD  2FA7               	goto	u1345
  1834  07AE  3001               	movlw	1
  1835  07AF                     u1355:	
  1836  07AF  1003               	clrc
  1837  07B0  0DB3               	rlf	___ftmul@f2,f
  1838  07B1  0DB4               	rlf	___ftmul@f2+1,f
  1839  07B2  0DB5               	rlf	___ftmul@f2+2,f
  1840  07B3  3EFF               	addlw	-1
  1841  07B4  1D03               	skipz
  1842  07B5  2FAF               	goto	u1355
  1843  07B6  3001               	movlw	1
  1844  07B7  02BE               	subwf	___ftmul@cntr,f
  1845  07B8  1D03               	btfss	3,2
  1846  07B9  2F96               	goto	l1094
  1847  07BA  3009               	movlw	9
  1848  07BB  00B6               	movwf	??___ftmul
  1849  07BC  0836               	movf	??___ftmul,w
  1850  07BD  00BE               	movwf	___ftmul@cntr
  1851  07BE                     l1106:	
  1852  07BE  1C30               	btfss	___ftmul@f1,0
  1853  07BF  2FCE               	goto	l1110
  1854  07C0  0833               	movf	___ftmul@f2,w
  1855  07C1  07BB               	addwf	___ftmul@f3_as_product,f
  1856  07C2  0834               	movf	___ftmul@f2+1,w
  1857  07C3  1103               	clrz
  1858  07C4  1803               	skipnc
  1859  07C5  0A34               	incf	___ftmul@f2+1,w
  1860  07C6  1D03               	btfss	3,2
  1861  07C7  07BC               	addwf	___ftmul@f3_as_product+1,f
  1862  07C8  0835               	movf	___ftmul@f2+2,w
  1863  07C9  1103               	clrz
  1864  07CA  1803               	skipnc
  1865  07CB  0A35               	incf	___ftmul@f2+2,w
  1866  07CC  1D03               	btfss	3,2
  1867  07CD  07BD               	addwf	___ftmul@f3_as_product+2,f
  1868  07CE                     l1110:	
  1869  07CE  3001               	movlw	1
  1870  07CF                     u1395:	
  1871  07CF  1003               	clrc
  1872  07D0  0CB2               	rrf	___ftmul@f1+2,f
  1873  07D1  0CB1               	rrf	___ftmul@f1+1,f
  1874  07D2  0CB0               	rrf	___ftmul@f1,f
  1875  07D3  3EFF               	addlw	-1
  1876  07D4  1D03               	skipz
  1877  07D5  2FCF               	goto	u1395
  1878  07D6  3001               	movlw	1
  1879  07D7                     u1405:	
  1880  07D7  1003               	clrc
  1881  07D8  0CBD               	rrf	___ftmul@f3_as_product+2,f
  1882  07D9  0CBC               	rrf	___ftmul@f3_as_product+1,f
  1883  07DA  0CBB               	rrf	___ftmul@f3_as_product,f
  1884  07DB  3EFF               	addlw	-1
  1885  07DC  1D03               	skipz
  1886  07DD  2FD7               	goto	u1405
  1887  07DE  3001               	movlw	1
  1888  07DF  02BE               	subwf	___ftmul@cntr,f
  1889  07E0  1D03               	btfss	3,2
  1890  07E1  2FBE               	goto	l1106
  1891  07E2  083B               	movf	___ftmul@f3_as_product,w
  1892  07E3  00F0               	movwf	___ftpack@arg
  1893  07E4  083C               	movf	___ftmul@f3_as_product+1,w
  1894  07E5  00F1               	movwf	___ftpack@arg+1
  1895  07E6  083D               	movf	___ftmul@f3_as_product+2,w
  1896  07E7  00F2               	movwf	___ftpack@arg+2
  1897  07E8  083A               	movf	___ftmul@exp,w
  1898  07E9  00B6               	movwf	??___ftmul
  1899  07EA  0836               	movf	??___ftmul,w
  1900  07EB  00F3               	movwf	___ftpack@exp
  1901  07EC  083F               	movf	___ftmul@sign,w
  1902  07ED  00B7               	movwf	??___ftmul+1
  1903  07EE  0837               	movf	??___ftmul+1,w
  1904  07EF  00F4               	movwf	___ftpack@sign
  1905  07F0  120A  118A  234A   	fcall	___ftpack
  1906  07F3  0870               	movf	?___ftpack,w
  1907  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  1908  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  1909  07F6  00B0               	movwf	?___ftmul
  1910  07F7  0871               	movf	?___ftpack+1,w
  1911  07F8  00B1               	movwf	?___ftmul+1
  1912  07F9  0872               	movf	?___ftpack+2,w
  1913  07FA  00B2               	movwf	?___ftmul+2
  1914  07FB  0008               	return
  1915  07FC                     __end_of___ftmul:	
  1916                           
  1917                           	psect	text10
  1918  05AD                     __ptext10:	
  1919 ;; *************** function ___ftdiv *****************
  1920 ;; Defined at:
  1921 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  f2              3    0[BANK0 ] float 
  1924 ;;  f1              3    3[BANK0 ] float 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  f3              3   11[BANK0 ] float 
  1927 ;;  sign            1   15[BANK0 ] unsigned char 
  1928 ;;  exp             1   14[BANK0 ] unsigned char 
  1929 ;;  cntr            1   10[BANK0 ] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  3    0[BANK0 ] float 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       6       0       0       0
  1940 ;;      Locals:         0       6       0       0       0
  1941 ;;      Temps:          0       4       0       0       0
  1942 ;;      Totals:         0      16       0       0       0
  1943 ;;Total ram usage:       16 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		___ftpack
  1948 ;; This function is called by:
  1949 ;;		_PWM1_Duty
  1950 ;;		_PWM2_Duty
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function ___ftdiv
  1956  05AD                     ___ftdiv:	
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1960  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1961  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1962  05AF  0823               	movf	___ftdiv@f1,w
  1963  05B0  00A6               	movwf	??___ftdiv
  1964  05B1  0824               	movf	___ftdiv@f1+1,w
  1965  05B2  00A7               	movwf	??___ftdiv+1
  1966  05B3  0825               	movf	___ftdiv@f1+2,w
  1967  05B4  00A8               	movwf	??___ftdiv+2
  1968  05B5  1003               	clrc
  1969  05B6  0D27               	rlf	??___ftdiv+1,w
  1970  05B7  0D28               	rlf	??___ftdiv+2,w
  1971  05B8  00A9               	movwf	??___ftdiv+3
  1972  05B9  0829               	movf	??___ftdiv+3,w
  1973  05BA  00AE               	movwf	___ftdiv@exp
  1974  05BB  082E               	movf	___ftdiv@exp,w
  1975  05BC  1D03               	btfss	3,2
  1976  05BD  2DC5               	goto	l1034
  1977  05BE  3000               	movlw	0
  1978  05BF  00A0               	movwf	?___ftdiv
  1979  05C0  3000               	movlw	0
  1980  05C1  00A1               	movwf	?___ftdiv+1
  1981  05C2  3000               	movlw	0
  1982  05C3  00A2               	movwf	?___ftdiv+2
  1983  05C4  0008               	return
  1984  05C5                     l1034:	
  1985  05C5  0820               	movf	___ftdiv@f2,w
  1986  05C6  00A6               	movwf	??___ftdiv
  1987  05C7  0821               	movf	___ftdiv@f2+1,w
  1988  05C8  00A7               	movwf	??___ftdiv+1
  1989  05C9  0822               	movf	___ftdiv@f2+2,w
  1990  05CA  00A8               	movwf	??___ftdiv+2
  1991  05CB  1003               	clrc
  1992  05CC  0D27               	rlf	??___ftdiv+1,w
  1993  05CD  0D28               	rlf	??___ftdiv+2,w
  1994  05CE  00A9               	movwf	??___ftdiv+3
  1995  05CF  0829               	movf	??___ftdiv+3,w
  1996  05D0  00AF               	movwf	___ftdiv@sign
  1997  05D1  082F               	movf	___ftdiv@sign,w
  1998  05D2  1D03               	btfss	3,2
  1999  05D3  2DDB               	goto	l1040
  2000  05D4  3000               	movlw	0
  2001  05D5  00A0               	movwf	?___ftdiv
  2002  05D6  3000               	movlw	0
  2003  05D7  00A1               	movwf	?___ftdiv+1
  2004  05D8  3000               	movlw	0
  2005  05D9  00A2               	movwf	?___ftdiv+2
  2006  05DA  0008               	return
  2007  05DB                     l1040:	
  2008  05DB  3000               	movlw	0
  2009  05DC  00AB               	movwf	___ftdiv@f3
  2010  05DD  3000               	movlw	0
  2011  05DE  00AC               	movwf	___ftdiv@f3+1
  2012  05DF  3000               	movlw	0
  2013  05E0  00AD               	movwf	___ftdiv@f3+2
  2014  05E1  3089               	movlw	137
  2015  05E2  072F               	addwf	___ftdiv@sign,w
  2016  05E3  00A6               	movwf	??___ftdiv
  2017  05E4  0826               	movf	??___ftdiv,w
  2018  05E5  02AE               	subwf	___ftdiv@exp,f
  2019  05E6  0823               	movf	___ftdiv@f1,w
  2020  05E7  00A6               	movwf	??___ftdiv
  2021  05E8  0824               	movf	___ftdiv@f1+1,w
  2022  05E9  00A7               	movwf	??___ftdiv+1
  2023  05EA  0825               	movf	___ftdiv@f1+2,w
  2024  05EB  00A8               	movwf	??___ftdiv+2
  2025  05EC  3010               	movlw	16
  2026  05ED                     u1225:	
  2027  05ED  1003               	clrc
  2028  05EE  0CA8               	rrf	??___ftdiv+2,f
  2029  05EF  0CA7               	rrf	??___ftdiv+1,f
  2030  05F0  0CA6               	rrf	??___ftdiv,f
  2031  05F1  3EFF               	addlw	-1
  2032  05F2  1D03               	skipz
  2033  05F3  2DED               	goto	u1225
  2034  05F4  0826               	movf	??___ftdiv,w
  2035  05F5  00A9               	movwf	??___ftdiv+3
  2036  05F6  0829               	movf	??___ftdiv+3,w
  2037  05F7  00AF               	movwf	___ftdiv@sign
  2038  05F8  0820               	movf	___ftdiv@f2,w
  2039  05F9  00A6               	movwf	??___ftdiv
  2040  05FA  0821               	movf	___ftdiv@f2+1,w
  2041  05FB  00A7               	movwf	??___ftdiv+1
  2042  05FC  0822               	movf	___ftdiv@f2+2,w
  2043  05FD  00A8               	movwf	??___ftdiv+2
  2044  05FE  3010               	movlw	16
  2045  05FF                     u1235:	
  2046  05FF  1003               	clrc
  2047  0600  0CA8               	rrf	??___ftdiv+2,f
  2048  0601  0CA7               	rrf	??___ftdiv+1,f
  2049  0602  0CA6               	rrf	??___ftdiv,f
  2050  0603  3EFF               	addlw	-1
  2051  0604  1D03               	skipz
  2052  0605  2DFF               	goto	u1235
  2053  0606  0826               	movf	??___ftdiv,w
  2054  0607  00A9               	movwf	??___ftdiv+3
  2055  0608  0829               	movf	??___ftdiv+3,w
  2056  0609  06AF               	xorwf	___ftdiv@sign,f
  2057  060A  3080               	movlw	128
  2058  060B  00A6               	movwf	??___ftdiv
  2059  060C  0826               	movf	??___ftdiv,w
  2060  060D  05AF               	andwf	___ftdiv@sign,f
  2061  060E  17A4               	bsf	___ftdiv@f1+1,7
  2062  060F  30FF               	movlw	255
  2063  0610  05A3               	andwf	___ftdiv@f1,f
  2064  0611  30FF               	movlw	255
  2065  0612  05A4               	andwf	___ftdiv@f1+1,f
  2066  0613  3000               	movlw	0
  2067  0614  05A5               	andwf	___ftdiv@f1+2,f
  2068  0615  17A1               	bsf	___ftdiv@f2+1,7
  2069  0616  30FF               	movlw	255
  2070  0617  05A0               	andwf	___ftdiv@f2,f
  2071  0618  30FF               	movlw	255
  2072  0619  05A1               	andwf	___ftdiv@f2+1,f
  2073  061A  3000               	movlw	0
  2074  061B  05A2               	andwf	___ftdiv@f2+2,f
  2075  061C  3018               	movlw	24
  2076  061D  00A6               	movwf	??___ftdiv
  2077  061E  0826               	movf	??___ftdiv,w
  2078  061F  00AA               	movwf	___ftdiv@cntr
  2079  0620                     l1054:	
  2080  0620  3001               	movlw	1
  2081  0621                     u1245:	
  2082  0621  1003               	clrc
  2083  0622  0DAB               	rlf	___ftdiv@f3,f
  2084  0623  0DAC               	rlf	___ftdiv@f3+1,f
  2085  0624  0DAD               	rlf	___ftdiv@f3+2,f
  2086  0625  3EFF               	addlw	-1
  2087  0626  1D03               	skipz
  2088  0627  2E21               	goto	u1245
  2089  0628  0822               	movf	___ftdiv@f2+2,w
  2090  0629  0225               	subwf	___ftdiv@f1+2,w
  2091  062A  1D03               	skipz
  2092  062B  2E32               	goto	u1255
  2093  062C  0821               	movf	___ftdiv@f2+1,w
  2094  062D  0224               	subwf	___ftdiv@f1+1,w
  2095  062E  1D03               	skipz
  2096  062F  2E32               	goto	u1255
  2097  0630  0820               	movf	___ftdiv@f2,w
  2098  0631  0223               	subwf	___ftdiv@f1,w
  2099  0632                     u1255:	
  2100  0632  1C03               	skipc
  2101  0633  2E3F               	goto	l1062
  2102  0634  0820               	movf	___ftdiv@f2,w
  2103  0635  02A3               	subwf	___ftdiv@f1,f
  2104  0636  0821               	movf	___ftdiv@f2+1,w
  2105  0637  1C03               	skipc
  2106  0638  0F21               	incfsz	___ftdiv@f2+1,w
  2107  0639  02A4               	subwf	___ftdiv@f1+1,f
  2108  063A  0822               	movf	___ftdiv@f2+2,w
  2109  063B  1C03               	skipc
  2110  063C  0A22               	incf	___ftdiv@f2+2,w
  2111  063D  02A5               	subwf	___ftdiv@f1+2,f
  2112  063E  142B               	bsf	___ftdiv@f3,0
  2113  063F                     l1062:	
  2114  063F  3001               	movlw	1
  2115  0640                     u1265:	
  2116  0640  1003               	clrc
  2117  0641  0DA3               	rlf	___ftdiv@f1,f
  2118  0642  0DA4               	rlf	___ftdiv@f1+1,f
  2119  0643  0DA5               	rlf	___ftdiv@f1+2,f
  2120  0644  3EFF               	addlw	-1
  2121  0645  1D03               	skipz
  2122  0646  2E40               	goto	u1265
  2123  0647  3001               	movlw	1
  2124  0648  02AA               	subwf	___ftdiv@cntr,f
  2125  0649  1D03               	btfss	3,2
  2126  064A  2E20               	goto	l1054
  2127  064B  082B               	movf	___ftdiv@f3,w
  2128  064C  00F0               	movwf	___ftpack@arg
  2129  064D  082C               	movf	___ftdiv@f3+1,w
  2130  064E  00F1               	movwf	___ftpack@arg+1
  2131  064F  082D               	movf	___ftdiv@f3+2,w
  2132  0650  00F2               	movwf	___ftpack@arg+2
  2133  0651  082E               	movf	___ftdiv@exp,w
  2134  0652  00A6               	movwf	??___ftdiv
  2135  0653  0826               	movf	??___ftdiv,w
  2136  0654  00F3               	movwf	___ftpack@exp
  2137  0655  082F               	movf	___ftdiv@sign,w
  2138  0656  00A7               	movwf	??___ftdiv+1
  2139  0657  0827               	movf	??___ftdiv+1,w
  2140  0658  00F4               	movwf	___ftpack@sign
  2141  0659  120A  118A  234A   	fcall	___ftpack
  2142  065C  0870               	movf	?___ftpack,w
  2143  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2144  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2145  065F  00A0               	movwf	?___ftdiv
  2146  0660  0871               	movf	?___ftpack+1,w
  2147  0661  00A1               	movwf	?___ftdiv+1
  2148  0662  0872               	movf	?___ftpack+2,w
  2149  0663  00A2               	movwf	?___ftdiv+2
  2150  0664  0008               	return
  2151  0665                     __end_of___ftdiv:	
  2152                           
  2153                           	psect	text11
  2154  027A                     __ptext11:	
  2155 ;; *************** function ___awtoft *****************
  2156 ;; Defined at:
  2157 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  c               2    8[BANK0 ] int 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  sign            1   13[COMMON] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  3    8[BANK0 ] float 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       3       0       0       0
  2172 ;;      Locals:         1       0       0       0       0
  2173 ;;      Temps:          0       2       0       0       0
  2174 ;;      Totals:         1       5       0       0       0
  2175 ;;Total ram usage:        6 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    1
  2178 ;; This function calls:
  2179 ;;		___ftpack
  2180 ;; This function is called by:
  2181 ;;		_PWM1_Duty
  2182 ;;		_PWM2_Duty
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function ___awtoft
  2188  027A                     ___awtoft:	
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2192  027A  01FD               	clrf	___awtoft@sign
  2193  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2194  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2195  027D  1FA9               	btfss	___awtoft@c+1,7
  2196  027E  2A86               	goto	l1024
  2197  027F  09A8               	comf	___awtoft@c,f
  2198  0280  09A9               	comf	___awtoft@c+1,f
  2199  0281  0AA8               	incf	___awtoft@c,f
  2200  0282  1903               	skipnz
  2201  0283  0AA9               	incf	___awtoft@c+1,f
  2202  0284  01FD               	clrf	___awtoft@sign
  2203  0285  0AFD               	incf	___awtoft@sign,f
  2204  0286                     l1024:	
  2205  0286  0828               	movf	___awtoft@c,w
  2206  0287  00F0               	movwf	___ftpack@arg
  2207  0288  0829               	movf	___awtoft@c+1,w
  2208  0289  00F1               	movwf	___ftpack@arg+1
  2209  028A  01F2               	clrf	___ftpack@arg+2
  2210  028B  308E               	movlw	142
  2211  028C  00AB               	movwf	??___awtoft
  2212  028D  082B               	movf	??___awtoft,w
  2213  028E  00F3               	movwf	___ftpack@exp
  2214  028F  087D               	movf	___awtoft@sign,w
  2215  0290  00AC               	movwf	??___awtoft+1
  2216  0291  082C               	movf	??___awtoft+1,w
  2217  0292  00F4               	movwf	___ftpack@sign
  2218  0293  120A  118A  234A   	fcall	___ftpack
  2219  0296  0870               	movf	?___ftpack,w
  2220  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0299  00A8               	movwf	?___awtoft
  2223  029A  0871               	movf	?___ftpack+1,w
  2224  029B  00A9               	movwf	?___awtoft+1
  2225  029C  0872               	movf	?___ftpack+2,w
  2226  029D  00AA               	movwf	?___awtoft+2
  2227  029E  0008               	return
  2228  029F                     __end_of___awtoft:	
  2229                           
  2230                           	psect	text12
  2231  034A                     __ptext12:	
  2232 ;; *************** function ___ftpack *****************
  2233 ;; Defined at:
  2234 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  arg             3    0[COMMON] unsigned um
  2237 ;;  exp             1    3[COMMON] unsigned char 
  2238 ;;  sign            1    4[COMMON] unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  3    0[COMMON] float 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         5       0       0       0       0
  2251 ;;      Locals:         0       0       0       0       0
  2252 ;;      Temps:          3       0       0       0       0
  2253 ;;      Totals:         8       0       0       0       0
  2254 ;;Total ram usage:        8 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		___awtoft
  2260 ;;		___ftdiv
  2261 ;;		___ftmul
  2262 ;;		___lwtoft
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           
  2267                           ;psect for function ___ftpack
  2268  034A                     ___ftpack:	
  2269                           
  2270                           ;incstack = 0
  2271                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2272  034A  0873               	movf	___ftpack@exp,w
  2273  034B  1903               	btfsc	3,2
  2274  034C  2B52               	goto	l944
  2275  034D  0872               	movf	___ftpack@arg+2,w
  2276  034E  0471               	iorwf	___ftpack@arg+1,w
  2277  034F  0470               	iorwf	___ftpack@arg,w
  2278  0350  1D03               	skipz
  2279  0351  2B65               	goto	l950
  2280  0352                     l944:	
  2281  0352  3000               	movlw	0
  2282  0353  00F0               	movwf	?___ftpack
  2283  0354  3000               	movlw	0
  2284  0355  00F1               	movwf	?___ftpack+1
  2285  0356  3000               	movlw	0
  2286  0357  00F2               	movwf	?___ftpack+2
  2287  0358  0008               	return
  2288  0359                     l948:	
  2289  0359  3001               	movlw	1
  2290  035A  00F5               	movwf	??___ftpack
  2291  035B  0875               	movf	??___ftpack,w
  2292  035C  07F3               	addwf	___ftpack@exp,f
  2293  035D  3001               	movlw	1
  2294  035E                     u985:	
  2295  035E  1003               	clrc
  2296  035F  0CF2               	rrf	___ftpack@arg+2,f
  2297  0360  0CF1               	rrf	___ftpack@arg+1,f
  2298  0361  0CF0               	rrf	___ftpack@arg,f
  2299  0362  3EFF               	addlw	-1
  2300  0363  1D03               	skipz
  2301  0364  2B5E               	goto	u985
  2302  0365                     l950:	
  2303  0365  30FE               	movlw	254
  2304  0366  0572               	andwf	___ftpack@arg+2,w
  2305  0367  1903               	btfsc	3,2
  2306  0368  2B80               	goto	l375
  2307  0369  2B59               	goto	l948
  2308  036A                     l952:	
  2309  036A  3001               	movlw	1
  2310  036B  00F5               	movwf	??___ftpack
  2311  036C  0875               	movf	??___ftpack,w
  2312  036D  07F3               	addwf	___ftpack@exp,f
  2313  036E  3001               	movlw	1
  2314  036F  07F0               	addwf	___ftpack@arg,f
  2315  0370  3000               	movlw	0
  2316  0371  1803               	skipnc
  2317  0372  3001               	movlw	1
  2318  0373  07F1               	addwf	___ftpack@arg+1,f
  2319  0374  3000               	movlw	0
  2320  0375  1803               	skipnc
  2321  0376  3001               	movlw	1
  2322  0377  07F2               	addwf	___ftpack@arg+2,f
  2323  0378  3001               	movlw	1
  2324  0379                     u1005:	
  2325  0379  1003               	clrc
  2326  037A  0CF2               	rrf	___ftpack@arg+2,f
  2327  037B  0CF1               	rrf	___ftpack@arg+1,f
  2328  037C  0CF0               	rrf	___ftpack@arg,f
  2329  037D  3EFF               	addlw	-1
  2330  037E  1D03               	skipz
  2331  037F  2B79               	goto	u1005
  2332  0380                     l375:	
  2333  0380  30FF               	movlw	255
  2334  0381  0572               	andwf	___ftpack@arg+2,w
  2335  0382  1903               	btfsc	3,2
  2336  0383  2B8F               	goto	l960
  2337  0384  2B6A               	goto	l952
  2338  0385                     l958:	
  2339  0385  3001               	movlw	1
  2340  0386  02F3               	subwf	___ftpack@exp,f
  2341  0387  3001               	movlw	1
  2342  0388                     u1025:	
  2343  0388  1003               	clrc
  2344  0389  0DF0               	rlf	___ftpack@arg,f
  2345  038A  0DF1               	rlf	___ftpack@arg+1,f
  2346  038B  0DF2               	rlf	___ftpack@arg+2,f
  2347  038C  3EFF               	addlw	-1
  2348  038D  1D03               	skipz
  2349  038E  2B88               	goto	u1025
  2350  038F                     l960:	
  2351  038F  1BF1               	btfsc	___ftpack@arg+1,7
  2352  0390  2B95               	goto	l382
  2353  0391  3002               	movlw	2
  2354  0392  0273               	subwf	___ftpack@exp,w
  2355  0393  1803               	skipnc
  2356  0394  2B85               	goto	l958
  2357  0395                     l382:	
  2358  0395  1873               	btfsc	___ftpack@exp,0
  2359  0396  2B9D               	goto	l383
  2360  0397  30FF               	movlw	255
  2361  0398  05F0               	andwf	___ftpack@arg,f
  2362  0399  307F               	movlw	127
  2363  039A  05F1               	andwf	___ftpack@arg+1,f
  2364  039B  30FF               	movlw	255
  2365  039C  05F2               	andwf	___ftpack@arg+2,f
  2366  039D                     l383:	
  2367  039D  1003               	clrc
  2368  039E  0CF3               	rrf	___ftpack@exp,f
  2369  039F  0873               	movf	___ftpack@exp,w
  2370  03A0  00F5               	movwf	??___ftpack
  2371  03A1  01F6               	clrf	??___ftpack+1
  2372  03A2  01F7               	clrf	??___ftpack+2
  2373  03A3  3010               	movlw	16
  2374  03A4                     u1065:	
  2375  03A4  1003               	clrc
  2376  03A5  0DF5               	rlf	??___ftpack,f
  2377  03A6  0DF6               	rlf	??___ftpack+1,f
  2378  03A7  0DF7               	rlf	??___ftpack+2,f
  2379  03A8  3EFF               	addlw	-1
  2380  03A9  1D03               	skipz
  2381  03AA  2BA4               	goto	u1065
  2382  03AB  0875               	movf	??___ftpack,w
  2383  03AC  04F0               	iorwf	___ftpack@arg,f
  2384  03AD  0876               	movf	??___ftpack+1,w
  2385  03AE  04F1               	iorwf	___ftpack@arg+1,f
  2386  03AF  0877               	movf	??___ftpack+2,w
  2387  03B0  04F2               	iorwf	___ftpack@arg+2,f
  2388  03B1  0874               	movf	___ftpack@sign,w
  2389  03B2  1903               	btfsc	3,2
  2390  03B3  0008               	return
  2391  03B4  17F2               	bsf	___ftpack@arg+2,7
  2392  03B5  0008               	return
  2393  03B6                     __end_of___ftpack:	
  2394                           
  2395                           	psect	text13
  2396  029F                     __ptext13:	
  2397 ;; *************** function _PWM_Max_Duty *****************
  2398 ;; Defined at:
  2399 ;;		line 37 in file "FINAL2.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  2    6[BANK0 ] int 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       2       0       0       0
  2414 ;;      Locals:         0       0       0       0       0
  2415 ;;      Temps:          4       0       0       0       0
  2416 ;;      Totals:         4       2       0       0       0
  2417 ;;Total ram usage:        6 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    1
  2420 ;; This function calls:
  2421 ;;		___aldiv
  2422 ;; This function is called by:
  2423 ;;		_PWM1_Duty
  2424 ;;		_PWM2_Duty
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _PWM_Max_Duty
  2430  029F                     _PWM_Max_Duty:	
  2431                           
  2432                           ;FINAL2.c: 39: return(16000000/(freq*4));
  2433                           
  2434                           ;incstack = 0
  2435                           ; Regs used in _PWM_Max_Duty: [wreg+status,2+status,0+pclath+cstack]
  2436  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2437  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2438  02A1  0858               	movf	_freq,w
  2439  02A2  00F9               	movwf	??_PWM_Max_Duty
  2440  02A3  0859               	movf	_freq+1,w
  2441  02A4  00FA               	movwf	??_PWM_Max_Duty+1
  2442  02A5  085A               	movf	_freq+2,w
  2443  02A6  00FB               	movwf	??_PWM_Max_Duty+2
  2444  02A7  085B               	movf	_freq+3,w
  2445  02A8  00FC               	movwf	??_PWM_Max_Duty+3
  2446  02A9  3002               	movlw	2
  2447  02AA                     u1185:	
  2448  02AA  1003               	clrc
  2449  02AB  0DF9               	rlf	??_PWM_Max_Duty,f
  2450  02AC  0DFA               	rlf	??_PWM_Max_Duty+1,f
  2451  02AD  0DFB               	rlf	??_PWM_Max_Duty+2,f
  2452  02AE  0DFC               	rlf	??_PWM_Max_Duty+3,f
  2453  02AF  3EFF               	addlw	-1
  2454  02B0  1D03               	skipz
  2455  02B1  2AAA               	goto	u1185
  2456  02B2  087C               	movf	??_PWM_Max_Duty+3,w
  2457  02B3  00F3               	movwf	___aldiv@divisor+3
  2458  02B4  087B               	movf	??_PWM_Max_Duty+2,w
  2459  02B5  00F2               	movwf	___aldiv@divisor+2
  2460  02B6  087A               	movf	??_PWM_Max_Duty+1,w
  2461  02B7  00F1               	movwf	___aldiv@divisor+1
  2462  02B8  0879               	movf	??_PWM_Max_Duty,w
  2463  02B9  00F0               	movwf	___aldiv@divisor
  2464  02BA  3000               	movlw	0
  2465  02BB  00F7               	movwf	___aldiv@dividend+3
  2466  02BC  30F4               	movlw	244
  2467  02BD  00F6               	movwf	___aldiv@dividend+2
  2468  02BE  3024               	movlw	36
  2469  02BF  00F5               	movwf	___aldiv@dividend+1
  2470  02C0  3000               	movlw	0
  2471  02C1  00F4               	movwf	___aldiv@dividend
  2472  02C2  120A  118A  251E   	fcall	___aldiv
  2473  02C5  0871               	movf	?___aldiv+1,w
  2474  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2475  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2476  02C8  00A7               	movwf	?_PWM_Max_Duty+1
  2477  02C9  0870               	movf	?___aldiv,w
  2478  02CA  00A6               	movwf	?_PWM_Max_Duty
  2479  02CB  0008               	return
  2480  02CC                     __end_of_PWM_Max_Duty:	
  2481                           
  2482                           	psect	text14
  2483  051E                     __ptext14:	
  2484 ;; *************** function ___aldiv *****************
  2485 ;; Defined at:
  2486 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  divisor         4    0[COMMON] long 
  2489 ;;  dividend        4    4[COMMON] long 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  quotient        4    2[BANK0 ] long 
  2492 ;;  sign            1    1[BANK0 ] unsigned char 
  2493 ;;  counter         1    0[BANK0 ] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  4    0[COMMON] long 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2503 ;;      Params:         8       0       0       0       0
  2504 ;;      Locals:         0       6       0       0       0
  2505 ;;      Temps:          1       0       0       0       0
  2506 ;;      Totals:         9       6       0       0       0
  2507 ;;Total ram usage:       15 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_PWM_Max_Duty
  2513 ;;		_PWM1_Init
  2514 ;;		_PWM2_Init
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function ___aldiv
  2520  051E                     ___aldiv:	
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2524  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2525  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0520  01A1               	clrf	___aldiv@sign
  2527  0521  1FF3               	btfss	___aldiv@divisor+3,7
  2528  0522  2D30               	goto	l269
  2529  0523  09F0               	comf	___aldiv@divisor,f
  2530  0524  09F1               	comf	___aldiv@divisor+1,f
  2531  0525  09F2               	comf	___aldiv@divisor+2,f
  2532  0526  09F3               	comf	___aldiv@divisor+3,f
  2533  0527  0AF0               	incf	___aldiv@divisor,f
  2534  0528  1903               	skipnz
  2535  0529  0AF1               	incf	___aldiv@divisor+1,f
  2536  052A  1903               	skipnz
  2537  052B  0AF2               	incf	___aldiv@divisor+2,f
  2538  052C  1903               	skipnz
  2539  052D  0AF3               	incf	___aldiv@divisor+3,f
  2540  052E  01A1               	clrf	___aldiv@sign
  2541  052F  0AA1               	incf	___aldiv@sign,f
  2542  0530                     l269:	
  2543  0530  1FF7               	btfss	___aldiv@dividend+3,7
  2544  0531  2D41               	goto	l982
  2545  0532  09F4               	comf	___aldiv@dividend,f
  2546  0533  09F5               	comf	___aldiv@dividend+1,f
  2547  0534  09F6               	comf	___aldiv@dividend+2,f
  2548  0535  09F7               	comf	___aldiv@dividend+3,f
  2549  0536  0AF4               	incf	___aldiv@dividend,f
  2550  0537  1903               	skipnz
  2551  0538  0AF5               	incf	___aldiv@dividend+1,f
  2552  0539  1903               	skipnz
  2553  053A  0AF6               	incf	___aldiv@dividend+2,f
  2554  053B  1903               	skipnz
  2555  053C  0AF7               	incf	___aldiv@dividend+3,f
  2556  053D  3001               	movlw	1
  2557  053E  00F8               	movwf	??___aldiv
  2558  053F  0878               	movf	??___aldiv,w
  2559  0540  06A1               	xorwf	___aldiv@sign,f
  2560  0541                     l982:	
  2561  0541  3000               	movlw	0
  2562  0542  00A5               	movwf	___aldiv@quotient+3
  2563  0543  3000               	movlw	0
  2564  0544  00A4               	movwf	___aldiv@quotient+2
  2565  0545  3000               	movlw	0
  2566  0546  00A3               	movwf	___aldiv@quotient+1
  2567  0547  3000               	movlw	0
  2568  0548  00A2               	movwf	___aldiv@quotient
  2569  0549  0873               	movf	___aldiv@divisor+3,w
  2570  054A  0472               	iorwf	___aldiv@divisor+2,w
  2571  054B  0471               	iorwf	___aldiv@divisor+1,w
  2572  054C  0470               	iorwf	___aldiv@divisor,w
  2573  054D  1903               	skipnz
  2574  054E  2D96               	goto	l1004
  2575  054F  01A0               	clrf	___aldiv@counter
  2576  0550  0AA0               	incf	___aldiv@counter,f
  2577  0551                     l990:	
  2578  0551  1BF3               	btfsc	___aldiv@divisor+3,7
  2579  0552  2D61               	goto	l992
  2580  0553  3001               	movlw	1
  2581  0554  00F8               	movwf	??___aldiv
  2582  0555                     u1115:	
  2583  0555  1003               	clrc
  2584  0556  0DF0               	rlf	___aldiv@divisor,f
  2585  0557  0DF1               	rlf	___aldiv@divisor+1,f
  2586  0558  0DF2               	rlf	___aldiv@divisor+2,f
  2587  0559  0DF3               	rlf	___aldiv@divisor+3,f
  2588  055A  0BF8               	decfsz	??___aldiv,f
  2589  055B  2D55               	goto	u1115
  2590  055C  3001               	movlw	1
  2591  055D  00F8               	movwf	??___aldiv
  2592  055E  0878               	movf	??___aldiv,w
  2593  055F  07A0               	addwf	___aldiv@counter,f
  2594  0560  2D51               	goto	l990
  2595  0561                     l992:	
  2596  0561  3001               	movlw	1
  2597  0562  00F8               	movwf	??___aldiv
  2598  0563                     u1135:	
  2599  0563  1003               	clrc
  2600  0564  0DA2               	rlf	___aldiv@quotient,f
  2601  0565  0DA3               	rlf	___aldiv@quotient+1,f
  2602  0566  0DA4               	rlf	___aldiv@quotient+2,f
  2603  0567  0DA5               	rlf	___aldiv@quotient+3,f
  2604  0568  0BF8               	decfsz	??___aldiv,f
  2605  0569  2D63               	goto	u1135
  2606  056A  0873               	movf	___aldiv@divisor+3,w
  2607  056B  0277               	subwf	___aldiv@dividend+3,w
  2608  056C  1D03               	skipz
  2609  056D  2D78               	goto	u1145
  2610  056E  0872               	movf	___aldiv@divisor+2,w
  2611  056F  0276               	subwf	___aldiv@dividend+2,w
  2612  0570  1D03               	skipz
  2613  0571  2D78               	goto	u1145
  2614  0572  0871               	movf	___aldiv@divisor+1,w
  2615  0573  0275               	subwf	___aldiv@dividend+1,w
  2616  0574  1D03               	skipz
  2617  0575  2D78               	goto	u1145
  2618  0576  0870               	movf	___aldiv@divisor,w
  2619  0577  0274               	subwf	___aldiv@dividend,w
  2620  0578                     u1145:	
  2621  0578  1C03               	skipc
  2622  0579  2D89               	goto	l1000
  2623  057A  0870               	movf	___aldiv@divisor,w
  2624  057B  02F4               	subwf	___aldiv@dividend,f
  2625  057C  0871               	movf	___aldiv@divisor+1,w
  2626  057D  1C03               	skipc
  2627  057E  0F71               	incfsz	___aldiv@divisor+1,w
  2628  057F  02F5               	subwf	___aldiv@dividend+1,f
  2629  0580  0872               	movf	___aldiv@divisor+2,w
  2630  0581  1C03               	skipc
  2631  0582  0F72               	incfsz	___aldiv@divisor+2,w
  2632  0583  02F6               	subwf	___aldiv@dividend+2,f
  2633  0584  0873               	movf	___aldiv@divisor+3,w
  2634  0585  1C03               	skipc
  2635  0586  0F73               	incfsz	___aldiv@divisor+3,w
  2636  0587  02F7               	subwf	___aldiv@dividend+3,f
  2637  0588  1422               	bsf	___aldiv@quotient,0
  2638  0589                     l1000:	
  2639  0589  3001               	movlw	1
  2640  058A                     u1155:	
  2641  058A  1003               	clrc
  2642  058B  0CF3               	rrf	___aldiv@divisor+3,f
  2643  058C  0CF2               	rrf	___aldiv@divisor+2,f
  2644  058D  0CF1               	rrf	___aldiv@divisor+1,f
  2645  058E  0CF0               	rrf	___aldiv@divisor,f
  2646  058F  3EFF               	addlw	-1
  2647  0590  1D03               	skipz
  2648  0591  2D8A               	goto	u1155
  2649  0592  3001               	movlw	1
  2650  0593  02A0               	subwf	___aldiv@counter,f
  2651  0594  1D03               	btfss	3,2
  2652  0595  2D61               	goto	l992
  2653  0596                     l1004:	
  2654  0596  0821               	movf	___aldiv@sign,w
  2655  0597  1903               	btfsc	3,2
  2656  0598  2DA4               	goto	l1008
  2657  0599  09A2               	comf	___aldiv@quotient,f
  2658  059A  09A3               	comf	___aldiv@quotient+1,f
  2659  059B  09A4               	comf	___aldiv@quotient+2,f
  2660  059C  09A5               	comf	___aldiv@quotient+3,f
  2661  059D  0AA2               	incf	___aldiv@quotient,f
  2662  059E  1903               	skipnz
  2663  059F  0AA3               	incf	___aldiv@quotient+1,f
  2664  05A0  1903               	skipnz
  2665  05A1  0AA4               	incf	___aldiv@quotient+2,f
  2666  05A2  1903               	skipnz
  2667  05A3  0AA5               	incf	___aldiv@quotient+3,f
  2668  05A4                     l1008:	
  2669  05A4  0825               	movf	___aldiv@quotient+3,w
  2670  05A5  00F3               	movwf	?___aldiv+3
  2671  05A6  0824               	movf	___aldiv@quotient+2,w
  2672  05A7  00F2               	movwf	?___aldiv+2
  2673  05A8  0823               	movf	___aldiv@quotient+1,w
  2674  05A9  00F1               	movwf	?___aldiv+1
  2675  05AA  0822               	movf	___aldiv@quotient,w
  2676  05AB  00F0               	movwf	?___aldiv
  2677  05AC  0008               	return
  2678  05AD                     __end_of___aldiv:	
  2679  007E                     btemp	set	126	;btemp
  2680  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     56      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _PWM2_Init->___aldiv
    _PWM2_Duty->___awtoft
    _PWM1_Init->___aldiv
    _PWM1_Duty->___awtoft
    ___lwtoft->___ftpack
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___lwtoft
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK0

    _main->_PWM1_Duty
    _main->_PWM2_Duty
    _PWM2_Init->___aldiv
    _PWM2_Duty->___fttol
    _PWM1_Init->___aldiv
    _PWM1_Duty->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___awtoft->_PWM_Max_Duty
    _PWM_Max_Duty->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   20104
                                             50 BANK0      6     6      0
                          _PWM1_Duty
                          _PWM1_Init
                         _PWM1_Start
                          _PWM2_Duty
                          _PWM2_Init
                         _PWM2_Start
 ---------------------------------------------------------------------------------
 (1) _PWM2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM2_Duty                                            4     2      2    9301
                                             46 BANK0      4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     4      4     715
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM1_Duty                                            4     2      2    9301
                                             46 BANK0      4     2      2
                       _PWM_Max_Duty
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1835
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             32 BANK0     14    10      4
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2245
                                             16 BANK0     16    10      6
                       _PWM_Max_Duty (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2199
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1904
                                             13 COMMON     1     1      0
                                              8 BANK0      5     2      3
                       _PWM_Max_Duty (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) _PWM_Max_Duty                                         6     4      2     618
                                              9 COMMON     4     4      0
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     618
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   _PWM2_Duty
     _PWM_Max_Duty
       ___aldiv
     ___awtoft
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___ftpack (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       _PWM_Max_Duty (ARG)
         ___aldiv
       ___awtoft (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         _PWM_Max_Duty (ARG)
           ___aldiv
         ___awtoft (ARG)
           _PWM_Max_Duty (ARG)
             ___aldiv
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM2_Init
     ___aldiv
   _PWM2_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     38      3C       5       75.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4A      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jan 05 18:17:38 2019

            __CFG_CP$OFF 0000              __CFG_LVP$ON 0000                      l101 0690  
                    l102 06F7                      l111 06AC                      l103 0697  
                    l121 06D8                      l113 06B1                      l105 069C  
                    l123 06E1                      l115 06BC                      l107 06A0  
                    l125 06EC                      l117 06C4                      l109 06A5  
                    l119 06CD                      l269 0530                      l382 0395  
                    l383 039D                      l375 0380                      l466 0504  
                    l950 0365                      l960 038F                      l952 036A  
                    l944 0352                      l948 0359                      l990 0551  
                    l982 0541                      l958 0385                      l992 0561  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RD1 0041                      _RB6 0036                      _RD2 0042  
                    _RB7 0037                      _RD3 0043                      _RD4 0044  
                    _PR2 0092             __CFG_CPD$OFF 0000                      u985 035E  
           __CFG_FOSC$HS 0000             ___ftdiv@cntr 002A             ___ftdiv@sign 002F  
                   l1000 0589                     l1004 0596                     l1110 07CE  
                   l1008 05A4                     l1024 0286                     l1040 05DB  
                   l1034 05C5                     l1106 07BE                     l1062 063F  
                   l1054 0620                     l1126 04AA                     l1206 0689  
                   l1152 04F9                     l1144 04DC                     l1082 0757  
                   l1154 0507                     l1146 04EC                     l1076 0741  
                   l1094 0796                     l1158 0515                     l1182 0416  
                   l1192 0483                     l1098 07A6                     u1005 0379  
                   u1025 0388                     u1115 0555                     u1135 0563  
                   u1145 0578                     u1065 03A4                     u1225 05ED  
                   u1305 0763                     u1155 058A                     u1235 05FF  
                   u1315 0775                     u1245 0621                     u1405 07D7  
                   u1255 0632                     u1185 02AA                     u1265 0640  
                   u1345 07A7                     u1355 07AF                     u1435 04B1  
                   u1525 02D7                     u1535 02E0                     u1560 0413  
                   u1465 04DD                     u1545 0316                     u1395 07CF  
                   u1555 031F                     u1580 0480                     u1495 04FB  
                   u1917 06FD             _PWM_Max_Duty 029F             __CFG_WRT$OFF 0000  
                   _main 0665                     _freq 0058             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     btemp 007E                     start 0000  
           ___ftmul@cntr 003E             ___ftmul@sign 003F             ___fttol@exp1 004D  
           ___fttol@lval 0049          __end_of___aldiv 05AD                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC                    _CCP2X 00ED  
                  _CCP2Y 00EC            __CFG_WDTE$OFF 0000          __end_of___ftdiv 0665  
        __end_of___ftmul 07FC          __end_of___fttol 051E                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088            __CFG_PWRTE$ON 0000  
     __size_of_PWM1_Init 003F       __size_of_PWM1_Duty 006D              ?_PWM1_Start 0070  
     __size_of_PWM2_Init 003F       __size_of_PWM2_Duty 006D              ?_PWM2_Start 0070  
          ___awtoft@sign 007D            ___ftpack@sign 0074           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0729                   ??_main 0052            ___fttol@sign1 0048  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _CCPR1L 0015                   _CCPR2L 001B  
       __end_of___awtoft 029F         __end_of___ftpack 03B6         __end_of___lwtoft 027A  
                 _TMR2ON 0092                   _TRISC1 0439                   _TRISC2 043A  
      __end_of_PWM1_Init 030B        __end_of_PWM1_Duty 0423        __end_of_PWM2_Init 034A  
      __end_of_PWM2_Duty 0490                ??___aldiv 0078      __size_of_PWM1_Start 0009  
              ??___ftdiv 0026      __size_of_PWM2_Start 000B                ??___ftmul 0036  
              ??___fttol 0044    ___ftmul@f3_as_product 003B  __end_of__initialization 07FC  
             ___ftdiv@f1 0023               ___ftdiv@f2 0020               ___ftdiv@f3 002B  
             ___awtoft@c 0028               ___ftmul@f1 0030               ___ftmul@f2 0033  
             ___fttol@f1 0040           __pcstackCOMMON 0070               ___lwtoft@c 0078  
             __pmaintext 0665                ?___awtoft 0028                ?___ftpack 0070  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?___lwtoft 0078  
           ??_PWM1_Start 0070             ??_PWM2_Start 0070                  ___aldiv 051E  
                ___ftdiv 05AD                  ___ftmul 0729                  ___fttol 0490  
     __end_of_PWM1_Start 025B       __end_of_PWM2_Start 0266               ??___awtoft 002B  
             ??___ftpack 0075                  __ptext1 025B                  __ptext2 030B  
                __ptext3 0423                  __ptext4 0252                  __ptext5 02CC  
                __ptext6 03B6                  __ptext7 0266                  __ptext8 0490  
                __ptext9 0729               ??___lwtoft 007B         ___aldiv@dividend 0074  
   end_of_initialization 07FC         ___aldiv@quotient 0022                _PWM1_Init 02CC  
              _PWM1_Duty 03B6                _PWM2_Init 030B                _PWM2_Duty 0423  
             main@Lspeed 0056               main@Rspeed 0054              ___ftdiv@exp 002E  
            ___ftmul@exp 003A               ?_PWM1_Init 0026               ?_PWM1_Duty 004E  
             ?_PWM2_Init 0026               ?_PWM2_Duty 004E      start_initialization 07FC  
          ?_PWM_Max_Duty 0026        __size_of___awtoft 0025        __size_of___ftpack 006C  
              ___latbits 0002        __size_of___lwtoft 0014            __pcstackBANK0 0020  
         ??_PWM_Max_Duty 0079                __pnvBANK0 0058                 ?___aldiv 0070  
               ?___ftdiv 0020                 ?___ftmul 0030                 ?___fttol 0040  
            ??_PWM1_Init 0079              ??_PWM1_Duty 0050              ??_PWM2_Init 0079  
            ??_PWM2_Duty 0050          ___aldiv@divisor 0070          ___aldiv@counter 0020  
          PWM1_Duty@duty 004E            PWM2_Duty@duty 004E         __size_of___aldiv 008F  
   __end_of_PWM_Max_Duty 02CC         __size_of___ftdiv 00B8         __size_of___ftmul 00D3  
       __size_of___fttol 008E                 ___awtoft 027A                 ___ftpack 034A  
               ___lwtoft 0266                 __ptext10 05AD                 __ptext11 027A  
               __ptext12 034A                 __ptext13 029F                 __ptext14 051E  
          __size_of_main 00C4             PWM1_Init@fre 0026             PWM2_Init@fre 0026  
           ___aldiv@sign 0021               _PWM1_Start 0252               _PWM2_Start 025B  
  __size_of_PWM_Max_Duty 002D  
